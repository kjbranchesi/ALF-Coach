{"version":3,"mappings":"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","names":["useState","useEffect","user","useCallback","manifestJson","id","gradeLevel","manifest","subjects","context","standards","journey","addMessage","createContext","jsx","bigIdea","differentiation","__vite_import_meta_env__","count","jsxs","stageSuggestions","resources","HelpCircle","Map","lazy","useMemo","duration","useRef","impact","wizard","baseCtx","deliverablesSequence","input","assistantMessage","suggestions","Suspense","error","title"],"ignoreList":[],"sources":["../../src/firebase/firebase.ts","../../src/hooks/useAuth.js","../../src/data/generated/hero/loader.ts","../../src/ai/context/heroContext.ts","../../src/utils/conversationFramework.ts","../../src/utils/completeness/wizardCompleteness.ts","../../src/utils/firestoreHelpers.js","../../src/utils/firestoreWithRetry.js","../../src/types/blueprint.ts","../../src/hooks/useBlueprintDoc.ts","../../src/lib/fsm-v2.ts","../../src/context/FSMContextV2.tsx","../../src/utils/normalizeProject.ts","../../src/utils/logger.ts","../../src/utils/featureFlags.ts","../../src/utils/helpContent.ts","../../src/utils/suggestionEngine.ts","../../src/utils/stageSpecificContent.ts","../../src/utils/suggestionContent.ts","../../src/utils/confirmationFramework.ts","../../src/components/chat/CompactRecapBar.tsx","../../src/utils/wizardExport.ts","../../src/utils/draftMerge.ts","../../src/components/chat/StageSpecificSuggestions.tsx","../../src/components/chat/ChatbotFirstInterfaceFixed.tsx","../../src/core/types/SOPTypes.ts","../../src/core/services/FirebaseService.ts","../../src/core/services/RevisionService.ts","../../src/core/utils/AIResponseParser.ts","../../src/core/SOPFlowManager.ts","../../src/utils/suppressFirebaseErrors.js","../../src/features/chat/ChatLoader.tsx","../../src/components/chat/ProgressSidebar.tsx","../../src/hooks/useIdleDetection.ts","../../src/components/chat/UIGuidanceSystemV2.tsx","../../src/components/chat/StageInitiatorCards.tsx","../../src/components/chat/MessageRenderer.tsx","../../src/components/chat/ContextualHelp.tsx"],"sourcesContent":["import { initializeApp, type FirebaseApp } from 'firebase/app';\nimport { getAuth, connectAuthEmulator, type Auth } from 'firebase/auth';\nimport { getFirestore, connectFirestoreEmulator, type Firestore } from 'firebase/firestore';\nimport { getStorage, type FirebaseStorage } from 'firebase/storage';\n\n// Firebase config type\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n  appId: string;\n}\n\n// Extended Firestore type with our custom property\ninterface ExtendedFirestore extends Firestore {\n  type: 'firestore' | 'offline';\n}\n\n// Read Firebase config from environment variables\n// Support both single config object and individual variables\nlet firebaseConfig: FirebaseConfig = {} as FirebaseConfig;\n\n// Try to parse config from single variable first\nif (import.meta.env.VITE_FIREBASE_CONFIG) {\n  try {\n    firebaseConfig = JSON.parse(import.meta.env.VITE_FIREBASE_CONFIG) as FirebaseConfig;\n  } catch (e) {\n    console.warn('Failed to parse VITE_FIREBASE_CONFIG, trying individual variables');\n  }\n}\n\n// If no config or parse failed, try individual variables\nif (!firebaseConfig.apiKey) {\n  firebaseConfig = {\n    apiKey: import.meta.env.VITE_FIREBASE_API_KEY || '',\n    authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN || '',\n    projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID || '',\n    storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET || '',\n    messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID || '',\n    appId: import.meta.env.VITE_FIREBASE_APP_ID || ''\n  };\n}\n\n// Initialize Firebase with deferred heavy operations\nlet app: FirebaseApp | null = null;\nlet auth: Auth | ReturnType<typeof createOfflineAuth> | null = null;\nlet db: ExtendedFirestore | ReturnType<typeof createOfflineDb> | null = null;\nlet storage: FirebaseStorage | ReturnType<typeof createOfflineStorage> | null = null;\nlet isOfflineMode = false;\nlet initialized = false;\n\n// Offline mode implementations\nconst createOfflineAuth = () => ({\n  currentUser: null,\n  onAuthStateChanged: (callback: (user: null) => void) => {\n    callback(null);\n    return () => {}; // unsubscribe function\n  },\n  signInWithEmailAndPassword: () => Promise.reject(new Error('Offline mode')),\n  createUserWithEmailAndPassword: () => Promise.reject(new Error('Offline mode')),\n  signOut: () => Promise.resolve()\n});\n\nconst createOfflineDb = () => ({\n  type: 'offline' as const,\n  collection: () => ({\n    add: () => Promise.reject(new Error('Offline mode - use localStorage')),\n    doc: () => ({\n      get: () => Promise.reject(new Error('Offline mode - use localStorage')),\n      set: () => Promise.reject(new Error('Offline mode - use localStorage')),\n      update: () => Promise.reject(new Error('Offline mode - use localStorage')),\n      delete: () => Promise.reject(new Error('Offline mode - use localStorage'))\n    })\n  })\n});\n\nconst createOfflineStorage = () => ({\n  ref: () => ({\n    put: () => Promise.reject(new Error('Offline mode - use localStorage')),\n    getDownloadURL: () => Promise.reject(new Error('Offline mode - use localStorage'))\n  })\n});\n\n// Function to initialize Firebase lazily\nconst initializeFirebase = () => {\n  if (initialized) return;\n  \n  try {\n    // Check if Firebase config is valid\n    if (!firebaseConfig.apiKey || firebaseConfig.apiKey === 'your-api-key') {\n      console.info('📱 ALF Coach running in offline mode (Firebase not configured)');\n      console.info('💡 To enable cloud sync, see: docs/firebase-setup.md');\n      isOfflineMode = true;\n      \n      // Create offline implementations\n      auth = createOfflineAuth();\n      db = createOfflineDb() as any;\n      storage = createOfflineStorage() as any;\n    } else {\n      // Initialize Firebase normally\n      app = initializeApp(firebaseConfig);\n      auth = getAuth(app);\n      db = getFirestore(app) as ExtendedFirestore;\n      storage = getStorage(app);\n      \n      // Add type identifier for Firestore\n      (db as ExtendedFirestore).type = 'firestore';\n      \n      console.info('✅ Firebase initialized successfully');\n      \n      // Optional: Connect to emulators in development\n      if (import.meta.env.DEV && import.meta.env.VITE_USE_EMULATORS === 'true') {\n        connectAuthEmulator(auth, 'http://localhost:9099');\n        connectFirestoreEmulator(db, 'localhost', 8080);\n        console.info('🔧 Connected to Firebase emulators');\n      }\n    }\n    initialized = true;\n  } catch (error: any) {\n    console.warn('⚠️ Firebase initialization failed, switching to offline mode:', error.message);\n    isOfflineMode = true;\n    \n    // Provide offline implementations\n    auth = createOfflineAuth();\n    db = createOfflineDb() as any;\n    storage = createOfflineStorage() as any;\n    initialized = true;\n  }\n};\n\n// Initialize immediately for now (can be made lazy later if needed)\ninitializeFirebase();\n\n// Export services and offline mode status\nexport { auth, db, storage, isOfflineMode };","// src/hooks/useAuth.js\n\nimport { useState, useEffect, useCallback } from 'react';\nimport {\n  onAuthStateChanged,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  GoogleAuthProvider,\n  OAuthProvider, // For Apple and Microsoft\n  signInAnonymously,\n  signOut,\n} from 'firebase/auth';\nimport { auth } from '../firebase/firebase';\n\n/**\n * A custom React hook to manage the user's authentication state and actions.\n * It now handles multiple sign-in methods and provides a clear auth status.\n */\nexport const useAuth = () => {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // The onAuthStateChanged listener is the single source of truth for the user's auth state.\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setUser(user);\n      setIsLoading(false);\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  // --- Email & Password Methods ---\n  const signUpWithEmail = useCallback(async (email, password) => {\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Sign up failed:\", err);\n    }\n  }, []);\n\n  const signInWithEmail = useCallback(async (email, password) => {\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Sign in failed:\", err);\n    }\n  }, []);\n\n  // --- Social & Anonymous Methods ---\n  const signInWithGoogle = useCallback(async () => {\n    setError(null);\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Google sign in failed:\", err);\n    }\n  }, []);\n\n  const signInWithApple = useCallback(async () => {\n    setError(null);\n    const provider = new OAuthProvider('apple.com');\n    try {\n      await signInWithPopup(auth, provider);\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Apple sign in failed:\", err);\n    }\n  }, []);\n  \n  const signInWithMicrosoft = useCallback(async () => {\n    setError(null);\n    const provider = new OAuthProvider('microsoft.com');\n    try {\n      await signInWithPopup(auth, provider);\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Microsoft sign in failed:\", err);\n    }\n  }, []);\n\n  const continueAsGuest = useCallback(async () => {\n    setError(null);\n    try {\n      await signInAnonymously(auth);\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Anonymous sign-in failed:\", err);\n    }\n  }, []);\n\n  // --- Sign Out ---\n  const logout = useCallback(async () => {\n    setError(null);\n    try {\n      await signOut(auth);\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Sign out failed:\", err);\n    }\n  }, []);\n\n  return {\n    user,\n    userId: user?.uid,\n    isAnonymous: user?.isAnonymous,\n    isLoading,\n    error,\n    signUpWithEmail,\n    signInWithEmail,\n    signInWithGoogle,\n    signInWithApple,\n    signInWithMicrosoft,\n    continueAsGuest,\n    logout,\n  };\n};\n","import type { HeroProjectData } from '../../../utils/hero/types';\n\ninterface HeroManifestEntry {\n  id: string;\n  title: string;\n  duration: string;\n  gradeLevel: string;\n  subjects: string[];\n  path: string;\n}\n\ninterface HeroManifest {\n  generatedAt: string;\n  count: number;\n  projects: HeroManifestEntry[];\n}\n\nimport type { createRequire as CreateRequire } from 'module';\n\ndeclare const module: {\n  createRequire?: CreateRequire;\n};\n\nimport manifestJson from './manifest.json';\n\nconst manifest = manifestJson as HeroManifest;\n\nconst isNodeRuntime = typeof process !== 'undefined' && Boolean(process.versions?.node);\n\nfunction loadWithViteGlob(): Record<string, HeroProjectData> {\n  try {\n    return import.meta.glob('./*.json', {\n      eager: true,\n      import: 'default'\n    }) as Record<string, HeroProjectData>;\n  } catch {\n    return {};\n  }\n}\n\nfunction loadWithNodeFs(): Record<string, HeroProjectData> {\n  if (!isNodeRuntime) {\n    return {};\n  }\n\n  const createRequire = typeof module !== 'undefined' ? module.createRequire : undefined;\n  if (typeof createRequire !== 'function') {\n    return {};\n  }\n\n  const requireFn = createRequire(import.meta.url);\n  const { readFileSync, readdirSync } = requireFn('node:fs') as typeof import('node:fs');\n  const { fileURLToPath } = requireFn('node:url') as typeof import('node:url');\n  const { dirname, resolve } = requireFn('node:path') as typeof import('node:path');\n\n  const dir = dirname(fileURLToPath(import.meta.url));\n  const files = readdirSync(dir).filter(file => file.endsWith('.json'));\n\n  return Object.fromEntries(\n    files.map(file => {\n      const contents = readFileSync(resolve(dir, file), 'utf-8');\n      return [`./${file}`, JSON.parse(contents) as HeroProjectData];\n    })\n  );\n}\n\nconst projectModules: Record<string, HeroProjectData> = (() => {\n  const viaVite = loadWithViteGlob();\n  if (Object.keys(viaVite).length > 0) {\n    return viaVite;\n  }\n  if (isNodeRuntime) {\n    return loadWithNodeFs();\n  }\n  return {};\n})();\n\nconst projectsById: Record<string, HeroProjectData> = Object.fromEntries(\n  Object.entries(projectModules)\n    .filter(([key]) => !key.endsWith('manifest.json'))\n    .map(([key, value]) => {\n      const id = key.replace('./', '').replace('.json', '');\n      return [id, value as HeroProjectData];\n    })\n);\n\nexport function listGeneratedHeroProjects(): HeroManifestEntry[] {\n  return manifest.projects;\n}\n\nexport function getGeneratedHeroProject(id: string): HeroProjectData | undefined {\n  return projectsById[id];\n}\n\nexport function getGeneratedHeroManifest(): HeroManifest {\n  return manifest;\n}\n","import type { HeroProjectData } from '../../utils/hero/types';\nimport {\n  listGeneratedHeroProjects,\n  getGeneratedHeroProject\n} from '../../data/generated/hero/loader';\n\nexport interface HeroPromptReference {\n  id: string;\n  title: string;\n  subjects: string[];\n  gradeLevel: string;\n  duration: string;\n  bigIdea: string;\n  essentialQuestion: string;\n  challenge: string;\n  studentRole: string;\n  authenticity: string;\n  summary: string;\n  milestoneHighlights: Array<{ id: string; title: string; description: string }>;\n  assessmentFocus: string[];\n  metricHighlights: Array<{ metric: string; target: string }>;\n  impactSummary: string;\n  resourceHighlights: string[];\n}\n\ninterface HeroPromptCache {\n  references: HeroPromptReference[];\n  byId: Map<string, HeroPromptReference>;\n  bySubject: Map<string, HeroPromptReference[]>;\n  byGrade: Map<string, HeroPromptReference[]>;\n}\n\nexport interface HeroPromptQueryOptions {\n  limit?: number;\n  subjects?: string[];\n  gradeLevels?: string[];\n  pinnedIds?: string[];\n}\n\nconst SUBJECT_DELIMITERS = /[\\s/&,+-]+/g;\n\nfunction normaliseToken(value: string): string {\n  return value.trim().toLowerCase();\n}\n\nfunction expandGradeTokens(gradeLevel: string): string[] {\n  const tokens = new Set<string>();\n  const normalised = normaliseToken(gradeLevel);\n  tokens.add(normalised);\n  if (normalised.includes('elementary')) tokens.add('elementary');\n  if (normalised.includes('middle')) tokens.add('middle');\n  if (normalised.includes('high')) tokens.add('high');\n  if (normalised.includes('upper')) tokens.add('upper-secondary');\n  if (normalised.includes('secondary')) tokens.add('secondary');\n  if (normalised.includes('college') || normalised.includes('higher')) tokens.add('higher-ed');\n  if (normalised.includes('adult')) tokens.add('adult');\n  return Array.from(tokens);\n}\n\nfunction summariseProject(project: HeroProjectData): HeroPromptReference {\n  const milestones = project.journey.milestones.slice(0, 3).map(milestone => ({\n    id: milestone.id,\n    title: milestone.title,\n    description: milestone.description\n  }));\n\n  const assessments = project.assessment.rubric.slice(0, 3).map(rubric => rubric.category);\n\n  const metricHighlights = project.impact?.metrics?.slice(0, 3).map(metric => ({\n    metric: metric.metric,\n    target: metric.target\n  })) ?? [];\n\n  const resourceHighlights = project.resources?.required?.slice(0, 2).map(resource => {\n    const label = resource.category;\n    const sample = resource.items?.[0];\n    return sample ? `${label}: ${sample}` : label;\n  }) ?? [];\n\n  const impactSummary = project.impact?.community?.slice(0, 2).join(' ') ||\n    project.impact?.personal?.slice(0, 2).join(' ') || '';\n\n  return {\n    id: project.id,\n    title: project.title,\n    subjects: project.subjects,\n    gradeLevel: project.gradeLevel,\n    duration: project.duration,\n    bigIdea: project.bigIdea.statement,\n    essentialQuestion: project.bigIdea.essentialQuestion,\n    challenge: project.bigIdea.challenge,\n    studentRole: project.context.studentRole,\n    authenticity: project.context.authenticity,\n    summary: project.courseAbstract.overview,\n    milestoneHighlights: milestones,\n    assessmentFocus: assessments,\n    metricHighlights,\n    impactSummary,\n    resourceHighlights\n  };\n}\n\nlet heroPromptCache: HeroPromptCache | null = null;\n\nfunction ensureCache(): HeroPromptCache {\n  if (heroPromptCache) {\n    return heroPromptCache;\n  }\n\n  const manifest = listGeneratedHeroProjects();\n  const references = manifest\n    .map(entry => getGeneratedHeroProject(entry.id))\n    .filter((project): project is HeroProjectData => Boolean(project))\n    .map(project => summariseProject(project));\n\n  const byId = new Map<string, HeroPromptReference>();\n  const bySubject = new Map<string, HeroPromptReference[]>();\n  const byGrade = new Map<string, HeroPromptReference[]>();\n\n  for (const reference of references) {\n    byId.set(reference.id, reference);\n\n    reference.subjects.forEach(subject => {\n      const subjectTokens = subject.split(SUBJECT_DELIMITERS).map(normaliseToken).filter(Boolean);\n      subjectTokens.forEach(token => {\n        const list = bySubject.get(token) ?? [];\n        list.push(reference);\n        bySubject.set(token, list);\n      });\n    });\n\n    expandGradeTokens(reference.gradeLevel).forEach(token => {\n      const list = byGrade.get(token) ?? [];\n      list.push(reference);\n      byGrade.set(token, list);\n    });\n  }\n\n  heroPromptCache = { references, byId, bySubject, byGrade };\n  return heroPromptCache;\n}\n\nfunction addUnique(accumulator: HeroPromptReference[], candidates: HeroPromptReference[]) {\n  for (const candidate of candidates) {\n    if (!accumulator.some(existing => existing.id === candidate.id)) {\n      accumulator.push(candidate);\n    }\n  }\n}\n\nexport function queryHeroPromptReferences(options: HeroPromptQueryOptions = {}): HeroPromptReference[] {\n  const { limit = 6, subjects = [], gradeLevels = [], pinnedIds = [] } = options;\n  const cache = ensureCache();\n\n  if (limit <= 0) {\n    return [];\n  }\n\n  const results: HeroPromptReference[] = [];\n\n  pinnedIds.forEach(id => {\n    const ref = cache.byId.get(id);\n    if (ref) addUnique(results, [ref]);\n  });\n\n  const normalisedSubjects = subjects.map(normaliseToken).filter(Boolean);\n  for (const subject of normalisedSubjects) {\n    const references = cache.bySubject.get(subject);\n    if (references) addUnique(results, references);\n  }\n\n  const normalisedGrades = gradeLevels.flatMap(expandGradeTokens).map(normaliseToken).filter(Boolean);\n  for (const grade of normalisedGrades) {\n    const references = cache.byGrade.get(grade);\n    if (references) addUnique(results, references);\n  }\n\n  if (results.length < limit) {\n    addUnique(results, cache.references);\n  }\n\n  return results.slice(0, limit);\n}\n\nexport function getHeroPromptReferences(limit = 6): HeroPromptReference[] {\n  return queryHeroPromptReferences({ limit });\n}\n\nexport function getHeroPromptReferenceById(id: string): HeroPromptReference | undefined {\n  const cache = ensureCache();\n  return cache.byId.get(id);\n}\n\nexport function invalidateHeroPromptCache() {\n  heroPromptCache = null;\n}\n","/**\n * conversationFramework.ts\n * \n * Better grounding and guidance for teachers using ALF\n */\n\nexport interface ConversationStage {\n  id: string;\n  name: string;\n  description: string;\n  readyForCards: boolean;\n  messages: {\n    initial?: string;\n    followup?: string;\n    transition?: string;\n  };\n}\n\nexport const CONVERSATION_STAGES: Record<string, ConversationStage> = {\n  GROUNDING: {\n    id: 'GROUNDING',\n    name: 'Framework Introduction',\n    description: 'Introduce the teacher to ALF and understand their context',\n    readyForCards: false,\n    messages: {\n      initial: `# Welcome to ALF Coach!\n\nI'm here to help you design an engaging project-based learning experience using the **Active Learning Framework (ALF)**.\n\n## What is ALF?\n\nALF is a proven framework that guides students through the **Creative Process** to develop critical 21st-century skills. Your students will:\n\n1. **Analyze** - Research and understand the problem space\n2. **Brainstorm** - Generate creative solutions\n3. **Prototype** - Build and test their ideas\n4. **Evaluate** - Reflect and iterate on their work\n\n## Let's Start with You\n\nBefore we design your project, I'd like to understand your teaching context better.\n\n**What subject area do you teach?** \n\n*(For example: Science, Math, English, History, Art, etc.)*`,\n      \n      followup: `Great! I see you teach **{subject}**. \n\nNow, let's understand your students better so we can design an age-appropriate project.\n\n**What grade level or age group are your students?**\n\n*(For example: 9th grade, ages 14-15, high school seniors, etc.)*`,\n      \n      transition: `Perfect! You're teaching **{subject}** to **{gradeLevel}** students.\n\nOne more quick question before we start designing:\n\n**How long do you have for this project?**\n\nConsider:\n- Quick sprint: 1-2 weeks\n- Standard project: 3-4 weeks  \n- Deep dive: 5-8 weeks\n- Semester-long: 12+ weeks`\n    }\n  },\n  \n  IDEATION_INTRO: {\n    id: 'IDEATION_INTRO',\n    name: 'Ideation Introduction',\n    description: 'Explain the ideation phase before showing cards',\n    readyForCards: false,\n    messages: {\n      initial: `## Excellent! Let's Design Your Project\n\nYou're teaching **{subject}** to **{gradeLevel}** students for **{duration}**.\n\nNow we'll work through three key elements that will form the foundation of your project:\n\n### The Three Pillars of ALF\n\n1. **Big Idea** - The overarching theme or concept that connects to real-world issues\n2. **Essential Question** - The driving inquiry that guides student exploration\n3. **Challenge** - The authentic task students will tackle\n\nThese work together to create meaningful, engaging learning experiences.\n\n**Let's start with the Big Idea.**\n\nThink about:\n- What themes in your subject connect to students' lives?\n- What concepts have real-world relevance?\n- What would make students say \"this matters\"?\n\n*What topic or theme would you like to explore with your students?*`\n    }\n  },\n  \n  BIG_IDEA: {\n    id: 'BIG_IDEA',\n    name: 'Big Idea Development',\n    description: 'Help teacher develop their Big Idea',\n    readyForCards: true,\n    messages: {\n      initial: `I can help you develop a compelling **Big Idea** around that topic.\n\nA strong Big Idea should:\n- Connect to real-world issues\n- Be conceptual (not just a topic)\n- Resonate with student interests\n- Allow for multiple perspectives\n\nWould you like me to suggest some Big Ideas, or do you have one in mind?`,\n      \n      followup: `That's a great starting point! Let me help you refine this into a powerful Big Idea.\n\n**Current concept:** {userInput}\n\nHere are some ways to strengthen it:\n\n1. **Make it more conceptual** - Move from topic to theme\n2. **Add relevance** - Connect to current events or student lives\n3. **Broaden perspective** - Allow for multiple viewpoints\n\n*How would you like to develop this further?*`\n    }\n  },\n  \n  ESSENTIAL_QUESTION: {\n    id: 'ESSENTIAL_QUESTION',\n    name: 'Essential Question',\n    description: 'Craft the driving question',\n    readyForCards: true,\n    messages: {\n      initial: `Excellent! Your Big Idea is taking shape:\n\n> **{bigIdea}**\n\nNow let's create an **Essential Question** that will drive student inquiry.\n\nA powerful Essential Question:\n- Is open-ended (no single right answer)\n- Provokes deep thinking\n- Connects to the Big Idea\n- Matters to students\n\n*What question would you want students to explore throughout this project?*`\n    }\n  },\n  \n  CHALLENGE: {\n    id: 'CHALLENGE',\n    name: 'Challenge Design',\n    description: 'Define the authentic challenge',\n    readyForCards: true,\n    messages: {\n      initial: `Perfect! We now have:\n\n> **Big Idea:** {bigIdea}\n> **Essential Question:** {essentialQuestion}\n\nThe final piece is the **Challenge** - the authentic task students will complete.\n\nA meaningful Challenge should:\n- Address a real problem or need\n- Allow for creative solutions\n- Connect to the community\n- Result in a tangible outcome\n\n*What real-world problem or task could students tackle that relates to your Big Idea and Essential Question?*`\n    }\n  }\n};\n\nexport function getStageMessage(\n  stage: string, \n  messageType: 'initial' | 'followup' | 'transition',\n  context?: Record<string, string>\n): string {\n  const stageConfig = CONVERSATION_STAGES[stage];\n  if (!stageConfig) return '';\n  \n  let message = stageConfig.messages[messageType] || '';\n  \n  // Replace placeholders with context values\n  if (context) {\n    Object.entries(context).forEach(([key, value]) => {\n      message = message.replace(new RegExp(`{${key}}`, 'g'), value);\n    });\n  }\n  \n  return message;\n}\n\nexport function shouldShowCards(stage: string, messageCount: number): boolean {\n  const stageConfig = CONVERSATION_STAGES[stage];\n  if (!stageConfig) return false;\n  \n  // Only show cards if:\n  // 1. The stage is ready for cards\n  // 2. We've had enough conversation to establish context\n  // 3. User seems ready (based on message count)\n  return stageConfig.readyForCards && messageCount >= 2;\n}\n\nexport function getNextStage(currentStage: string): string {\n  const stageOrder = [\n    'GROUNDING',\n    'IDEATION_INTRO', \n    'BIG_IDEA',\n    'ESSENTIAL_QUESTION',\n    'CHALLENGE',\n    'JOURNEY',\n    'DELIVERABLES'\n  ];\n  \n  const currentIndex = stageOrder.indexOf(currentStage);\n  if (currentIndex === -1 || currentIndex === stageOrder.length - 1) {\n    return currentStage;\n  }\n  \n  return stageOrder[currentIndex + 1];\n}","import type { WizardData, WizardDataV3 } from '../../features/wizard/wizardSchema';\n\nexport interface CategoryResult {\n  percentage: number;\n  missing: string[];\n}\n\nexport interface WizardCompletenessResult {\n  core: CategoryResult;\n  context: CategoryResult;\n  progressive: CategoryResult;\n  summary: {\n    core: number;\n    context: number;\n    progressive: number;\n    overall: number;\n  };\n}\n\ntype WizardInput = Partial<WizardData> | Partial<WizardDataV3>;\n\ntype Requirement = {\n  label: string;\n  weight?: number;\n  check: (data: WizardInput) => boolean;\n};\n\nconst DEFAULT_WEIGHT = 1;\n\nconst CORE_REQUIREMENTS: Requirement[] = [\n  {\n    label: 'Project topic',\n    check: data => typeof data.projectTopic === 'string' && data.projectTopic.trim().length >= 20\n  },\n  {\n    label: 'Learning goals',\n    check: data => {\n      const v3 = data as WizardDataV3;\n      if (Array.isArray(v3.learningGoals)) {\n        return v3.learningGoals.length > 0 && v3.learningGoals.every(goal => {\n          if (!goal) return false;\n          if (typeof (goal as any).text === 'string') {\n            return (goal as any).text.trim().length > 0;\n          }\n          return typeof goal === 'string' && goal.trim().length > 0;\n        });\n      }\n      const legacy = (data as WizardData).learningGoals;\n      return typeof legacy === 'string' && legacy.trim().length >= 20;\n    }\n  },\n  {\n    label: 'Vision statement',\n    check: data => typeof (data as any).vision === 'string' && (data as any).vision.trim().length >= 20\n  },\n  {\n    label: 'Essential question',\n    check: data => {\n      const v3 = data as WizardDataV3;\n      if (typeof v3?.essentialQuestion === 'string') {\n        return v3.essentialQuestion.trim().length >= 10;\n      }\n      if (v3?.essentialQuestion && typeof (v3 as any).essentialQuestion?.text === 'string') {\n        return (v3 as any).essentialQuestion.text.trim().length >= 10;\n      }\n      const legacy = (data as any).drivingQuestion || (data as any).essentialQuestion;\n      return typeof legacy === 'string' && legacy.trim().length >= 10;\n    }\n  }\n];\n\nconst CONTEXT_REQUIREMENTS: Requirement[] = [\n  {\n    label: 'Subjects',\n    check: data => Array.isArray(data.subjects) && data.subjects.length > 0\n  },\n  {\n    label: 'Primary subject',\n    check: data => typeof data.primarySubject === 'string' && data.primarySubject.trim().length > 0\n  },\n  {\n    label: 'Grade level',\n    check: data => typeof data.gradeLevel === 'string' && data.gradeLevel.trim().length > 0\n  },\n  {\n    label: 'Project duration',\n    check: data => typeof data.duration === 'string' && data.duration.trim().length > 0\n  },\n  {\n    label: 'Project context details',\n    check: data => {\n      const context = (data as WizardDataV3).projectContext;\n      if (!context) return false;\n      const hasSchedule = Boolean(context.schedule);\n      const hasTech = Array.isArray((context as any).availableTech) && (context as any).availableTech.length > 0;\n      const hasResources = Array.isArray(context.resources) && context.resources.length > 0;\n      return hasSchedule || hasTech || hasResources;\n    }\n  }\n];\n\nconst PROGRESSIVE_REQUIREMENTS: Requirement[] = [\n  {\n    label: 'Standards alignment',\n    check: data => {\n      const standards = (data as WizardDataV3).standardsAlignment;\n      return Boolean(standards && Array.isArray(standards.standards) && standards.standards.length > 0);\n    }\n  },\n  {\n    label: 'Phases mapped',\n    check: data => Array.isArray((data as WizardDataV3).phases) && Boolean((data as WizardDataV3).phases?.length)\n  },\n  {\n    label: 'Milestones defined',\n    check: data => Array.isArray((data as WizardDataV3).milestones) && Boolean((data as WizardDataV3).milestones?.length)\n  },\n  {\n    label: 'Artifacts or deliverables',\n    check: data => Array.isArray((data as WizardDataV3).artifacts) && Boolean((data as WizardDataV3).artifacts?.length)\n  },\n  {\n    label: 'Rubrics or assessments',\n    check: data => Array.isArray((data as WizardDataV3).rubrics) && Boolean((data as WizardDataV3).rubrics?.length)\n  },\n  {\n    label: 'Differentiation supports',\n    check: data => Boolean((data as WizardDataV3).differentiation)\n  },\n  {\n    label: 'Evidence plan',\n    check: data => Boolean((data as WizardDataV3).evidencePlan)\n  },\n  {\n    label: 'Communications plan',\n    check: data => Boolean((data as WizardDataV3).communications)\n  },\n  {\n    label: 'Exhibition plan',\n    check: data => Boolean((data as WizardDataV3).exhibition)\n  }\n];\n\nfunction evaluateCategory(requirements: Requirement[], data: WizardInput): CategoryResult {\n  let totalWeight = 0;\n  let completedWeight = 0;\n  const missing: string[] = [];\n\n  requirements.forEach(requirement => {\n    const weight = requirement.weight ?? DEFAULT_WEIGHT;\n    totalWeight += weight;\n    const satisfied = requirement.check(data);\n    if (satisfied) {\n      completedWeight += weight;\n    } else {\n      missing.push(requirement.label);\n    }\n  });\n\n  const percentage = totalWeight === 0 ? 0 : Math.round((completedWeight / totalWeight) * 100);\n  return { percentage, missing };\n}\n\nexport function evaluateWizardCompleteness(data: WizardInput): WizardCompletenessResult {\n  const core = evaluateCategory(CORE_REQUIREMENTS, data);\n  const context = evaluateCategory(CONTEXT_REQUIREMENTS, data);\n  const progressive = evaluateCategory(PROGRESSIVE_REQUIREMENTS, data);\n  const overall = Math.round((core.percentage + context.percentage + progressive.percentage) / 3);\n\n  return {\n    core,\n    context,\n    progressive,\n    summary: {\n      core: core.percentage,\n      context: context.percentage,\n      progressive: progressive.percentage,\n      overall\n    }\n  };\n}\n","import { auth } from '../firebase/firebase';\n\n/**\n * Wait for authentication to be ready\n * @param {number} timeout - Maximum time to wait in milliseconds\n * @returns {Promise<boolean>} Whether auth is ready\n */\nexport async function waitForAuth(timeout = 5000) {\n  const startTime = Date.now();\n  \n  return new Promise((resolve) => {\n    // If already authenticated, resolve immediately\n    if (auth.currentUser) {\n      resolve(true);\n      return;\n    }\n    \n    // Listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        unsubscribe();\n        resolve(true);\n      } else if (Date.now() - startTime > timeout) {\n        unsubscribe();\n        resolve(false);\n      }\n    });\n    \n    // Timeout fallback\n    setTimeout(() => {\n      unsubscribe();\n      resolve(false);\n    }, timeout);\n  });\n}\n\n/**\n * Safely perform Firestore operations with auth check\n * @param {Function} operation - The Firestore operation to perform\n * @param {string} errorMessage - Custom error message\n * @param {boolean} requireAuth - Whether to require authentication (default: true)\n * @returns {Promise<any>} The result of the operation\n */\nexport async function safeFirestoreOperation(operation, errorMessage = \"Firestore operation failed\", requireAuth = true) {\n  try {\n    // Wait for auth to be ready if required\n    if (requireAuth) {\n      const authReady = await waitForAuth();\n      if (!authReady && !auth.currentUser) {\n        console.warn(\"No authenticated user for Firestore operation. Using localStorage fallback.\");\n        return null;\n      }\n    }\n    \n    // Perform the operation\n    return await operation();\n  } catch (error) {\n    console.error(errorMessage, error);\n    \n    // Check for specific error types\n    if (error.code === 'permission-denied') {\n      console.error(\"Firestore permission denied. Check security rules and authentication.\");\n      console.error(\"Current user:\", auth.currentUser?.uid || 'none');\n    } else if (error.code === 'unavailable') {\n      console.error(\"Firestore service unavailable. Check network connection.\");\n    } else if (error.message?.includes('400')) {\n      console.error(\"Bad request to Firestore. Check data format.\");\n    }\n    \n    // Don't throw the error, return null to trigger fallback\n    return null;\n  }\n}\n\n/**\n * Cleanup function for Firestore listeners\n * @param {Function|null} unsubscribe - The unsubscribe function\n */\nexport function cleanupFirestoreListener(unsubscribe) {\n  if (unsubscribe && typeof unsubscribe === 'function') {\n    try {\n      unsubscribe();\n    } catch (error) {\n      console.error(\"Error cleaning up Firestore listener:\", error);\n    }\n  }\n}","import { safeFirestoreOperation, waitForAuth } from './firestoreHelpers';\n\n// Note: We'll import and use the error reporter where this is used, not here\n// to avoid circular dependencies\n\n/**\n * Retry configuration\n */\nconst RETRY_CONFIG = {\n  maxAttempts: 3,\n  initialDelay: 1000, // 1 second\n  maxDelay: 5000, // 5 seconds\n  backoffMultiplier: 2\n};\n\n/**\n * Sleep for specified milliseconds\n */\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n/**\n * Perform a Firestore operation with retry logic\n * @param {Function} operation - The Firestore operation to perform\n * @param {Object} options - Options for the operation\n * @param {string} options.errorMessage - Custom error message\n * @param {boolean} options.requireAuth - Whether to require authentication\n * @param {number} options.maxAttempts - Maximum retry attempts\n * @param {Function} options.fallback - Fallback function if all retries fail\n * @returns {Promise<any>} The result of the operation\n */\nexport async function firestoreOperationWithRetry(\n  operation,\n  {\n    errorMessage = \"Firestore operation failed\",\n    requireAuth = true,\n    maxAttempts = RETRY_CONFIG.maxAttempts,\n    fallback = null\n  } = {}\n) {\n  let lastError = null;\n  let delay = RETRY_CONFIG.initialDelay;\n\n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      // Use safeFirestoreOperation for auth checks\n      const result = await safeFirestoreOperation(operation, errorMessage, requireAuth);\n      \n      // If we got a result (not null), return it\n      if (result !== null) {\n        return result;\n      }\n      \n      // If null was returned, it means auth failed or operation failed\n      // Try fallback if this is the last attempt\n      if (attempt === maxAttempts && fallback) {\n        console.log(\"All Firestore attempts failed, using fallback\");\n        return await fallback();\n      }\n      \n      throw new Error(\"Operation returned null\");\n      \n    } catch (error) {\n      lastError = error;\n      \n      // Don't retry on permission errors - they won't succeed\n      if (error.code === 'permission-denied') {\n        console.error(\"Permission denied, not retrying\");\n        if (fallback) {\n          return await fallback();\n        }\n        throw error;\n      }\n      \n      // Check if we should retry\n      if (attempt < maxAttempts) {\n        console.log(`Attempt ${attempt} failed, retrying in ${delay}ms...`);\n        await sleep(delay);\n        \n        // Exponential backoff\n        delay = Math.min(delay * RETRY_CONFIG.backoffMultiplier, RETRY_CONFIG.maxDelay);\n        \n        // Wait for auth to be ready before next attempt\n        if (requireAuth) {\n          await waitForAuth(5000);\n        }\n      }\n    }\n  }\n  \n  // All attempts failed\n  console.error(`All ${maxAttempts} attempts failed:`, lastError);\n  \n  if (fallback) {\n    console.log(\"Using fallback after all retries failed\");\n    return await fallback();\n  }\n  \n  throw lastError;\n}\n\n/**\n * Helper to create a localStorage fallback\n * @param {string} key - The localStorage key\n * @param {any} data - The data to store\n * @param {string} operation - The operation type ('get', 'set', 'delete')\n */\nexport function createLocalStorageFallback(key, data = null, operation = 'get') {\n  return async () => {\n    try {\n      switch (operation) {\n        case 'get':\n          const stored = localStorage.getItem(key);\n          return stored ? JSON.parse(stored) : null;\n          \n        case 'set':\n          localStorage.setItem(key, JSON.stringify(data));\n          return data;\n          \n        case 'delete':\n          localStorage.removeItem(key);\n          return true;\n          \n        default:\n          throw new Error(`Unknown operation: ${operation}`);\n      }\n    } catch (error) {\n      console.error(\"LocalStorage fallback error:\", error);\n      return null;\n    }\n  };\n}","/**\n * Comprehensive TypeScript interfaces for blueprint data structures\n * Created to resolve type safety issues identified in quality audit\n */\n\n// Base interfaces for project data structures\nexport interface WizardData {\n  projectTopic: string;\n  learningGoals: string;\n  entryPoint: 'learning_goal' | 'authentic_problem' | 'creative_challenge';\n  subjects: string[];\n  primarySubject: string;\n  gradeLevel: 'early-elementary' | 'elementary' | 'middle' | 'high' | 'upper-secondary';\n  duration: 'short' | 'medium' | 'long';\n  materials?: string;\n  subject: string;\n  location?: string;\n  featured?: boolean;\n  communityPartners?: string[];\n  // Legacy fields for backward compatibility\n  ageGroup?: string;\n  motivation?: string;\n  scope?: string;\n}\n\nexport interface StudentVoice {\n  drivingQuestions: string[];\n  choicePoints: string[];\n}\n\nexport interface IdeationData {\n  bigIdea: string;\n  essentialQuestion: string;\n  challenge: string;\n  studentVoice?: StudentVoice;\n}\n\n// Journey phase and activity structures\nexport interface PhaseInterdisciplinary {\n  science?: string;\n  mathematics?: string;\n  socialStudies?: string;\n  languageArts?: string;\n  arts?: string;\n  technology?: string;\n}\n\nexport interface JourneyPhase {\n  id: string;\n  name: string;\n  description?: string;\n  goal: string;\n  activity: string;\n  output: string;\n  duration: string;\n  interdisciplinary?: PhaseInterdisciplinary;\n}\n\nexport interface Activity {\n  id: string;\n  name: string;\n  phaseId: string;\n  description?: string;\n  duration?: string;\n}\n\nexport interface Resource {\n  name: string;\n  type?: string;\n  url?: string;\n  description?: string;\n}\n\n// Assessment and deliverables structures\nexport interface RubricCriterion {\n  id: string;\n  name: string;\n  description: string;\n  levels?: string[];\n}\n\nexport interface Rubric {\n  criteria: RubricCriterion[];\n  scale?: string[];\n  type?: 'analytical' | 'holistic' | 'single-point';\n}\n\nexport interface Milestone {\n  id: string;\n  name: string;\n  description?: string;\n  dueDate?: string;\n}\n\nexport interface ImpactData {\n  audience: string;\n  method?: string;\n  timeline?: string;\n  measures?: string[];\n}\n\nexport interface Deliverables {\n  milestones?: Milestone[];\n  rubric?: Rubric;\n  impact?: ImpactData;\n  assessmentStrategy?: string;\n}\n\n// Main journey data structure\nexport interface JourneyData {\n  phases?: JourneyPhase[];\n  activities?: Activity[];\n  resources?: Resource[];\n  deliverables?: Deliverables;\n  // Legacy structure support (backward compatibility)\n  investigate?: JourneyPhase;\n  strategize?: JourneyPhase;\n  implement?: JourneyPhase;\n  advocate?: JourneyPhase;\n  analyze?: JourneyPhase;\n  brainstorm?: JourneyPhase;\n  prototype?: JourneyPhase;\n  evaluate?: JourneyPhase;\n}\n\n// Standards alignment structures\nexport interface StandardAlignment {\n  framework: 'NGSS' | 'CCSS-ELA' | 'CCSS-Math' | 'C3' | 'NVAS' | 'ISTE';\n  standardId: string;\n  description: string;\n  alignment: 'primary' | 'secondary';\n  evidence?: string;\n}\n\nexport interface StandardsFramework {\n  alignments: StandardAlignment[];\n  gradeLevel: string;\n  totalStandards: number;\n  coverage: {\n    science?: number;\n    mathematics?: number;\n    ela?: number;\n    socialStudies?: number;\n    arts?: number;\n  };\n}\n\n// Enhanced sample blueprint type (extends base SampleBlueprint)\nexport interface EnhancedBlueprintDoc {\n  id: string;\n  userId: string;\n  createdAt: Date | string;\n  updatedAt: Date | string;\n  wizardData: WizardData;\n  ideation?: IdeationData;\n  journey?: JourneyData;\n  journeyData?: JourneyData; // Alias for backward compatibility\n  deliverables?: Deliverables;\n  sample?: boolean;\n  assignments?: any[];\n  alignment?: StandardsFramework;\n  featured?: boolean;\n  // Chat and state data\n  chatHistory?: ChatMessage[];\n  conversationState?: any;\n  contextCompleteness?: {\n    coreCompleteness: number;\n    contextCompleteness: number;\n    progressiveCompleteness: number;\n    lastUpdated: Date;\n  };\n}\n\n// Chat message interface (from useBlueprintDoc)\nexport interface ChatMessage {\n  id: string;\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: Date;\n  suggestions?: string[];\n}\n\n// For environment variables type safety\nexport interface ImportMetaEnv {\n  VITE_ENABLE_DOWNLOADS?: string;\n  VITE_PDF_EXPORT_ENABLED?: string;\n  VITE_ENVIRONMENT?: string;\n}\n\nexport interface ImportMeta {\n  env: ImportMetaEnv;\n}\n\n// Type guards for runtime type checking\nexport function isEnhancedBlueprintDoc(obj: any): obj is EnhancedBlueprintDoc {\n  return obj && \n         typeof obj === 'object' && \n         typeof obj.id === 'string' &&\n         typeof obj.wizardData === 'object';\n}\n\nexport function hasJourneyData(blueprint: EnhancedBlueprintDoc): boolean {\n  return !!(blueprint.journey || blueprint.journeyData);\n}\n\nexport function getJourneyData(blueprint: EnhancedBlueprintDoc): JourneyData | undefined {\n  return blueprint.journeyData || blueprint.journey;\n}\n\n// Helper functions for data transformation\nexport function transformLegacyJourney(journey: any): JourneyData {\n  if (!journey) return {};\n  \n  // If it's already the new format\n  if (journey.phases && Array.isArray(journey.phases)) {\n    return journey as JourneyData;\n  }\n  \n  // Transform legacy format to new format\n  const phases: JourneyPhase[] = [];\n  \n  // Map legacy phase names to new format\n  const legacyPhases = ['investigate', 'strategize', 'implement', 'advocate', 'analyze', 'brainstorm', 'prototype', 'evaluate'];\n  \n  legacyPhases.forEach((phaseName, index) => {\n    if (journey[phaseName]) {\n      const phase = journey[phaseName];\n      phases.push({\n        id: `phase-${index + 1}`,\n        name: phase.goal || phaseName,\n        description: phase.activity || '',\n        goal: phase.goal || '',\n        activity: phase.activity || '',\n        output: phase.output || '',\n        duration: phase.duration || '',\n        interdisciplinary: phase.interdisciplinary\n      });\n    }\n  });\n  \n  return {\n    phases,\n    activities: [],\n    resources: [],\n    ...journey\n  };\n}\n\n// Export type for backward compatibility with existing code\nexport type SampleBlueprint = EnhancedBlueprintDoc;","import { useState, useEffect } from 'react';\nimport { doc, getDoc, onSnapshot, setDoc, updateDoc, collection, addDoc, DocumentData } from 'firebase/firestore';\nimport { db } from '../firebase/firebase';\n// Type-only import to avoid pulling in the entire schema\ntype WizardData = any; // Will be properly typed when actually used\nimport { firestoreOperationWithRetry, createLocalStorageFallback } from '../utils/firestoreWithRetry';\nimport { auth } from '../firebase/firebase';\nimport { connectionStatus } from '../services/ConnectionStatusService';\nimport { unifiedStorage, type UnifiedProjectData } from '../services/UnifiedStorageManager';\nimport {\n  type EnhancedBlueprintDoc,\n  type ChatMessage,\n  type JourneyData,\n  transformLegacyJourney,\n  getJourneyData\n} from '../types/blueprint';\n\n// Alias for backward compatibility\ninterface BlueprintDoc extends EnhancedBlueprintDoc {\n  createdAt: Date;\n  updatedAt: Date;\n  journeyData?: JourneyData; // Computed property that maps to journey\n}\n\ninterface UseBlueprintDocReturn {\n  blueprint: BlueprintDoc | null;\n  loading: boolean;\n  error: Error | null;\n  updateBlueprint: (updates: Partial<BlueprintDoc>) => Promise<void>;\n  addMessage: (message: ChatMessage) => Promise<void>;\n}\n\n// LocalStorage fallback\nconst STORAGE_KEY_PREFIX = 'blueprint_';\n\nfunction convertUnifiedToBlueprint(unified: UnifiedProjectData): BlueprintDoc {\n  return {\n    id: unified.id,\n    wizardData: unified.wizardData,\n    createdAt: unified.createdAt,\n    updatedAt: unified.updatedAt,\n    userId: unified.userId,\n    chatHistory: unified.chatHistory || [],\n    journey: unified.journey,\n    ideation: unified.ideation,\n    deliverables: unified.deliverables,\n    journeyData: transformLegacyJourney(unified.journey || unified.capturedData),\n    capturedData: unified.capturedData,\n    projectData: unified.projectData\n  };\n}\n\nfunction convertBlueprintToUnified(blueprint: BlueprintDoc): UnifiedProjectData {\n  return {\n    id: blueprint.id,\n    title: blueprint.wizardData?.projectTopic || blueprint.wizardData?.vision || 'Untitled Project',\n    userId: blueprint.userId,\n    createdAt: blueprint.createdAt,\n    updatedAt: blueprint.updatedAt,\n    wizardData: blueprint.wizardData,\n    projectData: (blueprint as any).projectData,\n    capturedData: (blueprint as any).capturedData,\n    ideation: blueprint.ideation,\n    journey: blueprint.journey,\n    deliverables: blueprint.deliverables,\n    chatHistory: blueprint.chatHistory,\n    version: '3.0',\n    syncStatus: 'local'\n  };\n}\n\nfunction getFromLocalStorage(blueprintId: string): BlueprintDoc | null {\n  try {\n    // Try unified storage first\n    console.log('Attempting to load from unified storage:', blueprintId);\n    return null; // Will be handled by the main fetchBlueprint logic\n  } catch (error) {\n    console.error('Error reading from unified storage:', error);\n    return null;\n  }\n}\n\nfunction saveToLocalStorage(blueprintId: string, data: BlueprintDoc): void {\n  try {\n    // Convert to unified format and save\n    const unifiedData = convertBlueprintToUnified(data);\n    unifiedStorage.saveProject(unifiedData);\n  } catch (error) {\n    console.error('Error saving to unified storage:', error);\n    // Fallback to old format\n    try {\n      localStorage.setItem(`${STORAGE_KEY_PREFIX}${blueprintId}`, JSON.stringify({\n        ...data,\n        createdAt: data.createdAt.toISOString(),\n        updatedAt: data.updatedAt.toISOString()\n      }));\n    } catch (fallbackError) {\n      console.error('Fallback save also failed:', fallbackError);\n    }\n  }\n}\n\nexport function useBlueprintDoc(blueprintId: string): UseBlueprintDocReturn {\n  const [blueprint, setBlueprint] = useState<BlueprintDoc | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    if (!blueprintId) {\n      setLoading(false);\n      return;\n    }\n\n    let unsubscribe: (() => void) | undefined;\n\n    async function fetchBlueprint() {\n      try {\n        console.log(`[useBlueprintDoc] Loading blueprint: ${blueprintId}`);\n\n        // Try unified storage first (handles all fallbacks internally)\n        try {\n          const unifiedData = await unifiedStorage.loadProject(blueprintId);\n          if (unifiedData) {\n            const blueprintData = convertUnifiedToBlueprint(unifiedData);\n            setBlueprint(blueprintData);\n            setLoading(false);\n            console.log(`[useBlueprintDoc] Blueprint loaded from unified storage: ${blueprintId}`);\n            return;\n          }\n        } catch (unifiedError) {\n          console.warn(`[useBlueprintDoc] Unified storage failed: ${unifiedError.message}`);\n        }\n\n        // Check if user is authenticated (including anonymous users)\n        const currentUser = auth.currentUser;\n        const isAuthenticated = !!currentUser;\n\n        // If not authenticated, we can only use local storage\n        if (!isAuthenticated) {\n          console.log(`[useBlueprintDoc] No authentication, checking legacy localStorage: ${blueprintId}`);\n          // Try legacy localStorage formats\n          const legacyKey = `blueprint_${blueprintId}`;\n          const legacyData = localStorage.getItem(legacyKey);\n          if (legacyData) {\n            try {\n              const parsed = JSON.parse(legacyData);\n              const blueprintData: BlueprintDoc = {\n                ...parsed,\n                createdAt: new Date(parsed.createdAt),\n                updatedAt: new Date(parsed.updatedAt),\n                journeyData: transformLegacyJourney(parsed.journey || parsed.journeyData)\n              };\n              setBlueprint(blueprintData);\n              // Migrate to unified storage\n              const unifiedData = convertBlueprintToUnified(blueprintData);\n              await unifiedStorage.saveProject(unifiedData);\n              console.log(`[useBlueprintDoc] Legacy data migrated to unified storage: ${blueprintId}`);\n            } catch (parseError) {\n              console.error(`[useBlueprintDoc] Failed to parse legacy data: ${parseError.message}`);\n            }\n          }\n          setLoading(false);\n          return;\n        }\n\n        // Try Firestore with retry logic for authenticated users\n        console.log(`[useBlueprintDoc] Trying Firebase for authenticated user: ${blueprintId}`);\n        const docRef = doc(db, 'blueprints', blueprintId);\n\n        // Set up real-time listener\n        unsubscribe = onSnapshot(\n          docRef,\n          async (snapshot) => {\n            if (snapshot.exists()) {\n              const data = snapshot.data();\n              const blueprintData: BlueprintDoc = {\n                id: snapshot.id,\n                wizardData: data.wizardData,\n                createdAt: data.createdAt?.toDate() || new Date(),\n                updatedAt: data.updatedAt?.toDate() || new Date(),\n                userId: data.userId || '',\n                chatHistory: data.chatHistory || [],\n                journey: data.journey,\n                ideation: data.ideation,\n                deliverables: data.deliverables,\n                journeyData: transformLegacyJourney(data.journey || data.journeyData),\n                capturedData: data.capturedData,\n                projectData: data.projectData\n              };\n              setBlueprint(blueprintData);\n\n              // Save to unified storage as backup\n              const unifiedData = convertBlueprintToUnified(blueprintData);\n              await unifiedStorage.saveProject(unifiedData);\n\n              // Report successful Firebase operation\n              connectionStatus.reportFirebaseSuccess();\n              console.log(`[useBlueprintDoc] Blueprint loaded from Firebase: ${blueprintId}`);\n            } else {\n              console.warn(`[useBlueprintDoc] Blueprint not found in Firebase: ${blueprintId}`);\n              // Try unified storage fallback again\n              const unifiedData = await unifiedStorage.loadProject(blueprintId);\n              if (unifiedData) {\n                const blueprintData = convertUnifiedToBlueprint(unifiedData);\n                setBlueprint(blueprintData);\n                console.log(`[useBlueprintDoc] Blueprint found in unified storage fallback: ${blueprintId}`);\n              } else {\n                setError(new Error('Blueprint not found'));\n              }\n            }\n            setLoading(false);\n          },\n          async (err) => {\n            console.warn(`[useBlueprintDoc] Firebase error: ${err.message}`);\n            // Report Firebase error to connection status\n            connectionStatus.reportFirebaseError(err as Error);\n\n            // Try unified storage fallback\n            try {\n              const unifiedData = await unifiedStorage.loadProject(blueprintId);\n              if (unifiedData) {\n                const blueprintData = convertUnifiedToBlueprint(unifiedData);\n                setBlueprint(blueprintData);\n                setError(null);\n                console.log(`[useBlueprintDoc] Blueprint recovered from unified storage after Firebase error: ${blueprintId}`);\n              } else {\n                // Only set error if no fallback and it's not a permission error\n                if (err.code !== 'permission-denied') {\n                  setError(err as Error);\n                }\n              }\n            } catch (fallbackError) {\n              console.error(`[useBlueprintDoc] All fallbacks failed: ${fallbackError.message}`);\n              if (err.code !== 'permission-denied') {\n                setError(err as Error);\n              }\n            }\n            setLoading(false);\n          }\n        );\n      } catch (err) {\n        console.error(`[useBlueprintDoc] Setup failed: ${err.message}`);\n        setError(err as Error);\n        setLoading(false);\n      }\n    }\n\n    fetchBlueprint();\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [blueprintId]);\n\n  const updateBlueprint = async (updates: Partial<BlueprintDoc> | BlueprintDoc) => {\n    // Allow setting a new blueprint if none exists\n    if (!blueprint && updates && 'id' in updates) {\n      const newBlueprint = updates as BlueprintDoc;\n      setBlueprint(newBlueprint);\n      // Save to localStorage for persistence\n      saveToLocalStorage(blueprintId, newBlueprint);\n      setLoading(false);\n      return;\n    }\n    \n    // Defensive check - if no blueprint and updates don't contain id, create minimal blueprint\n    if (!blueprint) {\n      console.warn('updateBlueprint called with no existing blueprint and incomplete data');\n      if (updates && typeof updates === 'object') {\n        // Create minimal blueprint structure\n        const minimalBlueprint: BlueprintDoc = {\n          id: blueprintId,\n          wizardData: (updates as any).wizardData || {},\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          userId: 'anonymous',\n          chatHistory: []\n        };\n        setBlueprint(minimalBlueprint);\n        saveToLocalStorage(blueprintId, minimalBlueprint);\n        return;\n      }\n      return;\n    }\n\n    // Ensure updates is a valid object before spreading\n    const safeUpdates = updates && typeof updates === 'object' ? updates : {};\n    \n    const updatedData = {\n      ...blueprint,\n      ...safeUpdates,\n      updatedAt: new Date()\n    };\n\n    // Update with retry logic\n    await firestoreOperationWithRetry(\n      async () => {\n        const currentUser = auth.currentUser;\n        const userId = currentUser?.isAnonymous ? 'anonymous' : (currentUser?.uid || 'anonymous');\n        \n        const docRef = doc(db, 'blueprints', blueprintId);\n        await setDoc(docRef, {\n          ...updatedData,\n          userId: userId, // Ensure anonymous users get 'anonymous' userId\n          createdAt: updatedData.createdAt,\n          updatedAt: updatedData.updatedAt,\n          chatHistory: updatedData.chatHistory?.map(msg => ({\n            ...msg,\n            timestamp: msg.timestamp instanceof Date ? msg.timestamp : new Date(msg.timestamp)\n          }))\n        }, { merge: true });\n        return updatedData;\n      },\n      {\n        errorMessage: 'Failed to update blueprint',\n        fallback: createLocalStorageFallback(`blueprint_${blueprintId}`, updatedData, 'set')\n      }\n    );\n    \n    // Update local state\n    setBlueprint(updatedData);\n  };\n\n  const addMessage = async (message: ChatMessage) => {\n    if (!blueprint) {return;}\n\n    // Add message with retry logic\n    await firestoreOperationWithRetry(\n      async () => {\n        const messagesRef = collection(db, 'blueprints', blueprintId, 'messages');\n        await addDoc(messagesRef, {\n          ...message,\n          timestamp: message.timestamp\n        });\n        return message;\n      },\n      {\n        errorMessage: 'Failed to add message',\n        maxAttempts: 2, // Fewer retries for messages\n        fallback: async () => {\n          console.log('Using local-only message storage');\n          return message;\n        }\n      }\n    );\n\n    // Always update local state and chat history\n    const updatedHistory = [...(blueprint.chatHistory || []), message];\n    await updateBlueprint({ chatHistory: updatedHistory });\n  };\n\n  return { blueprint, loading, error, updateBlueprint, addMessage };\n}","// Finite State Machine for Project Journey Design v2.0\n// Implements Blueprint Coach SOP v1.0\n// Guides educators through conversational flow with stage initiators and clarifiers\n\nexport interface StageRecap {\n  stage: 'ideation' | 'journey' | 'deliverables';\n  summary: string;\n  data: Record<string, any>;\n  timestamp: Date;\n}\n\nexport interface IdeationData {\n  bigIdea: string;\n  essentialQuestion: string;\n  challenge: string;\n}\n\nexport interface JourneyData {\n  ideation: IdeationData;\n  phases: Phase[];\n  activities: Activity[];\n  resources: Resource[];\n  reflections?: string[]; \n  deliverables: {\n    milestones: Milestone[];\n    rubric: Rubric;\n    impact: Impact;\n  };\n  recaps?: {\n    ideation?: StageRecap;\n    journey?: StageRecap;\n    deliverables?: StageRecap;\n  };\n}\n\nexport interface Phase {\n  id: string;\n  name: string;\n  description: string;\n  duration?: string;\n  learningGoals?: string[];\n}\n\nexport interface Activity {\n  id: string;\n  phaseId: string;\n  name: string;\n  description: string;\n  materials?: string[];\n  grouping?: 'individual' | 'pairs' | 'small-group' | 'whole-class';\n  duration?: string;\n}\n\nexport interface Resource {\n  id: string;\n  type: 'article' | 'video' | 'tool' | 'expert' | 'location' | 'other';\n  name: string;\n  description: string;\n  url?: string;\n  phaseIds?: string[];\n}\n\nexport interface Milestone {\n  id: string;\n  name: string;\n  description: string;\n  phaseId?: string;\n  dueWeek?: number;\n}\n\nexport interface Rubric {\n  criteria: RubricCriterion[];\n  levels: string[];\n}\n\nexport interface RubricCriterion {\n  id: string;\n  name: string;\n  description: string;\n  weight?: number;\n}\n\nexport interface Impact {\n  audience: string;\n  method: string;\n  timeline?: string;\n  measurableOutcomes?: string[];\n}\n\nexport type JourneyState = \n  // IDEATION Stage\n  | 'IDEATION_INITIATOR'      // Welcome to Ideation stage\n  | 'IDEATION_BIG_IDEA'        // Anchor the learning with a big idea\n  | 'IDEATION_EQ'              // Frame the essential question\n  | 'IDEATION_CHALLENGE'       // Define the authentic challenge\n  | 'IDEATION_CLARIFIER'       // Recap ideation, offer edits\n  // JOURNEY Stage\n  | 'JOURNEY_INITIATOR'        // Welcome to Journey stage\n  | 'JOURNEY_PHASES'           // Design the learning arc\n  | 'JOURNEY_ACTIVITIES'       // Create engaging activities\n  | 'JOURNEY_RESOURCES'        // Gather inspiring resources\n  | 'JOURNEY_CLARIFIER'        // Recap journey, offer edits\n  // DELIVERABLES Stage\n  | 'DELIVERABLES_INITIATOR'   // Welcome to Deliverables stage\n  | 'DELIVER_MILESTONES'       // Define milestone checkpoints\n  | 'DELIVER_RUBRIC'           // Create assessment criteria\n  | 'DELIVER_IMPACT'           // Connect to authentic audiences\n  | 'DELIVERABLES_CLARIFIER'   // Recap deliverables, offer edits\n  // PUBLISH Stage\n  | 'PUBLISH_REVIEW'           // Final review before publishing\n  | 'COMPLETE';\n\n// Stage metadata for proper flow\nexport const STAGE_METADATA = {\n  // Stage purposes (for initiators)\n  stages: {\n    IDEATION: {\n      purpose: \"Transform your teaching context into a Big Idea, Essential Question, and Challenge that motivate the unit.\",\n      substeps: [\"Big Idea\", \"Essential Question\", \"Challenge\"]\n    },\n    JOURNEY: {\n      purpose: \"Plan phases, activities, and resources ensuring depth & skills progression.\",\n      substeps: [\"Phases\", \"Activities\", \"Resources\"]\n    },\n    DELIVERABLES: {\n      purpose: \"Set milestones, rubric, and impact plan—clarifying output quality & authenticity.\",\n      substeps: [\"Milestones\", \"Rubric\", \"Impact Plan\"]\n    }\n  },\n  \n  // Sub-step objectives\n  objectives: {\n    IDEATION_BIG_IDEA: \"Anchor the learning around one resonant concept.\",\n    IDEATION_EQ: \"Frame an inquiry that endures & drives research.\",\n    IDEATION_CHALLENGE: \"Define an authentic task with real audience.\",\n    JOURNEY_PHASES: \"Map sign-posts that structure the learning arc.\",\n    JOURNEY_ACTIVITIES: \"Define signature learning experiences per phase.\",\n    JOURNEY_RESOURCES: \"List experts, texts, tools that sustain work.\",\n    DELIVER_MILESTONES: \"Checkpoints & evidence of progress.\",\n    DELIVER_RUBRIC: \"Assessment criteria rewarding inquiry & craft.\",\n    DELIVER_IMPACT: \"Real-world sharing & reflection mechanism.\"\n  }\n};\n\nexport class JourneyFSMv2 {\n  private stateOrder: JourneyState[] = [\n    // IDEATION stage\n    'IDEATION_INITIATOR',\n    'IDEATION_BIG_IDEA',\n    'IDEATION_EQ',\n    'IDEATION_CHALLENGE',\n    'IDEATION_CLARIFIER',\n    // JOURNEY stage\n    'JOURNEY_INITIATOR',\n    'JOURNEY_PHASES',\n    'JOURNEY_ACTIVITIES', \n    'JOURNEY_RESOURCES',\n    'JOURNEY_CLARIFIER',\n    // DELIVERABLES stage\n    'DELIVERABLES_INITIATOR',\n    'DELIVER_MILESTONES',\n    'DELIVER_RUBRIC',\n    'DELIVER_IMPACT',\n    'DELIVERABLES_CLARIFIER',\n    // PUBLISH stage\n    'PUBLISH_REVIEW',\n    'COMPLETE'\n  ];\n\n  private currentIndex: number = 0;\n  public data: JourneyData = {\n    ideation: {\n      bigIdea: '',\n      essentialQuestion: '',\n      challenge: ''\n    },\n    phases: [],\n    activities: [],\n    resources: [],\n    reflections: [],\n    deliverables: {\n      milestones: [],\n      rubric: {\n        criteria: [],\n        levels: ['Emerging', 'Developing', 'Proficient', 'Exemplary']\n      },\n      impact: {\n        audience: '',\n        method: ''\n      }\n    },\n    recaps: {}\n  };\n\n  private history: Array<{state: JourneyState, timestamp: Date}> = [];\n  private editMode: boolean = false;\n\n  constructor(initialData?: Partial<JourneyData>) {\n    if (initialData) {\n      this.data = { ...this.data, ...initialData };\n    }\n    this.history.push({ state: this.current, timestamp: new Date() });\n  }\n\n  get current(): JourneyState {\n    return this.stateOrder[this.currentIndex];\n  }\n\n  get progress(): { current: number; total: number; percentage: number; segment: 'ideation' | 'journey' | 'deliver' | 'complete' } {\n    const total = this.stateOrder.length - 1; // Exclude 'COMPLETE'\n    const current = this.currentIndex + 1;\n    const percentage = Math.round((this.currentIndex / (total - 1)) * 100);\n    \n    let segment: 'ideation' | 'journey' | 'deliver' | 'complete' = 'ideation';\n    if (this.current.startsWith('IDEATION')) {\n      segment = 'ideation';\n    } else if (this.current.startsWith('JOURNEY')) {\n      segment = 'journey';\n    } else if (this.current.startsWith('DELIVER') || this.current === 'PUBLISH_REVIEW') {\n      segment = 'deliver';\n    } else if (this.current === 'COMPLETE') {\n      segment = 'complete';\n    }\n    \n    return { current, total, percentage, segment };\n  }\n\n  // Check if current state is an initiator\n  isInitiator(): boolean {\n    return this.current.includes('_INITIATOR');\n  }\n\n  // Check if current state is a clarifier\n  isClarifier(): boolean {\n    return this.current.includes('_CLARIFIER');\n  }\n\n  // Get current stage name\n  getCurrentStage(): 'IDEATION' | 'JOURNEY' | 'DELIVERABLES' | 'PUBLISH' {\n    if (this.current.startsWith('IDEATION')) {return 'IDEATION';}\n    if (this.current.startsWith('JOURNEY')) {return 'JOURNEY';}\n    if (this.current.startsWith('DELIVER')) {return 'DELIVERABLES';}\n    return 'PUBLISH';\n  }\n\n  // Advance to next stage\n  advance(): { success: boolean; newState: JourneyState; message?: string } {\n    if (this.currentIndex >= this.stateOrder.length - 1) {\n      return { \n        success: false, \n        newState: this.current,\n        message: \"Journey design is complete! Time to bring it to life.\" \n      };\n    }\n\n    // Validate current stage has meaningful content (skip for initiators/clarifiers)\n    if (!this.isInitiator() && !this.isClarifier()) {\n      const validation = this.validateCurrentStage();\n      if (!validation.isValid) {\n        return {\n          success: false,\n          newState: this.current,\n          message: validation.message\n        };\n      }\n    }\n\n    // Save recap when leaving a clarifier stage\n    if (this.isClarifier()) {\n      this.saveStageRecap();\n    }\n    \n    this.currentIndex++;\n    this.editMode = false;\n    this.history.push({ state: this.current, timestamp: new Date() });\n\n    return {\n      success: true,\n      newState: this.current,\n      message: this.getTransitionMessage()\n    };\n  }\n\n  // Edit a specific stage\n  edit(targetState: JourneyState): { success: boolean; newState: JourneyState } {\n    const targetIndex = this.stateOrder.indexOf(targetState);\n    \n    if (targetIndex === -1 || targetIndex > this.currentIndex) {\n      return { success: false, newState: this.current };\n    }\n\n    this.currentIndex = targetIndex;\n    this.editMode = true;\n    this.history.push({ state: this.current, timestamp: new Date() });\n\n    return { success: true, newState: this.current };\n  }\n\n  // Reset for a fresh start\n  reset(preserveIdeation: boolean = false): void {\n    this.currentIndex = 0;\n    this.editMode = false;\n    \n    if (!preserveIdeation) {\n      this.data = {\n        ideation: {\n          bigIdea: '',\n          essentialQuestion: '',\n          challenge: ''\n        },\n        phases: [],\n        activities: [],\n        resources: [],\n        reflections: [],\n        deliverables: {\n          milestones: [],\n          rubric: {\n            criteria: [],\n            levels: ['Emerging', 'Developing', 'Proficient', 'Exemplary']\n          },\n          impact: {\n            audience: '',\n            method: ''\n          }\n        }\n      };\n    } else {\n      // Keep ideation but clear everything else\n      this.data.phases = [];\n      this.data.activities = [];\n      this.data.resources = [];\n      this.data.deliverables = {\n        milestones: [],\n        rubric: {\n          criteria: [],\n          levels: ['Emerging', 'Developing', 'Proficient', 'Exemplary']\n        },\n        impact: {\n          audience: '',\n          method: ''\n        }\n      };\n    }\n    \n    // Reset recaps as well\n    this.data.recaps = {};\n    \n    this.history = [{ state: this.current, timestamp: new Date() }];\n  }\n\n  // Check if we can skip current stage\n  canSkip(): boolean {\n    // Only resources can be skipped per SOP\n    return this.current === 'JOURNEY_RESOURCES';\n  }\n  \n  // Save stage recap when leaving a stage\n  saveStageRecap(): void {\n    const stage = this.getCurrentStage().toLowerCase() as 'ideation' | 'journey' | 'deliverables';\n    if (!this.data.recaps) {\n      this.data.recaps = {};\n    }\n    this.data.recaps[stage] = this.generateStageRecap(stage);\n  }\n  \n  // Generate a recap for a specific stage\n  generateStageRecap(stage: 'IDEATION' | 'JOURNEY' | 'DELIVERABLES' | 'ideation' | 'journey' | 'deliverables'): StageRecap {\n    const stageLower = stage.toLowerCase() as 'ideation' | 'journey' | 'deliverables';\n    let stageData: Record<string, any> = {};\n    let summary = '';\n    \n    switch (stageLower) {\n      case 'ideation':\n        stageData = {\n          bigIdea: this.data.ideation.bigIdea,\n          essentialQuestion: this.data.ideation.essentialQuestion,\n          challenge: this.data.ideation.challenge\n        };\n        summary = `Big Idea: \"${this.data.ideation.bigIdea}\", Essential Question: \"${this.data.ideation.essentialQuestion}\", Challenge: \"${this.data.ideation.challenge}\"`;\n        break;\n        \n      case 'journey':\n        stageData = {\n          phases: this.data.phases,\n          activities: this.data.activities,\n          resources: this.data.resources\n        };\n        summary = `Designed ${this.data.phases.length} phases with ${this.data.activities.length} activities and ${this.data.resources.length} resources`;\n        break;\n        \n      case 'deliverables':\n        stageData = this.data.deliverables;\n        summary = `Created ${this.data.deliverables.milestones.length} milestones, rubric with ${this.data.deliverables.rubric.criteria.length} criteria, and impact plan for ${this.data.deliverables.impact.audience}`;\n        break;\n    }\n    \n    return {\n      stage: stageLower,\n      summary,\n      data: stageData,\n      timestamp: new Date()\n    };\n  }\n\n  // Update data for current stage\n  updateData(updates: Partial<JourneyData>): void {\n    this.data = { ...this.data, ...updates };\n  }\n\n  // Add a reflection/insight\n  addReflection(reflection: string): void {\n    if (!this.data.reflections) {\n      this.data.reflections = [];\n    }\n    this.data.reflections.push(reflection);\n  }\n\n  // Get contextual help for current stage\n  getStageContext(): { title: string; description: string; tips: string[] } {\n    const contexts = {\n      IDEATION_INITIATOR: {\n        title: \"Welcome to Ideation\",\n        description: \"In this stage we'll complete 3 steps to transform your teaching context into an inspiring learning experience.\",\n        tips: [\n          \"Think about what truly matters in your subject\",\n          \"Consider themes that connect to students' lives\",\n          \"Let your creativity flow - we'll refine together\"\n        ]\n      },\n      IDEATION_BIG_IDEA: {\n        title: \"Anchor with a Big Idea\",\n        description: \"Let's start with a powerful concept that will guide the entire learning journey.\",\n        tips: [\n          \"Think about enduring understandings\",\n          \"Consider themes that spark curiosity\",\n          \"Look for ideas that connect to real life\"\n        ]\n      },\n      IDEATION_EQ: {\n        title: \"Frame the Essential Question\",\n        description: \"Craft a question that drives inquiry and invites multiple perspectives.\",\n        tips: [\n          \"Make it open-ended and thought-provoking\",\n          \"Connect to real-world relevance\",\n          \"Ensure it requires deep exploration\"\n        ]\n      },\n      IDEATION_CHALLENGE: {\n        title: \"Define the Authentic Challenge\",\n        description: \"Create a meaningful task that showcases student learning.\",\n        tips: [\n          \"Connect to real audiences or purposes\",\n          \"Allow for creative solutions\",\n          \"Make it worthy of students' time\"\n        ]\n      },\n      IDEATION_CLARIFIER: {\n        title: \"Ideation Summary\",\n        description: \"Let's review what we've created together in the ideation stage.\",\n        tips: [\n          \"Check that all elements align\",\n          \"Ensure the challenge excites you\",\n          \"Make any refinements before moving on\"\n        ]\n      },\n      JOURNEY_INITIATOR: {\n        title: \"Welcome to Learning Journey\",\n        description: \"Now we'll design the path students will take, creating phases, activities, and gathering resources.\",\n        tips: [\n          \"Think about the learning arc\",\n          \"Consider pacing and engagement\",\n          \"Plan for student voice and choice\"\n        ]\n      },\n      JOURNEY_PHASES: {\n        title: \"Design Your Learning Arc\",\n        description: \"Create 3-4 phases that guide students from curiosity to mastery.\",\n        tips: [\n          \"Start with exploration and wonder\",\n          \"Build toward creation and application\",\n          \"End with reflection and celebration\"\n        ]\n      },\n      JOURNEY_ACTIVITIES: {\n        title: \"Craft Engaging Activities\",\n        description: \"Design hands-on experiences that bring each phase to life.\",\n        tips: [\n          \"Mix individual and collaborative work\",\n          \"Include choice and student voice\",\n          \"Connect to real-world applications\"\n        ]\n      },\n      JOURNEY_RESOURCES: {\n        title: \"Gather Inspiring Resources\",\n        description: \"Collect materials, tools, and connections to enrich the journey.\",\n        tips: [\n          \"Think beyond traditional materials\",\n          \"Consider community experts\",\n          \"Include diverse perspectives\"\n        ]\n      },\n      JOURNEY_CLARIFIER: {\n        title: \"Journey Summary\",\n        description: \"Let's review the complete learning journey you've designed.\",\n        tips: [\n          \"Check the flow between phases\",\n          \"Ensure activities build on each other\",\n          \"Verify resources support your goals\"\n        ]\n      },\n      DELIVERABLES_INITIATOR: {\n        title: \"Welcome to Deliverables\",\n        description: \"Finally, we'll define milestones, create assessment criteria, and plan for authentic impact.\",\n        tips: [\n          \"Focus on growth and progress\",\n          \"Make assessment transparent\",\n          \"Connect to real audiences\"\n        ]\n      },\n      DELIVER_MILESTONES: {\n        title: \"Define Milestone Checkpoints\",\n        description: \"Outline key moments that keep learners and stakeholders aligned.\",\n        tips: [\n          \"Think of milestones as celebration points\",\n          \"Include both process and product\",\n          \"Make them visible to all\"\n        ]\n      },\n      DELIVER_RUBRIC: {\n        title: \"Create Assessment Criteria\",\n        description: \"Draft clear criteria that reward inquiry, collaboration, craft, and reflection.\",\n        tips: [\n          \"Focus on growth, not perfection\",\n          \"Include self-assessment opportunities\",\n          \"Make criteria student-friendly\"\n        ]\n      },\n      DELIVER_IMPACT: {\n        title: \"Connect to Authentic Audiences\",\n        description: \"Specify how student work connects to authentic audiences or community needs.\",\n        tips: [\n          \"Think beyond classroom walls\",\n          \"Consider local and global connections\",\n          \"Plan for meaningful feedback\"\n        ]\n      },\n      DELIVERABLES_CLARIFIER: {\n        title: \"Deliverables Summary\",\n        description: \"Let's review how students will demonstrate and share their learning.\",\n        tips: [\n          \"Ensure authentic assessment\",\n          \"Check for real-world connections\",\n          \"Celebrate the complete design\"\n        ]\n      },\n      PUBLISH_REVIEW: {\n        title: \"Final Review\",\n        description: \"Your blueprint is complete! Let's review everything before publishing.\",\n        tips: [\n          \"Check alignment across all components\",\n          \"Ensure feasibility within constraints\",\n          \"Celebrate what you've created!\"\n        ]\n      },\n      COMPLETE: {\n        title: \"Blueprint Complete!\",\n        description: \"Your transformative learning experience is ready to launch.\",\n        tips: [\n          \"Export your blueprint\",\n          \"Share with colleagues\",\n          \"Get ready for an amazing journey!\"\n        ]\n      }\n    };\n\n    return contexts[this.current] || contexts.IDEATION_BIG_IDEA;\n  }\n\n  // Validate current stage has enough content\n  private validateCurrentStage(): { isValid: boolean; message?: string } {\n    switch (this.current) {\n      case 'IDEATION_BIG_IDEA':\n        if (!this.data.ideation.bigIdea.trim()) {\n          return { \n            isValid: false, \n            message: \"Let's anchor your project with a big idea before moving forward.\" \n          };\n        }\n        return { isValid: true };\n        \n      case 'IDEATION_EQ':\n        if (!this.data.ideation.essentialQuestion.trim()) {\n          return { \n            isValid: false, \n            message: \"An essential question will guide student inquiry. What question will drive their exploration?\" \n          };\n        }\n        return { isValid: true };\n        \n      case 'IDEATION_CHALLENGE':\n        if (!this.data.ideation.challenge.trim()) {\n          return { \n            isValid: false, \n            message: \"Let's define an authentic challenge that showcases student learning.\" \n          };\n        }\n        return { isValid: true };\n        \n      case 'JOURNEY_PHASES':\n        if (this.data.phases.length < 2) {\n          return { \n            isValid: false, \n            message: \"Let's design at least 2 phases to create a meaningful journey.\" \n          };\n        }\n        return { isValid: true };\n        \n      case 'JOURNEY_ACTIVITIES':\n        const hasActivities = this.data.phases.every(phase => \n          this.data.activities.some(activity => activity.phaseId === phase.id)\n        );\n        if (!hasActivities) {\n          return { \n            isValid: false, \n            message: \"Each phase needs at least one activity to bring it to life.\" \n          };\n        }\n        return { isValid: true };\n        \n      case 'JOURNEY_RESOURCES':\n        return { isValid: true }; // Optional stage\n        \n      case 'DELIVER_MILESTONES':\n        if (this.data.deliverables.milestones.length === 0) {\n          return {\n            isValid: false,\n            message: \"Let's define at least one milestone to track progress.\"\n          };\n        }\n        return { isValid: true };\n        \n      case 'DELIVER_RUBRIC':\n        if (this.data.deliverables.rubric.criteria.length === 0) {\n          return {\n            isValid: false,\n            message: \"Let's create at least one assessment criterion.\"\n          };\n        }\n        return { isValid: true };\n        \n      case 'DELIVER_IMPACT':\n        if (!this.data.deliverables.impact.audience || !this.data.deliverables.impact.method) {\n          return {\n            isValid: false,\n            message: \"Let's define your audience and sharing method.\"\n          };\n        }\n        return { isValid: true };\n        \n      default:\n        return { isValid: true };\n    }\n  }\n\n  // Get transition message\n  private getTransitionMessage(): string {\n    const messages = {\n      IDEATION_INITIATOR: \"Let's begin by anchoring your learning experience with a Big Idea.\",\n      IDEATION_BIG_IDEA: \"Powerful big idea! Now let's frame an essential question.\",\n      IDEATION_EQ: \"Great question! Now let's define the authentic challenge.\",\n      IDEATION_CHALLENGE: \"Inspiring challenge! Let's review your ideation.\",\n      IDEATION_CLARIFIER: \"Your ideation is complete! Ready to design the learning journey?\",\n      JOURNEY_INITIATOR: \"Now let's map out the learning journey with phases.\",\n      JOURNEY_PHASES: \"Excellent phases! Now let's create activities.\",\n      JOURNEY_ACTIVITIES: \"Engaging activities! Let's gather resources.\",\n      JOURNEY_RESOURCES: \"Great resources! Let's review your journey.\",\n      JOURNEY_CLARIFIER: \"Your journey looks amazing! Ready to define deliverables?\",\n      DELIVERABLES_INITIATOR: \"Let's define how students will demonstrate their learning.\",\n      DELIVER_MILESTONES: \"Clear milestones! Now let's create your rubric.\",\n      DELIVER_RUBRIC: \"Thoughtful assessment! Let's plan for authentic impact.\",\n      DELIVER_IMPACT: \"Powerful connections! Let's review your deliverables.\",\n      DELIVERABLES_CLARIFIER: \"All set! Ready for final review?\",\n      PUBLISH_REVIEW: \"Your blueprint is complete and ready to transform learning!\",\n      COMPLETE: \"Congratulations! Your blueprint is ready to export.\"\n    };\n\n    return messages[this.current] || \"Let's continue building your blueprint.\";\n  }\n\n  // Export current state\n  exportState() {\n    return {\n      currentIndex: this.currentIndex,\n      data: this.data,\n      editMode: this.editMode,\n      history: this.history\n    };\n  }\n\n  // Import saved state\n  importState(state: ReturnType<typeof this.exportState>) {\n    this.currentIndex = state.currentIndex;\n    this.data = state.data;\n    this.editMode = state.editMode;\n    this.history = state.history;\n  }\n}","import React, { createContext, useContext, useState, useCallback } from 'react';\nimport { JourneyFSMv2, type JourneyData, type JourneyState, type StageRecap } from '../lib/fsm-v2';\n\ninterface FSMContextType {\n  fsm: JourneyFSMv2;\n  currentState: JourneyState;\n  journeyData: JourneyData;\n  progress: { current: number; total: number; percentage: number; segment: 'ideation' | 'journey' | 'deliver' | 'complete' };\n  advance: () => { success: boolean; newState: JourneyState; message?: string };\n  edit: (targetState: JourneyState) => { success: boolean; newState: JourneyState };\n  reset: (preserveIdeation?: boolean) => void;\n  canSkip: () => boolean;\n  updateData: (updates: Partial<JourneyData>) => void;\n  addReflection: (reflection: string) => void;\n  getStageContext: () => { title: string; description: string; tips: string[] };\n  saveState: () => void;\n  loadState: (blueprintId: string) => void;\n  isInitiator: () => boolean;\n  isClarifier: () => boolean;\n  getCurrentStage: () => 'IDEATION' | 'JOURNEY' | 'DELIVERABLES' | 'PUBLISH';\n  saveStageRecap: () => void;\n  generateStageRecap: (stage: 'IDEATION' | 'JOURNEY' | 'DELIVERABLES') => StageRecap;\n}\n\nconst FSMContext = createContext<FSMContextType | undefined>(undefined);\n\nconst FSM_STORAGE_KEY = 'journey_fsm_v2_state_';\n\nexport function FSMProviderV2({ children }: { children: React.ReactNode }) {\n  const [fsm] = useState(() => new JourneyFSMv2());\n  const [currentState, setCurrentState] = useState<JourneyState>(fsm.current);\n  const [journeyData, setJourneyData] = useState<JourneyData>(fsm.data);\n\n  // Update local state when FSM changes\n  const syncState = useCallback(() => {\n    setCurrentState(fsm.current);\n    setJourneyData({ ...fsm.data });\n  }, [fsm]);\n\n  const advance = useCallback(() => {\n    const result = fsm.advance();\n    syncState();\n    return result;\n  }, [fsm, syncState]);\n\n  const edit = useCallback((targetState: JourneyState) => {\n    const result = fsm.edit(targetState);\n    syncState();\n    return result;\n  }, [fsm, syncState]);\n\n  const reset = useCallback((preserveIdeation?: boolean) => {\n    fsm.reset(preserveIdeation);\n    syncState();\n  }, [fsm, syncState]);\n\n  const updateData = useCallback((updates: Partial<JourneyData>) => {\n    fsm.updateData(updates);\n    syncState();\n  }, [fsm, syncState]);\n\n  const addReflection = useCallback((reflection: string) => {\n    fsm.addReflection(reflection);\n    syncState();\n  }, [fsm, syncState]);\n\n  const saveState = useCallback((blueprintId?: string) => {\n    if (!blueprintId) {return;}\n    \n    const state = fsm.exportState();\n    try {\n      localStorage.setItem(`${FSM_STORAGE_KEY}${blueprintId}`, JSON.stringify(state));\n    } catch (error) {\n      console.error('Error saving FSM state:', error);\n    }\n  }, [fsm]);\n\n  const loadState = useCallback((blueprintId: string) => {\n    try {\n      const saved = localStorage.getItem(`${FSM_STORAGE_KEY}${blueprintId}`);\n      if (saved) {\n        const state = JSON.parse(saved);\n        fsm.importState(state);\n        syncState();\n      }\n    } catch (error) {\n      console.error('Error loading FSM state:', error);\n    }\n  }, [fsm, syncState]);\n\n  const value: FSMContextType = {\n    fsm,\n    currentState,\n    journeyData,\n    progress: fsm.progress,\n    advance,\n    edit,\n    reset,\n    canSkip: () => fsm.canSkip(),\n    updateData,\n    addReflection,\n    getStageContext: () => fsm.getStageContext(),\n    saveState,\n    loadState,\n    isInitiator: () => fsm.isInitiator(),\n    isClarifier: () => fsm.isClarifier(),\n    getCurrentStage: () => fsm.getCurrentStage(),\n    saveStageRecap: () => { fsm.saveStageRecap(); },\n    generateStageRecap: (stage: 'IDEATION' | 'JOURNEY' | 'DELIVERABLES') => fsm.generateStageRecap(stage)\n  };\n\n  return <FSMContext.Provider value={value}>{children}</FSMContext.Provider>;\n}\n\nexport function useFSMv2() {\n  const context = useContext(FSMContext);\n  if (!context) {\n    throw new Error('useFSMv2 must be used within FSMProviderV2');\n  }\n  return context;\n}","import type { WizardDataV3 } from '../types/wizardV3Types';\nimport type {\n  ProjectV3,\n  Phase,\n  Milestone,\n  Artifact,\n  StandardsCoverage,\n  Tier\n} from '../types/alf';\n\nconst WEEK_IN_MS = 7 * 24 * 60 * 60 * 1000;\n\nconst generateId = (prefix: string): string => `${prefix}_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;\n\nconst toISODate = (value: unknown): string | undefined => {\n  if (!value) {\n    return undefined;\n  }\n  if (value instanceof Date) {\n    return value.toISOString();\n  }\n  if (typeof value === 'string') {\n    return value;\n  }\n  return undefined;\n};\n\nconst coerceTier = (value: unknown, fallback: Tier): Tier => {\n  if (value === 'core' || value === 'scaffold' || value === 'aspirational') {\n    return value;\n  }\n  return fallback;\n};\n\nconst coerceConfidence = (value: unknown, fallback: number) =>\n  typeof value === 'number' ? value : fallback;\n\nconst cloneArray = <T extends Record<string, unknown>>(items: T[] | undefined): T[] =>\n  Array.isArray(items) ? items.map(item => ({ ...item })) : [];\n\nconst extractText = (value: unknown): string => {\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (value && typeof value === 'object' && 'text' in value) {\n    const maybeText = (value as { text?: unknown }).text;\n    if (typeof maybeText === 'string') {\n      return maybeText;\n    }\n  }\n  return '';\n};\n\nconst mapTieredTexts = (\n  items: Array<string | { text?: string; tier?: Tier; confidence?: number }> | undefined,\n  tier: Tier,\n  confidence: number\n) =>\n  (items ? items.map(item => {\n    if (typeof item === 'string') {\n      return { text: item, tier, confidence };\n    }\n    if (item && typeof item === 'object') {\n      return {\n        text: typeof item.text === 'string' ? item.text : '',\n        tier: coerceTier(item.tier, tier),\n        confidence: coerceConfidence(item.confidence, confidence)\n      };\n    }\n    return { text: '', tier, confidence };\n  }) : []).filter(entry => entry.text);\n\nconst buildDefaultPhases = (wizardData: WizardDataV3): Phase[] => {\n  const now = Date.now();\n  const learningGoals = Array.isArray(wizardData.learningGoals) ? wizardData.learningGoals : [];\n  const slices = [\n    learningGoals.slice(0, 1),\n    learningGoals.slice(1, 2),\n    learningGoals.slice(2, 3),\n    ['Present learnings to community']\n  ];\n  const names = ['Discover', 'Plan', 'Create', 'Share'];\n\n  return names.map((name, index) => {\n    const start = new Date(now + WEEK_IN_MS * index).toISOString();\n    const end = new Date(now + WEEK_IN_MS * (index + 1)).toISOString();\n    return {\n      id: generateId('phase'),\n      name,\n      start,\n      end,\n      duration: '1 week',\n      goals: (slices[index] || []).map(extractText).filter(Boolean)\n    } satisfies Phase;\n  });\n};\n\nconst buildDefaultMilestones = (phases: Phase[]): Milestone[] =>\n  phases.flatMap(phase => {\n    const start = toISODate((phase as unknown as { start?: string; startDate?: string }).start)\n      ?? toISODate((phase as unknown as { start?: string; startDate?: string }).startDate)\n      ?? new Date().toISOString();\n    const end = toISODate((phase as unknown as { end?: string; endDate?: string }).end)\n      ?? toISODate((phase as unknown as { end?: string; endDate?: string }).endDate)\n      ?? new Date().toISOString();\n    const midpoint = new Date((new Date(start).getTime() + new Date(end).getTime()) / 2).toISOString();\n\n    return [\n      {\n        id: generateId('milestone'),\n        phaseId: phase.id,\n        name: `${phase.name} Kickoff`,\n        description: `Begin ${phase.name.toLowerCase()} phase activities`,\n        due: start,\n        owner: 'teacher',\n        evidence: ['Team roles assigned', `${phase.name} plan documented`]\n      },\n      {\n        id: generateId('milestone'),\n        phaseId: phase.id,\n        name: `${phase.name} Checkpoint`,\n        description: `Reflect on ${phase.name.toLowerCase()} progress and adjust next steps`,\n        due: midpoint,\n        owner: 'student',\n        evidence: ['Progress documentation', 'Peer feedback collected']\n      }\n    ] satisfies Milestone[];\n  });\n\nconst buildDefaultArtifacts = (milestones: Milestone[]): Artifact[] => {\n  const firstMilestone = milestones[0]?.id ?? generateId('milestone');\n  return [\n    {\n      id: generateId('artifact'),\n      name: 'Research Portfolio',\n      description: 'Collection of research findings and sources gathered during the project.',\n      milestoneId: firstMilestone,\n      rubricIds: [],\n      exemplar: undefined\n    }\n  ];\n};\n\nconst buildDefaultStandardsCoverage = (\n  standards: Array<{ code?: string }> | undefined,\n  milestones: Milestone[]\n): StandardsCoverage[] => {\n  if (!Array.isArray(standards) || standards.length === 0 || milestones.length === 0) {\n    return [];\n  }\n  const primaryMilestone = milestones[0];\n  return standards\n    .map(standard => {\n      if (!standard?.code) {\n        return null;\n      }\n      return {\n        standardId: standard.code,\n        milestoneId: primaryMilestone.id,\n        phaseId: primaryMilestone.phaseId,\n        emphasis: 'introduce' as StandardsCoverage['emphasis']\n      } satisfies StandardsCoverage;\n    })\n    .filter((coverage): coverage is StandardsCoverage => Boolean(coverage));\n};\n\nconst defaultDifferentiation = {\n  tier: 'scaffold' as Tier,\n  confidence: 0.75,\n  tieredAssignments: [],\n  udlStrategies: {\n    representation: [],\n    action: [],\n    engagement: []\n  },\n  languageSupports: [],\n  executiveFunctionSupports: [],\n  accommodations: []\n};\n\nconst defaultCommunications = {\n  family: undefined,\n  admin: undefined,\n  partners: []\n};\n\nconst defaultExhibition = {\n  format: '',\n  audience: [] as string[],\n  date: undefined,\n  venue: undefined,\n  preparation: [] as string[],\n  tier: 'aspirational' as Tier,\n  confidence: 0.6\n};\n\nconst defaultEvidencePlan = {\n  checkpoints: [],\n  permissions: [] as string[],\n  storage: '',\n  dataManagement: undefined,\n  tier: 'core' as Tier,\n  confidence: 0.8\n};\n\nconst computeTierCounts = (project: ProjectV3) => {\n  const counts = { core: 0, scaffold: 0, aspirational: 0 };\n\n  const register = (candidate: unknown) => {\n    if (!candidate) {\n      return;\n    }\n    if (Array.isArray(candidate)) {\n      candidate.forEach(register);\n      return;\n    }\n    if (typeof candidate === 'object') {\n      const tier = (candidate as Record<string, unknown>).tier;\n      if (tier === 'core' || tier === 'scaffold' || tier === 'aspirational') {\n        counts[tier] += 1;\n      }\n      Object.values(candidate as Record<string, unknown>).forEach(register);\n    }\n  };\n\n  register(project);\n  return counts;\n};\n\nexport function normalizeProjectV3(wizardData: WizardDataV3): ProjectV3 {\n  const existingProjectId = (wizardData as unknown as { projectId?: string })?.projectId\n    ?? (wizardData.metadata as unknown as { projectId?: string })?.projectId;\n  const projectId = existingProjectId ?? generateId('proj');\n\n  const phases: Phase[] = Array.isArray(wizardData.phases) && wizardData.phases.length\n    ? cloneArray(wizardData.phases)\n    : buildDefaultPhases(wizardData);\n\n  const milestones: Milestone[] = Array.isArray(wizardData.milestones) && wizardData.milestones.length\n    ? cloneArray(wizardData.milestones)\n    : buildDefaultMilestones(phases);\n\n  const artifacts: Artifact[] = Array.isArray(wizardData.artifacts) && wizardData.artifacts.length\n    ? cloneArray(wizardData.artifacts)\n    : buildDefaultArtifacts(milestones);\n\n  const rubrics = Array.isArray(wizardData.rubrics) ? cloneArray(wizardData.rubrics) : [];\n  const roles = Array.isArray(wizardData.studentRoles) ? cloneArray(wizardData.studentRoles) : [];\n  const scaffolds = Array.isArray(wizardData.scaffolds) ? cloneArray(wizardData.scaffolds) : [];\n\n  const standards = Array.isArray(wizardData.standards) ? cloneArray(wizardData.standards) : [];\n  const standardsCoverage = buildDefaultStandardsCoverage(standards, milestones);\n\n  const nowISO = new Date().toISOString();\n  type WizardMetadata = { createdAt?: Date | string; lastModified?: Date | string; projectId?: string };\n  const metadata = (wizardData.metadata ?? {}) as WizardMetadata;\n  const createdISO = toISODate(metadata.createdAt) ?? nowISO;\n  const updatedISO = toISODate(metadata.lastModified) ?? nowISO;\n\n  const bigIdea = typeof wizardData.bigIdea === 'string'\n    ? { text: wizardData.bigIdea, tier: 'core' as Tier, confidence: 0.9 }\n    : {\n        text: extractText(wizardData.bigIdea),\n        tier: coerceTier((wizardData.bigIdea as Record<string, unknown> | undefined)?.tier, 'core'),\n        confidence: coerceConfidence((wizardData.bigIdea as Record<string, unknown> | undefined)?.confidence, 0.9)\n      };\n\n  const essentialQuestion = typeof wizardData.essentialQuestion === 'string'\n    ? { text: wizardData.essentialQuestion, tier: 'scaffold' as Tier, confidence: 0.85 }\n    : {\n        text: extractText(wizardData.essentialQuestion),\n        tier: coerceTier((wizardData.essentialQuestion as Record<string, unknown> | undefined)?.tier, 'scaffold'),\n        confidence: coerceConfidence((wizardData.essentialQuestion as Record<string, unknown> | undefined)?.confidence, 0.85)\n      };\n\n  const learningGoals = mapTieredTexts(wizardData.learningGoals, 'core', 0.85);\n  const successCriteria = mapTieredTexts(wizardData.successCriteria, 'scaffold', 0.8);\n\n  type ContextWithTier = { tier?: Tier; confidence?: number };\n  const contextSource = wizardData.projectContext as ContextWithTier | undefined;\n  const context = {\n    ...(wizardData.projectContext ?? {}),\n    tier: coerceTier(contextSource?.tier, 'core'),\n    confidence: coerceConfidence(contextSource?.confidence, 0.9)\n  };\n\n  const differentiation = wizardData.differentiation\n    ? { ...wizardData.differentiation }\n    : { ...defaultDifferentiation };\n\n  const communications = wizardData.communications\n    ? { ...wizardData.communications }\n    : { ...defaultCommunications };\n\n  const exhibition = wizardData.exhibition\n    ? { ...wizardData.exhibition }\n    : { ...defaultExhibition };\n\n  const evidencePlan = wizardData.evidencePlan\n    ? { ...wizardData.evidencePlan }\n    : { ...defaultEvidencePlan };\n\n  const risks = wizardData.riskManagement?.risks ? cloneArray(wizardData.riskManagement.risks) : [];\n  const contingencies = wizardData.riskManagement?.contingencies\n    ? cloneArray(wizardData.riskManagement.contingencies)\n    : [];\n\n  const project: ProjectV3 = {\n    id: projectId,\n    title: wizardData.projectTopic || 'Untitled Project',\n    description: wizardData.projectTopic || '',\n    tier: 'core',\n    confidence: 0.85,\n    context,\n    bigIdea,\n    essentialQuestion,\n    learningGoals,\n    successCriteria,\n    standards,\n    standardsCoverage,\n    phases,\n    milestones,\n    artifacts,\n    rubrics,\n    roles,\n    differentiation,\n    scaffolds,\n    communications,\n    exhibition,\n    evidencePlan,\n    risks,\n    contingencies,\n    metadata: {\n      created: createdISO,\n      updated: updatedISO,\n      version: '3.0',\n      schemaVersion: 3,\n      wizardVersion: '3.0',\n      contentTiers: { core: 0, scaffold: 0, aspirational: 0 }\n    }\n  };\n\n  project.metadata.contentTiers = computeTierCounts(project);\n\n  return project;\n}\n\nexport function validateProjectReferences(project: ProjectV3): { valid: boolean; errors: string[] } {\n  const errors: string[] = [];\n\n  const phaseIds = new Set(project.phases.map(phase => phase.id));\n  const milestoneIds = new Set(project.milestones.map(milestone => milestone.id));\n  const rubricIds = new Set(project.rubrics.map(rubric => rubric.id));\n\n  project.milestones.forEach(milestone => {\n    if (!phaseIds.has(milestone.phaseId)) {\n      errors.push(`Milestone \"${milestone.name}\" references non-existent phase: ${milestone.phaseId}`);\n    }\n  });\n\n  project.artifacts.forEach(artifact => {\n    if (artifact.milestoneId && !milestoneIds.has(artifact.milestoneId)) {\n      errors.push(`Artifact \"${artifact.name}\" references non-existent milestone: ${artifact.milestoneId}`);\n    }\n    artifact.rubricIds.forEach(rubricId => {\n      if (!rubricIds.has(rubricId)) {\n        errors.push(`Artifact \"${artifact.name}\" references non-existent rubric: ${rubricId}`);\n      }\n    });\n  });\n\n  project.standardsCoverage.forEach(coverage => {\n    if (!milestoneIds.has(coverage.milestoneId)) {\n      errors.push(`Standards coverage references non-existent milestone: ${coverage.milestoneId}`);\n    }\n  });\n\n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n","// Production-safe logger utility\nconst isDevelopment = import.meta.env.DEV;\nconst isDebugEnabled = import.meta.env?.VITE_DEBUG === 'true' || \n                      (typeof localStorage !== 'undefined' && localStorage.getItem('alfCoachDebug') === 'true');\n\nexport const logger = {\n  log: (...args: any[]) => {\n    if (isDevelopment || isDebugEnabled) {\n      console.log(...args);\n    }\n  },\n  \n  error: (...args: any[]) => {\n    // Always log errors, even in production\n    console.error(...args);\n  },\n  \n  warn: (...args: any[]) => {\n    if (isDevelopment || isDebugEnabled) {\n      console.warn(...args);\n    }\n  },\n  \n  debug: (...args: any[]) => {\n    if (isDevelopment || isDebugEnabled) {\n      console.debug(...args);\n    }\n  },\n  \n  info: (...args: any[]) => {\n    if (isDevelopment || isDebugEnabled) {\n      console.info(...args);\n    }\n  },\n  \n  group: (label: string) => {\n    if (isDevelopment || isDebugEnabled) {\n      console.group(label);\n    }\n  },\n  \n  groupEnd: () => {\n    if (isDevelopment || isDebugEnabled) {\n      console.groupEnd();\n    }\n  }\n};\n\nexport default logger;","// Feature flags for gradual rollout and A/B testing\nimport { logger } from './logger';\n\ninterface FeatureFlags {\n  useChatV6: boolean;\n  chatV6Percentage: number;\n  debugMode: boolean;\n  // New chat-first UI features\n  conversationalOnboarding: boolean;\n  inlineUIGuidance: boolean;\n  progressSidebar: boolean;\n  stageInitiatorCards: boolean;\n  improvedSuggestionCards: boolean;\n  inlineRecapPanel: boolean; // Inline recap card below chat (off by default)\n  inlineRecapAlways: boolean; // Show recap even without recent save\n  inlineRecapMinMessages: number; // Minimum messages before showing recap\n  processRibbon: boolean; // Show the ALF overview ribbon\n  firstRunTour: boolean; // Show first-run tour overlay\n  glossary: boolean; // Show glossary tooltips\n}\n\nclass FeatureFlagManager {\n  private flags: FeatureFlags;\n  private userId: string | null = null;\n\n  constructor() {\n    // Default flags - can be overridden by environment or remote config\n    this.flags = {\n      useChatV6: this.checkChatV6Eligibility(),\n      chatV6Percentage: this.getChatV6Percentage(),\n      debugMode: this.isDebugMode(),\n      // New features - gradually rolling out\n      conversationalOnboarding: this.getFlag('conversationalOnboarding', false),\n      inlineUIGuidance: this.getFlag('inlineUIGuidance', true),\n      progressSidebar: this.getFlag('progressSidebar', true),\n      stageInitiatorCards: this.getFlag('stageInitiatorCards', true),\n      improvedSuggestionCards: this.getFlag('improvedSuggestionCards', true),\n      inlineRecapPanel: this.getFlag('inlineRecapPanel', true),\n      inlineRecapAlways: this.getFlag('inlineRecapAlways', false),\n      inlineRecapMinMessages: this.getNumberFlag('inlineRecapMinMessages', 2),\n      processRibbon: this.getFlag('processRibbon', true),\n      firstRunTour: this.getFlag('firstRunTour', true),\n      glossary: this.getFlag('glossary', true)\n    };\n    \n    logger.log('Feature flags initialized:', this.flags);\n  }\n\n  // Check if current user should use ChatV6\n  private checkChatV6Eligibility(): boolean {\n    // Check for override flags first\n    const override = this.getOverride('useChatV6');\n    if (override !== null) {return override;}\n\n    // Check percentage rollout\n    const percentage = this.getChatV6Percentage();\n    const userHash = this.getUserHash();\n    \n    // Use consistent hashing to ensure same user always gets same experience\n    return (userHash % 100) < percentage;\n  }\n\n  // Get rollout percentage from environment\n  private getChatV6Percentage(): number {\n    const envPercentage = import.meta.env?.VITE_CHATV6_PERCENTAGE;\n    if (envPercentage) {\n      const parsed = parseInt(envPercentage, 10);\n      if (!isNaN(parsed) && parsed >= 0 && parsed <= 100) {\n        return parsed;\n      }\n    }\n    \n    // Default to 10% rollout\n    return 10;\n  }\n\n  // Check if debug mode is enabled\n  private isDebugMode(): boolean {\n    return import.meta.env?.VITE_DEBUG === 'true' || \n           localStorage.getItem('alfCoachDebug') === 'true';\n  }\n\n  // Generic flag getter with default value\n  private getFlag(flagName: string, defaultValue: boolean): boolean {\n    // Check for override first\n    const override = this.getOverride(flagName);\n    if (override !== null) return override;\n    \n    // Check environment variable\n    const envKey = `VITE_FEATURE_${flagName.toUpperCase()}`;\n    const envValue = import.meta.env?.[envKey];\n    if (envValue === 'true') return true;\n    if (envValue === 'false') return false;\n    \n    return defaultValue;\n  }\n\n  // Get override from localStorage (for testing)\n  private getOverride(flag: string): boolean | null {\n    const override = localStorage.getItem(`alfCoach_ff_${flag}`);\n    if (override === 'true') {return true;}\n    if (override === 'false') {return false;}\n    return null;\n  }\n\n  private getNumberFlag(flagName: string, defaultValue: number): number {\n    const override = localStorage.getItem(`alfCoach_ff_${flagName}`);\n    if (override !== null) {\n      const parsed = Number(override);\n      return isNaN(parsed) ? defaultValue : parsed;\n    }\n    const envKey = `VITE_FEATURE_${flagName.toUpperCase()}`;\n    const envValue = import.meta.env?.[envKey];\n    if (envValue !== undefined) {\n      const parsed = Number(envValue);\n      return isNaN(parsed) ? defaultValue : parsed;\n    }\n    return defaultValue;\n  }\n\n  // Generate consistent hash for user\n  private getUserHash(): number {\n    if (!this.userId) {\n      // Get or create user ID\n      this.userId = localStorage.getItem('alfCoach_userId');\n      if (!this.userId) {\n        this.userId = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        localStorage.setItem('alfCoach_userId', this.userId);\n      }\n    }\n\n    // Simple hash function\n    let hash = 0;\n    for (let i = 0; i < this.userId.length; i++) {\n      const char = this.userId.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    \n    return Math.abs(hash);\n  }\n\n  // Public API\n  public isEnabled(flag: keyof FeatureFlags): boolean {\n    return this.flags[flag] || false;\n  }\n\n  public getValue(flag: keyof FeatureFlags): any {\n    return this.flags[flag];\n  }\n\n  // Enable override for testing\n  public setOverride(flag: string, value: boolean): void {\n    localStorage.setItem(`alfCoach_ff_${flag}`, value.toString());\n    logger.log(`Feature flag override set: ${flag} = ${value}`);\n    \n    // Refresh flags\n    this.refreshFlags();\n  }\n\n  // Clear override\n  public clearOverride(flag: string): void {\n    localStorage.removeItem(`alfCoach_ff_${flag}`);\n    logger.log(`Feature flag override cleared: ${flag}`);\n    \n    // Refresh flags\n    this.refreshFlags();\n  }\n\n  // Refresh all flags\n  private refreshFlags(): void {\n    this.flags = {\n      useChatV6: this.checkChatV6Eligibility(),\n      chatV6Percentage: this.getChatV6Percentage(),\n      debugMode: this.isDebugMode(),\n      conversationalOnboarding: this.getFlag('conversationalOnboarding', false),\n      inlineUIGuidance: this.getFlag('inlineUIGuidance', true),\n      progressSidebar: this.getFlag('progressSidebar', true),\n      stageInitiatorCards: this.getFlag('stageInitiatorCards', true),\n      improvedSuggestionCards: this.getFlag('improvedSuggestionCards', true),\n      inlineRecapPanel: this.getFlag('inlineRecapPanel', true),\n      inlineRecapAlways: this.getFlag('inlineRecapAlways', false),\n      inlineRecapMinMessages: this.getNumberFlag('inlineRecapMinMessages', 2),\n      processRibbon: this.getFlag('processRibbon', true),\n      firstRunTour: this.getFlag('firstRunTour', true),\n      glossary: this.getFlag('glossary', true)\n    };\n  }\n\n  // Get current state for debugging\n  public getState(): FeatureFlags {\n    return { ...this.flags };\n  }\n}\n\n// Singleton instance\nexport const featureFlags = new FeatureFlagManager();\n\n// Convenience functions\nexport const shouldUseChatV6 = (): boolean => {\n  return featureFlags.isEnabled('useChatV6');\n};\n\nexport const isDebugEnabled = (): boolean => {\n  return featureFlags.isEnabled('debugMode');\n};\n\n// React hook for using feature flags\nimport { useState, useEffect } from 'react';\n\nexport function useFeatureFlag(flag: keyof FeatureFlags): boolean {\n  const [value, setValue] = useState(() => featureFlags.isEnabled(flag));\n  \n  useEffect(() => {\n    // Check for changes periodically (simple polling)\n    const interval = setInterval(() => {\n      const currentValue = featureFlags.isEnabled(flag);\n      setValue(currentValue);\n    }, 1000);\n    \n    return () => clearInterval(interval);\n  }, [flag]);\n  \n  return value;\n}\n\n// Development helpers\nif (import.meta.env?.DEV) {\n  // Expose to window for testing\n  (window as any).featureFlags = featureFlags;\n  (window as any).enableChatV6 = () => { featureFlags.setOverride('useChatV6', true); };\n  (window as any).disableChatV6 = () => { featureFlags.setOverride('useChatV6', false); };\n  (window as any).resetChatV6 = () => { featureFlags.clearOverride('useChatV6'); };\n  \n  // Add helpers for new features\n  (window as any).enableFeature = (flag: string) => { featureFlags.setOverride(flag, true); };\n  (window as any).disableFeature = (flag: string) => { featureFlags.setOverride(flag, false); };\n  (window as any).getFeatures = () => featureFlags.getState();\n}\n","/**\n * helpContent.ts\n * Context-aware help content for different stages and steps\n */\n\nexport interface HelpContent {\n  title: string;\n  description: string;\n  tips: string[];\n  examples?: string[];\n  resources?: { label: string; url?: string }[];\n}\n\n// Comprehensive help content organized by stage and step\nexport const HELP_CONTENT: Record<string, Record<string, HelpContent>> = {\n  ONBOARDING: {\n    default: {\n      title: 'Project Setup Wizard',\n      description: 'Gather essential information about your teaching context to personalize your ALF experience.',\n      tips: [\n        'Be specific about your subject area for better suggestions',\n        'Provide accurate grade level for age-appropriate activities',\n        'Consider realistic timeframes including breaks and holidays',\n        'Think about your learning environment and available resources'\n      ],\n      examples: [\n        'Environmental Science for 9th graders, 4-week unit',\n        'Creative Writing for college freshmen, semester-long',\n        'Elementary Math problem-solving, 2-week sprint'\n      ],\n      resources: [\n        { label: 'Planning Your First ALF Project' },\n        { label: 'Setting Realistic Project Scope' }\n      ]\n    }\n  },\n  \n  WELCOME: {\n    default: {\n      title: 'Getting Started with ALF Coach',\n      description: 'Welcome to the Active Learning Framework. This tool helps you design project-based learning experiences that engage students in real-world problem solving.',\n      tips: [\n        'Start by providing basic information about your class',\n        'Be specific about your subject area and grade level',\n        'Consider your available time and resources',\n        'Think about your learning objectives'\n      ]\n    },\n    subject: {\n      title: 'Choosing Your Subject Area',\n      description: 'Your subject area determines the content focus and helps tailor suggestions to your curriculum needs.',\n      tips: [\n        'Be specific (e.g., \"Environmental Science\" not just \"Science\")',\n        'Consider interdisciplinary connections',\n        'Think about real-world applications in your subject',\n        'Include any special focus areas or topics'\n      ],\n      examples: [\n        'Environmental Science - Climate Change',\n        'History - Local Community Stories',\n        'Mathematics - Data Analysis and Statistics',\n        'English - Creative Writing and Journalism'\n      ]\n    },\n    gradeLevel: {\n      title: 'Grade Level Considerations',\n      description: 'Grade level helps determine appropriate complexity, scaffolding needs, and engagement strategies.',\n      tips: [\n        'Consider developmental readiness',\n        'Think about prior knowledge and skills',\n        'Account for varying ability levels within your class',\n        'Plan for differentiation needs'\n      ]\n    },\n    duration: {\n      title: 'Project Duration Planning',\n      description: 'The time frame affects project scope, depth of investigation, and assessment opportunities.',\n      tips: [\n        'Be realistic about available class time',\n        'Account for holidays and testing schedules',\n        'Build in buffer time for iteration',\n        'Consider homework vs. class time balance'\n      ],\n      examples: [\n        '2 weeks - Quick sprint project',\n        '4-6 weeks - Standard unit project',\n        '8-12 weeks - Deep dive investigation',\n        'Semester - Comprehensive capstone'\n      ]\n    }\n  },\n  \n  IDEATION: {\n    default: {\n      title: 'Ideation Phase Overview',\n      description: 'The Ideation phase establishes the conceptual foundation for your project. You\\'ll define the Big Idea, Essential Question, and Challenge that will drive student learning.',\n      tips: [\n        'Start broad, then narrow your focus',\n        'Connect to student interests and experiences',\n        'Ensure real-world relevance',\n        'Consider available resources and constraints'\n      ]\n    },\n    bigIdea: {\n      title: 'Understanding Big Ideas',\n      description: 'A Big Idea is the core concept or enduring understanding that anchors your entire project. It should be broad enough to explore deeply yet focused enough to be meaningful.',\n      tips: [\n        'Should be transferable beyond this specific project',\n        'Connects to real-world issues or applications',\n        'Allows for multiple perspectives and interpretations',\n        'Aligns with curriculum standards and learning goals'\n      ],\n      examples: [\n        'Systems thinking helps us understand complex problems',\n        'Human actions have environmental consequences',\n        'Stories shape our understanding of identity and culture',\n        'Mathematical patterns exist throughout nature',\n        'Technology is a tool that can solve problems or create them'\n      ],\n      resources: [\n        { label: 'Understanding by Design Framework' },\n        { label: 'Big Ideas in Science Education' },\n        { label: 'Concept-Based Curriculum Design' }\n      ]\n    },\n    essentialQuestion: {\n      title: 'Crafting Essential Questions',\n      description: 'Essential Questions are open-ended inquiries that guide student investigation throughout the project. They cannot be answered with a simple yes/no or by looking up facts.',\n      tips: [\n        'Start with \"How might...\" or \"Why does...\" or \"What if...\"',\n        'Ensure multiple valid answers are possible',\n        'Require research, analysis, and critical thinking',\n        'Connect directly to your Big Idea',\n        'Be engaging and thought-provoking for students'\n      ],\n      examples: [\n        'How might we reduce our school\\'s environmental impact?',\n        'Why do some communities thrive while others struggle?',\n        'What makes a story worth telling?',\n        'How can we use math to make better decisions?',\n        'What if we could redesign our learning spaces?'\n      ],\n      resources: [\n        { label: 'Essential Questions Guide' },\n        { label: 'Question Formulation Technique' }\n      ]\n    },\n    challenge: {\n      title: 'Defining Authentic Challenges',\n      description: 'The Challenge is the real-world problem or opportunity that students will address. It provides purpose and context for their learning.',\n      tips: [\n        'Must have a genuine audience beyond the teacher',\n        'Should result in a tangible product or solution',\n        'Allows for multiple solution approaches',\n        'Connects to community needs or interests',\n        'Provides opportunity for real impact'\n      ],\n      examples: [\n        'Design a water conservation plan for our school',\n        'Create a digital archive of local history',\n        'Develop a peer tutoring program for math',\n        'Build a community garden that teaches sustainability',\n        'Produce a podcast series about social justice issues'\n      ],\n      resources: [\n        { label: 'PBL Challenge Design' },\n        { label: 'Authentic Assessment Strategies' }\n      ]\n    }\n  },\n  \n  JOURNEY: {\n    default: {\n      title: 'Learning Journey Design',\n      description: 'The Learning Journey maps how students will move through the Creative Process phases to tackle the challenge. Each phase builds on the previous one.',\n      tips: [\n        'Balance structure with student autonomy',\n        'Build in opportunities for iteration and revision',\n        'Plan for both individual and collaborative work',\n        'Include regular check-ins and formative assessment'\n      ]\n    },\n    analyze: {\n      title: 'Analyze Phase',\n      description: 'In the Analyze phase, students investigate the problem space, gather information, and develop deep understanding of the challenge context.',\n      tips: [\n        'Students research existing solutions and identify gaps',\n        'Conduct stakeholder interviews and surveys',\n        'Gather and analyze relevant data',\n        'Map the current state of the problem',\n        'Identify root causes and contributing factors'\n      ],\n      examples: [\n        'Interview community members about local issues',\n        'Research case studies of similar problems',\n        'Collect and analyze relevant data sets',\n        'Create journey maps or system diagrams',\n        'Document current practices and pain points'\n      ]\n    },\n    brainstorm: {\n      title: 'Brainstorm Phase',\n      description: 'During Brainstorm, students generate diverse solutions through creative thinking exercises and collaborative ideation.',\n      tips: [\n        'Use design thinking methodologies',\n        'Encourage wild ideas without judgment',\n        'Build on others\\' ideas collaboratively',\n        'Explore solutions from different fields',\n        'Prioritize quantity over quality initially'\n      ],\n      examples: [\n        'Conduct rapid ideation sessions',\n        'Use SCAMPER technique for idea generation',\n        'Create mind maps and concept webs',\n        'Sketch multiple solution concepts',\n        'Get feedback on initial ideas from peers'\n      ]\n    },\n    prototype: {\n      title: 'Prototype Phase',\n      description: 'In Prototype, students build working models, test their ideas, and refine solutions based on feedback.',\n      tips: [\n        'Start with low-fidelity prototypes',\n        'Test early and often with users',\n        'Document iterations and improvements',\n        'Focus on core functionality first',\n        'Gather feedback systematically'\n      ],\n      examples: [\n        'Build physical or digital models',\n        'Create mockups and wireframes',\n        'Develop pilot programs or trials',\n        'Test with target audience',\n        'Iterate based on user feedback'\n      ]\n    },\n    evaluate: {\n      title: 'Evaluate Phase',\n      description: 'During Evaluate, students assess their solutions, reflect on learning, and present to authentic audiences.',\n      tips: [\n        'Measure impact against success criteria',\n        'Reflect on both process and product',\n        'Present to stakeholders for feedback',\n        'Document lessons learned',\n        'Plan next steps for implementation'\n      ],\n      examples: [\n        'Present to community partners',\n        'Conduct formal testing of solutions',\n        'Create reflection portfolios',\n        'Peer review and assessment',\n        'Plan for sustained implementation'\n      ]\n    }\n  },\n  \n  DELIVERABLES: {\n    default: {\n      title: 'Defining Success Metrics',\n      description: 'Establish clear expectations for both the learning process and final products. Create authentic assessment that values growth and achievement.',\n      tips: [\n        'Balance process and product assessment',\n        'Include self and peer evaluation',\n        'Align with real-world quality standards',\n        'Provide multiple ways to demonstrate learning'\n      ]\n    },\n    rubric: {\n      title: 'Rubric Design',\n      description: 'Create clear, student-friendly criteria that guide learning and assessment throughout the project.',\n      tips: [\n        'Use student-friendly language',\n        'Include both academic and 21st-century skills',\n        'Co-create with students when possible',\n        'Provide exemplars for each level',\n        'Focus on growth and improvement'\n      ],\n      examples: [\n        'Content mastery and understanding',\n        'Critical thinking and problem solving',\n        'Collaboration and communication',\n        'Creativity and innovation',\n        'Self-direction and project management'\n      ]\n    },\n    milestones: {\n      title: 'Milestone Planning',\n      description: 'Structure project checkpoints that provide opportunities for feedback, revision, and celebration of progress.',\n      tips: [\n        'Space milestones evenly throughout project',\n        'Include both individual and team deliverables',\n        'Build in revision time after feedback',\n        'Celebrate incremental achievements',\n        'Use milestones for formative assessment'\n      ],\n      examples: [\n        'Research synthesis presentation',\n        'Initial prototype demonstration',\n        'Peer feedback session',\n        'Expert review panel',\n        'Final exhibition or presentation'\n      ]\n    },\n    presentation: {\n      title: 'Authentic Presentation',\n      description: 'Plan how students will share their work with genuine audiences who care about the outcomes.',\n      tips: [\n        'Identify stakeholders early in the process',\n        'Prepare students for professional presentation',\n        'Include multiple presentation formats',\n        'Document and archive student work',\n        'Celebrate achievements publicly'\n      ],\n      examples: [\n        'Community exhibition night',\n        'Professional panel presentation',\n        'Digital portfolio showcase',\n        'Peer teaching sessions',\n        'Implementation with partner organizations'\n      ]\n    }\n  }\n};\n\n/**\n * Get help content for a specific stage and step\n */\nexport function getHelpContent(stage: string, step?: string): HelpContent {\n  const stageContent = HELP_CONTENT[stage];\n  if (!stageContent) {\n    return {\n      title: 'Help',\n      description: 'Get guidance on using ALF Coach to design your project.',\n      tips: ['Navigate through each stage', 'Follow the prompts', 'Ask for help when needed']\n    };\n  }\n  \n  const content = step ? stageContent[step] : stageContent.default;\n  return content || stageContent.default || {\n    title: 'Help',\n    description: 'Get guidance on this step.',\n    tips: []\n  };\n}\n\n/**\n * Get contextual help based on current message content\n */\nexport function getContextualHelp(messageContent: string, stage: string): HelpContent {\n  const lowerContent = messageContent.toLowerCase();\n  \n  // Check for keywords to determine which help to show\n  if (lowerContent.includes('big idea')) {\n    return getHelpContent(stage, 'bigIdea');\n  }\n  if (lowerContent.includes('essential question')) {\n    return getHelpContent(stage, 'essentialQuestion');\n  }\n  if (lowerContent.includes('challenge')) {\n    return getHelpContent(stage, 'challenge');\n  }\n  if (lowerContent.includes('analyze')) {\n    return getHelpContent('JOURNEY', 'analyze');\n  }\n  if (lowerContent.includes('brainstorm')) {\n    return getHelpContent('JOURNEY', 'brainstorm');\n  }\n  if (lowerContent.includes('prototype')) {\n    return getHelpContent('JOURNEY', 'prototype');\n  }\n  if (lowerContent.includes('evaluate')) {\n    return getHelpContent('JOURNEY', 'evaluate');\n  }\n  if (lowerContent.includes('rubric')) {\n    return getHelpContent('DELIVERABLES', 'rubric');\n  }\n  \n  // Default to stage help\n  return getHelpContent(stage);\n}","/**\n * suggestionEngine.ts\n * Deterministic, profile-driven suggestions for each stage.\n * Works offline and remains domain-agnostic while using the educator's context.\n */\n\nexport type SubjectProfile = 'STEM' | 'Arts' | 'Humanities' | 'Social' | 'Language' | 'Interdisciplinary' | 'General';\nexport type GradeBand = 'Elementary' | 'Middle' | 'High' | 'HigherEd' | 'Adult' | 'General';\n\nexport interface SuggestionItem {\n  id: string;\n  text: string;\n  category?: string;\n}\n\nexport interface SuggestionContext {\n  subjects?: string[];\n  gradeLevel?: string;\n  duration?: string;\n  projectTopic?: string;\n  bigIdea?: string;\n  essentialQuestion?: string;\n  challenge?: string;\n}\n\nexport function getSubjectProfile(subjects?: string[]): SubjectProfile {\n  const text = (subjects || []).join(' ').toLowerCase();\n  if (!text) return 'General';\n  if (text.match(/math|science|stem|technology|engineering|cs|computer/)) return 'STEM';\n  if (text.match(/art|music|theater|drama|design|visual/)) return 'Arts';\n  if (text.match(/history|social|civics|geography|economics|government/)) return 'Social';\n  if (text.match(/english|language|literature|writing|composition|world languages/)) return 'Language';\n  if (text.match(/interdisciplinary|cross[- ]?disciplinary|project|capstone/)) return 'Interdisciplinary';\n  return 'General';\n}\n\nexport function getGradeBand(gradeLevel?: string): GradeBand {\n  const t = (gradeLevel || '').toLowerCase();\n  if (t.includes('higher') || t.includes('college') || t.includes('university')) return 'HigherEd';\n  if (t.includes('adult') || t.includes('professional')) return 'Adult';\n  if (t.includes('high') || t.match(/9|10|11|12/)) return 'High';\n  if (t.includes('middle') || t.match(/6|7|8/)) return 'Middle';\n  if (t.includes('elementary') || t.match(/k|1|2|3|4|5/)) return 'Elementary';\n  return 'General';\n}\n\nexport function stageSuggestions(stage: string, ctx: SuggestionContext): SuggestionItem[] {\n  const profile = getSubjectProfile(ctx.subjects);\n  const band = getGradeBand(ctx.gradeLevel);\n  const topic = ctx.projectTopic || ctx.bigIdea || '';\n\n  // Helper to keep exactly 3 items\n  const pick3 = (arr: SuggestionItem[]) => arr.slice(0, 3);\n\n  if (stage === 'BIG_IDEA' || stage === 'IDEATION_BIG_IDEA') {\n    const base: Record<SubjectProfile, SuggestionItem[]> = {\n      STEM: [\n        { id: 'bi-1', text: `Technology and design shape how we solve complex problems${topic ? ' in ' + topic : ''}` },\n        { id: 'bi-2', text: 'Systems thinking reveals cause and effect in the real world' },\n        { id: 'bi-3', text: `Data and models help us make better decisions${topic ? ' about ' + topic : ''}` }\n      ],\n      Arts: [\n        { id: 'bi-1', text: `Creative expression influences how communities see themselves${topic ? ' around ' + topic : ''}` },\n        { id: 'bi-2', text: 'Design choices affect how people experience places and ideas' },\n        { id: 'bi-3', text: 'Stories and artifacts can drive social change' }\n      ],\n      Humanities: [\n        { id: 'bi-1', text: `Past decisions shape today’s challenges and opportunities${topic ? ' in ' + topic : ''}` },\n        { id: 'bi-2', text: 'Perspective and narrative influence how we interpret events' },\n        { id: 'bi-3', text: 'Communities evolve through culture, policy, and place' }\n      ],\n      Social: [\n        { id: 'bi-1', text: `People, policy, and place interact to shape equitable communities${topic ? ' related to ' + topic : ''}` },\n        { id: 'bi-2', text: 'Civic action connects learning to real-world impact' },\n        { id: 'bi-3', text: 'Public problems require informed, collaborative solutions' }\n      ],\n      Language: [\n        { id: 'bi-1', text: 'Language and media shape what we understand and believe' },\n        { id: 'bi-2', text: 'Communication connects diverse audiences around shared goals' },\n        { id: 'bi-3', text: 'Stories can change minds and inspire action' }\n      ],\n      Interdisciplinary: [\n        { id: 'bi-1', text: 'Innovation happens at the intersection of different fields' },\n        { id: 'bi-2', text: 'Complex problems require multiple perspectives and skills' },\n        { id: 'bi-3', text: `Design connects ideas to real outcomes${topic ? ' for ' + topic : ''}` }\n      ],\n      General: [\n        // Added explicit phrasing to align with E2E selector: /Explore how policy/i\n        { id: 'bi-1', text: 'Explore how policy, people, and place interact' },\n        { id: 'bi-2', text: 'How innovation emerges from constraints' },\n        { id: 'bi-3', text: `The relationship between individual actions and collective impact${topic ? ' for ' + topic : ''}` }\n      ]\n    };\n    return pick3(base[profile]);\n  }\n\n  if (stage === 'ESSENTIAL_QUESTION' || stage === 'IDEATION_EQ') {\n    // Use topic if available to ground the question forms\n    const t = topic || 'this topic';\n    const forms: SuggestionItem[] = band === 'Elementary'\n      ? [\n          { id: 'eq-1', text: `How can we help others understand ${t}?` },\n          { id: 'eq-2', text: `Why is ${t} important for people around us?` },\n          { id: 'eq-3', text: `What could we do about ${t} at our school?` }\n        ]\n      : [\n          { id: 'eq-1', text: `How might we improve understanding of ${t} for our community?` },\n          { id: 'eq-2', text: `In what ways does ${t} affect people differently?` },\n          { id: 'eq-3', text: `Why does ${t} matter for our future, and how could we respond?` }\n        ];\n    return pick3(forms);\n  }\n\n  if (stage === 'CHALLENGE' || stage === 'IDEATION_CHALLENGE') {\n    const gist = (ctx.essentialQuestion || ctx.bigIdea || 'this challenge').slice(0, 80);\n    const items: SuggestionItem[] = band === 'Elementary'\n      ? [\n          { id: 'ch-1', text: `Create something that helps others learn about: \"${gist}\"` },\n          { id: 'ch-2', text: 'Design a poster, model, or short video to teach younger students' },\n          { id: 'ch-3', text: 'Test your idea in class and ask for feedback' }\n        ]\n      : band === 'Middle'\n      ? [\n          { id: 'ch-1', text: `Design and test a solution that addresses: \"${gist}\"` },\n          { id: 'ch-2', text: 'Create a campaign or resource for your school or neighborhood' },\n          { id: 'ch-3', text: 'Prototype your idea and gather user feedback' }\n        ]\n      : [\n          { id: 'ch-1', text: `Develop and evaluate a prototype that addresses: \"${gist}\" for a defined audience` },\n          { id: 'ch-2', text: 'Produce a professional resource (briefing, toolkit, or training) for stakeholders' },\n          { id: 'ch-3', text: 'Pilot the solution with users and iterate based on evidence' }\n        ];\n    return pick3(items);\n  }\n\n  if (stage.startsWith('JOURNEY')) {\n    const items: SuggestionItem[] = band === 'Elementary'\n      ? [\n          { id: 'j-1', text: 'Analyze: read, watch, and ask questions to learn about the problem' },\n          { id: 'j-2', text: 'Brainstorm: sketch or list ideas with teammates' },\n          { id: 'j-3', text: 'Prototype/Evaluate: build a simple model and get feedback' }\n        ]\n      : band === 'Middle'\n      ? [\n          { id: 'j-1', text: 'Analyze: gather info from articles, data, or short interviews' },\n          { id: 'j-2', text: 'Brainstorm: compare ideas and choose one with clear criteria' },\n          { id: 'j-3', text: 'Prototype/Evaluate: test with peers and refine your plan' }\n        ]\n      : [\n          { id: 'j-1', text: 'Analyze: literature scan, stakeholder interviews, and data exploration' },\n          { id: 'j-2', text: 'Brainstorm: generate alternatives, evaluate trade‑offs, select direction' },\n          { id: 'j-3', text: 'Prototype/Evaluate: build, user test, measure outcomes, iterate' }\n        ];\n    return pick3(items);\n  }\n\n  if (stage === 'DELIVERABLES') {\n    const items: SuggestionItem[] = band === 'Elementary'\n      ? [\n          { id: 'd-1', text: 'Milestones: plan 3 checkpoints (draft, practice, final share)' },\n          { id: 'd-2', text: 'Rubric: clear, kid‑friendly criteria (ideas, effort, teamwork)' },\n          { id: 'd-3', text: 'Impact: share with classmates, families, or school community' }\n        ]\n      : band === 'Middle'\n      ? [\n          { id: 'd-1', text: 'Milestones: research summary, prototype, final presentation' },\n          { id: 'd-2', text: 'Rubric: understanding, process, product (3 levels)' },\n          { id: 'd-3', text: 'Impact: present to a school or neighborhood audience' }\n        ]\n      : [\n          { id: 'd-1', text: 'Milestones: proposal, pilot, public showcase or stakeholder briefing' },\n          { id: 'd-2', text: 'Rubric: criteria with descriptors (insight, rigor, usability, impact)' },\n          { id: 'd-3', text: 'Impact: publish or present to an authentic external audience' }\n        ];\n    return pick3(items);\n  }\n\n  return pick3([\n    { id: 'def-1', text: 'Explore multiple approaches to your goal' },\n    { id: 'def-2', text: 'Consider who benefits and how you will know' },\n    { id: 'def-3', text: 'Plan small steps you can test quickly' }\n  ]);\n}\n","/**\n * Stage-specific content generator for PBL flow\n * Provides contextual suggestions, help, and examples for each stage\n */\nimport { stageSuggestions } from './suggestionEngine';\n\nexport interface StageSuggestion {\n  id: string;\n  text: string;\n}\n\ninterface StageContext {\n  subject?: string;\n  gradeLevel?: string;\n  bigIdea?: string;\n  essentialQuestion?: string;\n  challenge?: string;\n  projectTopic?: string;\n}\n\n/**\n * Generate stage-specific suggestions based on current stage and context\n */\nexport function getStageSpecificSuggestions(\n  stage: string,\n  context: StageContext\n): StageSuggestion[] {\n  // Prefer profile-driven deterministic suggestions first\n  try {\n    const items = stageSuggestions(stage, {\n      subjects: context.subject ? context.subject.split(',').map(s => s.trim()) : undefined,\n      gradeLevel: context.gradeLevel,\n      projectTopic: context.projectTopic,\n      bigIdea: context.bigIdea,\n      essentialQuestion: context.essentialQuestion,\n      challenge: context.challenge\n    });\n    if (items && items.length) {\n      return items.map(i => ({ id: i.id, text: i.text })).slice(0, 3);\n    }\n  } catch {}\n  switch (stage) {\n    case 'GROUNDING':\n      return getGroundingSuggestions(context);\n    \n    case 'BIG_IDEA':\n    case 'IDEATION_BIG_IDEA':\n      return getBigIdeaSuggestions(context);\n    \n    case 'ESSENTIAL_QUESTION':\n    case 'IDEATION_EQ':\n      return getEssentialQuestionSuggestions(context);\n    \n    case 'CHALLENGE':\n    case 'IDEATION_CHALLENGE':\n      return getChallengeSuggestions(context);\n    \n    case 'JOURNEY':\n    case 'JOURNEY_ANALYZE':\n    case 'JOURNEY_BRAINSTORM':\n    case 'JOURNEY_PROTOTYPE':\n    case 'JOURNEY_EVALUATE':\n      return getJourneySuggestions(stage, context);\n    \n    case 'DELIVERABLES':\n    case 'DELIVER_MILESTONES':\n    case 'DELIVER_RUBRIC':\n      return getDeliverablesSuggestions(context);\n    \n    default:\n      return getDefaultSuggestions(context);\n  }\n}\n\nfunction getGroundingSuggestions(context: StageContext): StageSuggestion[] {\n  const { subject, projectTopic } = context;\n  const suggestions: StageSuggestion[] = [];\n\n  // Generate context-specific grounding suggestions\n  if (projectTopic?.toLowerCase().includes('sustainable') || projectTopic?.toLowerCase().includes('garden')) {\n    suggestions.push(\n      { id: 'ground-1', text: 'Focus on how environmental systems connect to your local community' },\n      { id: 'ground-2', text: 'Consider the role of water conservation in sustainable food production' },\n      { id: 'ground-3', text: 'Explore how school gardens can demonstrate ecological principles' }\n    );\n  } else if (subject?.toLowerCase().includes('science')) {\n    suggestions.push(\n      { id: 'ground-1', text: 'Connect scientific concepts to real-world applications students see daily' },\n      { id: 'ground-2', text: 'Focus on how science helps us solve current challenges' },\n      { id: 'ground-3', text: 'Consider how students can use science to make their community better' }\n    );\n  } else {\n    suggestions.push(\n      { id: 'ground-1', text: 'Start with issues that matter to your students\\' lives and futures' },\n      { id: 'ground-2', text: 'Connect academic content to real problems they can help solve' },\n      { id: 'ground-3', text: 'Build on what students already know and care about' }\n    );\n  }\n\n  return suggestions.slice(0, 3);\n}\n\nfunction getBigIdeaSuggestions(context: StageContext): StageSuggestion[] {\n  const { subject, gradeLevel, projectTopic } = context;\n  const suggestions: StageSuggestion[] = [];\n  const subjectLower = subject?.toLowerCase() || '';\n\n  // Handle interdisciplinary combinations first\n  if (subjectLower.includes('art') && subjectLower.includes('science')) {\n    suggestions.push(\n      { id: 'bi-1', text: 'Visual representation reveals patterns in scientific data' },\n      { id: 'bi-2', text: 'Creative expression makes complex concepts accessible to all' },\n      { id: 'bi-3', text: 'Art and science collaboration drives innovation and understanding' }\n    );\n  } else if (subjectLower.includes('stem') || (subjectLower.includes('science') && subjectLower.includes('technology'))) {\n    suggestions.push(\n      { id: 'bi-1', text: 'Technology amplifies our ability to solve complex problems' },\n      { id: 'bi-2', text: 'Engineering design thinking bridges theory and practice' },\n      { id: 'bi-3', text: 'Mathematical models help us understand and predict change' }\n    );\n  } else if (subjectLower.includes('interdisciplinary')) {\n    suggestions.push(\n      { id: 'bi-1', text: 'Real-world challenges require multiple perspectives and skills' },\n      { id: 'bi-2', text: 'Innovation happens at the intersection of different fields' },\n      { id: 'bi-3', text: 'Complex problems need collaborative, cross-disciplinary solutions' }\n    );\n  }\n  // Single subject suggestions\n  else if (subjectLower.includes('science') || projectTopic?.toLowerCase().includes('ecosystem')) {\n    suggestions.push(\n      { id: 'bi-1', text: 'The interconnection between human activity and environmental systems' },\n      { id: 'bi-2', text: 'How natural cycles and patterns shape our world' },\n      { id: 'bi-3', text: 'The balance between progress and preservation' }\n    );\n  } else if (subjectLower.includes('art')) {\n    suggestions.push(\n      { id: 'bi-1', text: 'Art as a powerful tool for communication and social change' },\n      { id: 'bi-2', text: 'Creative expression reflects and shapes cultural identity' },\n      { id: 'bi-3', text: 'Visual storytelling makes complex ideas accessible' }\n    );\n  } else if (subjectLower.includes('history') || subjectLower.includes('social')) {\n    suggestions.push(\n      { id: 'bi-1', text: 'How past decisions shape present challenges' },\n      { id: 'bi-2', text: 'The power of individual actions in collective change' },\n      { id: 'bi-3', text: 'Understanding perspective to build empathy' }\n    );\n  } else if (subjectLower.includes('math')) {\n    suggestions.push(\n      { id: 'bi-1', text: 'Mathematical patterns that predict real-world outcomes' },\n      { id: 'bi-2', text: 'Using data to tell meaningful stories' },\n      { id: 'bi-3', text: 'The hidden mathematics in everyday decisions' }\n    );\n  } else if (subjectLower.includes('english') || subjectLower.includes('language')) {\n    suggestions.push(\n      { id: 'bi-1', text: 'Stories connect us to universal human experiences' },\n      { id: 'bi-2', text: 'Language shapes how we understand and express our world' },\n      { id: 'bi-3', text: 'Effective communication bridges differences and builds understanding' }\n    );\n  } else {\n    // Generic suggestions for other combinations\n    suggestions.push(\n      { id: 'bi-1', text: 'The intersection of creativity and problem-solving' },\n      { id: 'bi-2', text: 'How innovation emerges from constraints' },\n      { id: 'bi-3', text: 'The relationship between individual actions and collective impact' }\n    );\n  }\n\n  // Ensure we always return exactly 3 suggestions\n  return suggestions.slice(0, 3);\n}\n\nfunction getEssentialQuestionSuggestions(context: StageContext): StageSuggestion[] {\n  const { bigIdea, subject, gradeLevel } = context;\n  const suggestions: StageSuggestion[] = [];\n  const subjectLower = subject?.toLowerCase() || '';\n\n  if (bigIdea) {\n    // Generate questions based on the big idea\n    const bigIdeaShort = bigIdea.length > 50 ? bigIdea.substring(0, 50) + '...' : bigIdea;\n    suggestions.push(\n      { id: 'eq-1', text: `How does \"${bigIdeaShort}\" impact our daily lives?` },\n      { id: 'eq-2', text: `Why should ${gradeLevel || 'students'} care about ${bigIdeaShort}?` },\n      { id: 'eq-3', text: `What would change if everyone understood ${bigIdeaShort}?` }\n    );\n  } \n  // Interdisciplinary combinations first\n  else if (subjectLower.includes('art') && subjectLower.includes('science')) {\n    suggestions.push(\n      { id: 'eq-1', text: 'How can art help us understand and communicate scientific concepts?' },\n      { id: 'eq-2', text: 'Why do both artists and scientists observe and interpret the world?' },\n      { id: 'eq-3', text: 'What happens when creative expression meets scientific discovery?' }\n    );\n  } else if (subjectLower.includes('interdisciplinary')) {\n    suggestions.push(\n      { id: 'eq-1', text: 'How do different subject areas work together to solve real problems?' },\n      { id: 'eq-2', text: 'Why do complex challenges require multiple perspectives?' },\n      { id: 'eq-3', text: 'What innovations emerge when different fields collaborate?' }\n    );\n  }\n  // Single subject questions\n  else if (subjectLower.includes('science')) {\n    suggestions.push(\n      { id: 'eq-1', text: 'How can scientific thinking help us solve community problems?' },\n      { id: 'eq-2', text: 'Why do natural patterns repeat across different scales?' },\n      { id: 'eq-3', text: 'What happens when human systems conflict with natural ones?' }\n    );\n  } else if (subjectLower.includes('art')) {\n    suggestions.push(\n      { id: 'eq-1', text: 'How does art reflect and shape our understanding of the world?' },\n      { id: 'eq-2', text: 'Why is creative expression essential to human communication?' },\n      { id: 'eq-3', text: 'What messages can art convey that words cannot?' }\n    );\n  } else if (subjectLower.includes('history')) {\n    suggestions.push(\n      { id: 'eq-1', text: 'How do past decisions create present challenges?' },\n      { id: 'eq-2', text: 'Why do certain patterns repeat throughout history?' },\n      { id: 'eq-3', text: 'What can historical perspectives teach us about current issues?' }\n    );\n  } else if (subjectLower.includes('math')) {\n    suggestions.push(\n      { id: 'eq-1', text: 'How can mathematical models predict real-world outcomes?' },\n      { id: 'eq-2', text: 'Why do patterns in data reveal hidden truths?' },\n      { id: 'eq-3', text: 'What decisions become clearer through mathematical thinking?' }\n    );\n  } else {\n    // Generic essential questions\n    suggestions.push(\n      { id: 'eq-1', text: 'How can we make a positive impact on our community?' },\n      { id: 'eq-2', text: 'Why does this challenge matter for our future?' },\n      { id: 'eq-3', text: 'What would success look like for all stakeholders?' }\n    );\n  }\n\n  return suggestions.slice(0, 3);\n}\n\nfunction getChallengeSuggestions(context: StageContext): StageSuggestion[] {\n  const { essentialQuestion, subject, gradeLevel, bigIdea } = context;\n  const suggestions: StageSuggestion[] = [];\n\n  // Age-appropriate challenges\n  if (gradeLevel?.toLowerCase().includes('elementary') || gradeLevel?.toLowerCase().includes('5')) {\n    suggestions.push(\n      { id: 'ch-1', text: 'Design a solution to improve our school environment' },\n      { id: 'ch-2', text: 'Create a presentation to teach younger students about this topic' },\n      { id: 'ch-3', text: 'Build a model that demonstrates your understanding' }\n    );\n  } else if (gradeLevel?.toLowerCase().includes('middle') || gradeLevel?.toLowerCase().includes('8')) {\n    suggestions.push(\n      { id: 'ch-1', text: 'Create a campaign to address a community issue' },\n      { id: 'ch-2', text: 'Design a prototype that solves a real problem' },\n      { id: 'ch-3', text: 'Develop a proposal for improving our school or neighborhood' }\n    );\n  } else if (gradeLevel?.toLowerCase().includes('high') || gradeLevel?.includes('9') || gradeLevel?.includes('10') || gradeLevel?.includes('11') || gradeLevel?.includes('12')) {\n    suggestions.push(\n      { id: 'ch-1', text: 'Develop a professional-quality solution for a client' },\n      { id: 'ch-2', text: 'Create a business plan for a social enterprise' },\n      { id: 'ch-3', text: 'Design and test an innovation that could be implemented' }\n    );\n  } else if (essentialQuestion) {\n    // Base on essential question if available\n    suggestions.push(\n      { id: 'ch-1', text: `Create a solution that directly addresses: \"${essentialQuestion.substring(0, 60)}\"` },\n      { id: 'ch-2', text: 'Design an interactive experience that teaches others about this issue' },\n      { id: 'ch-3', text: 'Build a prototype and test it with real users' }\n    );\n  } else {\n    // Generic challenges\n    suggestions.push(\n      { id: 'ch-1', text: 'Develop an innovative solution to a real-world problem' },\n      { id: 'ch-2', text: 'Create a resource that helps others understand this topic' },\n      { id: 'ch-3', text: 'Design a system that creates positive change' }\n    );\n  }\n\n  return suggestions.slice(0, 3);\n}\n\nfunction getJourneySuggestions(stage: string, context: StageContext): StageSuggestion[] {\n  const suggestions: StageSuggestion[] = [];\n  const { challenge, essentialQuestion } = context;\n  \n  if (stage.includes('ANALYZE')) {\n    suggestions.push(\n      { id: 'j-1', text: 'Research using primary and secondary sources' },\n      { id: 'j-2', text: 'Conduct interviews with stakeholders and experts' },\n      { id: 'j-3', text: 'Create data visualizations to understand the problem' }\n    );\n  } else if (stage.includes('BRAINSTORM')) {\n    suggestions.push(\n      { id: 'j-1', text: 'Use design thinking to generate creative solutions' },\n      { id: 'j-2', text: 'Hold collaborative ideation sessions with diverse perspectives' },\n      { id: 'j-3', text: 'Apply SCAMPER technique to existing solutions' }\n    );\n  } else if (stage.includes('PROTOTYPE')) {\n    suggestions.push(\n      { id: 'j-1', text: 'Build iterative prototypes with feedback loops' },\n      { id: 'j-2', text: 'Create low-fidelity mockups for quick testing' },\n      { id: 'j-3', text: 'Develop a minimum viable product (MVP)' }\n    );\n  } else if (stage.includes('EVALUATE')) {\n    suggestions.push(\n      { id: 'j-1', text: 'Peer review sessions with structured feedback' },\n      { id: 'j-2', text: 'Test solutions with target audience' },\n      { id: 'j-3', text: 'Measure impact against success criteria' }\n    );\n  } else {\n    // General journey suggestions based on context\n    if (challenge) {\n      suggestions.push(\n        { id: 'j-1', text: 'Research → Ideate → Prototype → Test → Refine' },\n        { id: 'j-2', text: 'Weekly milestones with peer feedback sessions' },\n        { id: 'j-3', text: 'Expert mentorship at key decision points' }\n      );\n    } else {\n      suggestions.push(\n        { id: 'j-1', text: 'Structure: Research → Ideate → Build → Test' },\n        { id: 'j-2', text: 'Include reflection checkpoints after each phase' },\n        { id: 'j-3', text: 'Build in opportunities for student choice' }\n      );\n    }\n  }\n\n  return suggestions.slice(0, 3);\n}\n\nfunction getDeliverablesSuggestions(context: StageContext): StageSuggestion[] {\n  const { challenge, gradeLevel } = context;\n  const suggestions: StageSuggestion[] = [];\n\n  if (gradeLevel?.toLowerCase().includes('elementary')) {\n    suggestions.push(\n      { id: 'd-1', text: 'Visual presentation + hands-on demonstration' },\n      { id: 'd-2', text: 'Student portfolio with reflections and artifacts' },\n      { id: 'd-3', text: 'Group exhibition with interactive displays' }\n    );\n  } else if (gradeLevel?.toLowerCase().includes('middle')) {\n    suggestions.push(\n      { id: 'd-1', text: 'Digital presentation + working prototype' },\n      { id: 'd-2', text: 'Video documentary of the process and solution' },\n      { id: 'd-3', text: 'Poster session with peer Q&A' }\n    );\n  } else if (gradeLevel?.toLowerCase().includes('high')) {\n    suggestions.push(\n      { id: 'd-1', text: 'Professional presentation + functional product' },\n      { id: 'd-2', text: 'Research paper + implementation plan' },\n      { id: 'd-3', text: 'Public exhibition with community stakeholders' }\n    );\n  } else {\n    // Generic deliverables\n    suggestions.push(\n      { id: 'd-1', text: 'Presentation + Prototype + Reflection portfolio' },\n      { id: 'd-2', text: 'Digital showcase with process documentation' },\n      { id: 'd-3', text: 'Multi-media exhibition with peer reviews' }\n    );\n  }\n\n  return suggestions.slice(0, 3);\n}\n\nfunction getDefaultSuggestions(context: StageContext): StageSuggestion[] {\n  return [\n    { id: 'default-1', text: 'Explore different approaches to this topic' },\n    { id: 'default-2', text: 'Consider multiple perspectives on this challenge' },\n    { id: 'default-3', text: 'Think about real-world applications' }\n  ];\n}\n\n/**\n * Get contextual help content for the current stage\n */\nexport function getStageHelp(stage: string): { title: string; content: string; tips: string[] } {\n  switch (stage) {\n    case 'BIG_IDEA':\n    case 'IDEATION_BIG_IDEA':\n      return {\n        title: \"What's a Big Idea?\",\n        content: \"A Big Idea is a concept that goes beyond facts to deeper understanding. It connects to real-world relevance and transfers across contexts.\",\n        tips: [\n          \"Think about enduring understandings\",\n          \"Focus on concepts, not just topics\",\n          \"Make it relevant to students' lives\"\n        ]\n      };\n    \n    case 'ESSENTIAL_QUESTION':\n    case 'IDEATION_EQ':\n      return {\n        title: \"Crafting Essential Questions\",\n        content: \"Essential Questions are open-ended, thought-provoking, and require investigation. They cannot be answered with a simple yes or no.\",\n        tips: [\n          \"Start with 'How' or 'Why'\",\n          \"Make it personally meaningful\",\n          \"Ensure it connects to the Big Idea\"\n        ]\n      };\n    \n    case 'CHALLENGE':\n    case 'IDEATION_CHALLENGE':\n      return {\n        title: \"Creating Authentic Challenges\",\n        content: \"A good challenge is real-world, engaging, and allows for multiple solutions. It should motivate students to take action.\",\n        tips: [\n          \"Connect to local community needs\",\n          \"Allow for student voice and choice\",\n          \"Ensure it's achievable but stretching\"\n        ]\n      };\n    \n    case 'JOURNEY':\n      return {\n        title: \"Planning the Learning Journey\",\n        content: \"The journey guides students through investigating, creating, and refining their solutions through structured phases.\",\n        tips: [\n          \"Balance structure with flexibility\",\n          \"Include collaboration opportunities\",\n          \"Build in reflection points\"\n        ]\n      };\n    \n    case 'DELIVERABLES':\n      return {\n        title: \"Defining Success\",\n        content: \"Deliverables show what students will create and how their learning will be assessed. They should be authentic and meaningful.\",\n        tips: [\n          \"Include multiple ways to demonstrate learning\",\n          \"Connect to real-world outcomes\",\n          \"Build in self and peer assessment\"\n        ]\n      };\n    \n    default:\n      return {\n        title: \"Project-Based Learning\",\n        content: \"PBL engages students in solving real-world problems through extended inquiry.\",\n        tips: [\n          \"Start with student interests\",\n          \"Focus on authentic outcomes\",\n          \"Embrace the messy middle\"\n        ]\n      };\n  }\n}\n","/**\n * suggestionContent.ts\n * Stage-specific suggestions for Ideas button\n */\n\nimport { getStageSpecificSuggestions } from './stageSpecificContent';\n\nexport interface Suggestion {\n  id: string;\n  text: string;\n  category?: string; // Optional, for stage name only\n}\n\nexport const STAGE_SUGGESTIONS: Record<string, Suggestion[]> = {\n  // Onboarding suggestions\n  ONBOARDING: [\n    { id: 'onboard-1', text: 'Start with subjects you\\'re most passionate about', category: 'idea' },\n    { id: 'onboard-2', text: 'Consider your students\\' interests and real-world connections', category: 'idea' },\n    { id: 'onboard-3', text: 'What if this project connected to current local issues?', category: 'whatif' },\n    { id: 'onboard-4', text: 'Plan for both individual and collaborative work', category: 'resource' }\n  ],\n\n  // Grounding suggestions  \n  GROUNDING: [\n    { id: 'ground-1', text: 'Connect \"Sustainable school garden, Water conservation\" to real-world environmental challenges' },\n    { id: 'ground-2', text: 'Focus on how water conservation impacts local ecosystems and communities' },\n    { id: 'ground-3', text: 'Consider having students design solutions that could be implemented at school' }\n  ],\n\n  // Welcome/Setup suggestions\n  WELCOME: [\n    { id: '1', text: 'Start with a topic that connects to current events' },\n    { id: '2', text: 'Build on student interests and passions' },\n    { id: '3', text: 'Consider interdisciplinary connections' }\n  ],\n\n  // Ideation intro suggestions\n  IDEATION_INTRO: [\n    { id: 'intro-1', text: 'Build on your curriculum standards and student interests' },\n    { id: 'intro-2', text: 'Connect learning to real-world issues that matter' },\n    { id: 'intro-3', text: 'Look for authentic challenges in your community' }\n  ],\n\n  // Big Idea stage suggestions  \n  BIG_IDEA: [\n    { id: 'big-1', text: 'Explore how sustainability connects to your {subject} curriculum' },\n    { id: 'big-2', text: 'Focus on systems thinking - how parts work together to create the whole' },\n    { id: 'big-3', text: 'Consider \"The intersection of {subject} and real-world impact\"' }\n  ],\n\n  // Essential Question stage suggestions\n  ESSENTIAL_QUESTION: [\n    { id: 'eq-1', text: 'How might we use learning to solve real problems in our community?' },\n    { id: 'eq-2', text: 'Why does this topic matter for our future?' },\n    { id: 'eq-3', text: 'What would happen if we reimagined education through student perspectives?' }\n  ],\n\n  // Challenge stage suggestions\n  CHALLENGE: [\n    { id: 'challenge-1', text: 'Create a solution that addresses the essential question' },\n    { id: 'challenge-2', text: 'Design and test a prototype that demonstrates your understanding' },\n    { id: 'challenge-3', text: 'Develop a presentation for real stakeholders' }\n  ],\n  \n  // Ideation stage suggestions\n  IDEATION: [\n    // Big Ideas\n    { id: 'idea-1', text: 'Climate change and its local environmental impacts', category: 'idea' },\n    { id: 'idea-2', text: 'How technology shapes modern communication', category: 'idea' },\n    { id: 'idea-3', text: 'The stories and history that built our community', category: 'idea' },\n    { id: 'idea-4', text: 'Mathematical patterns in nature and art', category: 'idea' },\n    { id: 'idea-5', text: 'Systems thinking for understanding complexity', category: 'idea' },\n    \n    // Essential Questions\n    { id: 'eq-1', text: 'How might we reduce our school\\'s carbon footprint by 50%?', category: 'idea' },\n    { id: 'eq-2', text: 'Why do some communities thrive while others decline?', category: 'idea' },\n    { id: 'eq-3', text: 'What makes a story worth preserving for future generations?', category: 'idea' },\n    { id: 'eq-4', text: 'How can data help us make better decisions?', category: 'idea' },\n    \n    // What-if scenarios\n    { id: 'whatif-1', text: 'What if students presented their solutions to city council?', category: 'whatif' },\n    { id: 'whatif-2', text: 'What if we partnered with local businesses or organizations?', category: 'whatif' },\n    { id: 'whatif-3', text: 'What if students created something that outlasts the school year?', category: 'whatif' },\n    \n    // Resources\n    { id: 'resource-1', text: 'Connect with local experts as mentors', category: 'resource' },\n    { id: 'resource-2', text: 'Use design thinking frameworks', category: 'resource' },\n    { id: 'resource-3', text: 'Explore grant opportunities for project funding', category: 'resource' }\n  ],\n  \n  // Learning Journey suggestions\n  JOURNEY: [\n    { id: 'journey-1', text: 'Students conduct stakeholder interviews to understand perspectives' },\n    { id: 'journey-2', text: 'Research existing solutions and identify what works' },\n    { id: 'journey-3', text: 'Create prototypes and test with real users' }\n  ],\n  \n  // Deliverables suggestions\n  DELIVERABLES: [\n    { id: 'deliver-1', text: 'Create a presentation, prototype, and reflection portfolio' },\n    { id: 'deliver-2', text: 'Include peer assessment and self-reflection components' },\n    { id: 'deliver-3', text: 'Plan a final exhibition or showcase for the community' }\n  ]\n};\n\n/**\n * Get contextual suggestions based on stage and optional step\n */\nexport function getStageSuggestions(stage: string, step?: string, context?: any): Suggestion[] {\n  // If context is provided, use the new context-aware generator\n  if (context) {\n    return getStageSpecificSuggestions(stage, context);\n  }\n  \n  // Otherwise fall back to static suggestions\n  const baseSuggestions = STAGE_SUGGESTIONS[stage] || [];\n  \n  if (!step) {\n    // Always return exactly 3 suggestions\n    return baseSuggestions.slice(0, 3);\n  }\n  \n  // Filter suggestions based on step\n  const stepLower = step.toLowerCase();\n  const filtered = baseSuggestions.filter(s => {\n    const textLower = s.text.toLowerCase();\n    \n    // Match based on step keywords\n    if (stepLower.includes('idea') && textLower.includes('idea')) return true;\n    if (stepLower.includes('question') && (textLower.includes('how') || textLower.includes('why') || textLower.includes('what'))) return true;\n    if (stepLower.includes('challenge') && (textLower.includes('solution') || textLower.includes('problem'))) return true;\n    if (stepLower.includes('analyze') && s.id.includes('analyze')) return true;\n    if (stepLower.includes('brainstorm') && s.id.includes('brainstorm')) return true;\n    if (stepLower.includes('prototype') && s.id.includes('prototype')) return true;\n    if (stepLower.includes('evaluate') && s.id.includes('evaluate')) return true;\n    \n    return false;\n  });\n  \n  // If we have filtered results, return them; otherwise return general suggestions\n  return filtered.length > 0 ? filtered.slice(0, 3) : baseSuggestions.slice(0, 3);\n}\n\n/**\n * Get randomized suggestions for variety\n */\nexport function getRandomSuggestions(stage: string, count: number = 3): Suggestion[] {\n  const suggestions = STAGE_SUGGESTIONS[stage] || [];\n  const shuffled = [...suggestions].sort(() => Math.random() - 0.5);\n  return shuffled.slice(0, count);\n}\n\n/**\n * Get suggestions by category\n */\nexport function getSuggestionsByCategory(stage: string, category: 'idea' | 'whatif' | 'resource'): Suggestion[] {\n  const suggestions = STAGE_SUGGESTIONS[stage] || [];\n  return suggestions.filter(s => s.category === category);\n}","/**\n * Holistic Confirmation Framework for ALF Coach\n * Applies consistent confirmation and refinement patterns across ALL stages\n */\n\nexport interface ConfirmationResponse {\n  shouldProgress: boolean;\n  confirmationType: 'immediate' | 'review' | 'refine';\n  message: string;\n  enhancementSuggestion?: string;\n  confidenceLevel: 'high' | 'medium' | 'low';\n}\n\nexport interface StageValidation {\n  stage: string;\n  input: string;\n  attemptCount: number;\n  isFromSuggestion: boolean;\n}\n\n/**\n * Determine confirmation approach based on input quality and context\n */\nexport function getConfirmationStrategy(validation: StageValidation): ConfirmationResponse {\n  const { stage, input, attemptCount, isFromSuggestion } = validation;\n  \n  // Force progression after 3 attempts regardless of quality\n  if (attemptCount >= 3) {\n    return {\n      shouldProgress: true,\n      confirmationType: 'immediate',\n      message: getAcceptanceMessage(stage, input),\n      confidenceLevel: 'medium'\n    };\n  }\n  \n  // Auto-accept suggestion cards with positive confirmation\n  if (isFromSuggestion) {\n    return {\n      shouldProgress: false, // Still ask for confirmation but positively\n      confirmationType: 'review',\n      message: getSuggestionConfirmation(stage, input),\n      confidenceLevel: 'high'\n    };\n  }\n  \n  // Assess quality based on stage\n  const quality = assessInputQuality(stage, input);\n  \n  if (quality.level === 'high') {\n    return {\n      shouldProgress: false, // Ask for confirmation even for high quality\n      confirmationType: 'review',\n      message: getHighQualityConfirmation(stage, input),\n      confidenceLevel: 'high'\n    };\n  }\n  \n  if (quality.level === 'medium') {\n    return {\n      shouldProgress: false,\n      confirmationType: 'review',\n      message: getMediumQualityConfirmation(stage, input),\n      enhancementSuggestion: quality.enhancement,\n      confidenceLevel: 'medium'\n    };\n  }\n  \n  // Low quality - offer refinement help\n  return {\n    shouldProgress: false,\n    confirmationType: 'refine',\n    message: getRefinementHelp(stage, input),\n    enhancementSuggestion: quality.enhancement,\n    confidenceLevel: 'low'\n  };\n}\n\n/**\n * Assess input quality for each stage\n */\nfunction assessInputQuality(stage: string, input: string): { level: 'high' | 'medium' | 'low'; enhancement?: string } {\n  const trimmed = input.trim();\n  const wordCount = trimmed.split(' ').filter(w => w).length;\n  \n  switch (stage) {\n    case 'BIG_IDEA':\n      if (wordCount < 3) {\n        return { \n          level: 'low', \n          enhancement: 'Could you expand on this concept a bit more? What deeper understanding do you want students to develop?' \n        };\n      }\n      if (input.includes('?')) {\n        return { \n          level: 'medium', \n          enhancement: 'This sounds like a question - let\\'s frame it as a conceptual understanding instead.' \n        };\n      }\n      return { level: 'high' };\n    \n    case 'ESSENTIAL_QUESTION':\n      const hasQuestionMark = input.includes('?');\n      const hasQuestionWord = /\\b(how|why|what|when|where|which)\\b/i.test(input);\n      const isOpenEnded = !input.match(/^(is|are|do|does|can|will|should)/i);\n      \n      if (!hasQuestionMark && !hasQuestionWord) {\n        return { \n          level: 'low', \n          enhancement: 'Let\\'s phrase this as a question that will drive student inquiry.' \n        };\n      }\n      if (!isOpenEnded) {\n        return { \n          level: 'medium', \n          enhancement: 'To make this more open-ended, we might start with \"How\" or \"Why\" instead.' \n        };\n      }\n      return { level: 'high' };\n    \n    case 'CHALLENGE':\n      const hasActionWord = /\\b(create|design|solve|build|develop|improve|make|plan|propose)\\b/i.test(input);\n      \n      if (wordCount < 5) {\n        return { \n          level: 'low', \n          enhancement: 'Let\\'s add more detail about what students will actually do or create.' \n        };\n      }\n      if (!hasActionWord) {\n        return { \n          level: 'medium', \n          enhancement: 'Consider adding an action verb to make this more task-oriented.' \n        };\n      }\n      return { level: 'high' };\n    \n    default:\n      return wordCount > 3 ? { level: 'high' } : { level: 'medium' };\n  }\n}\n\n/**\n * Stage-specific confirmation messages\n */\nfunction getAcceptanceMessage(stage: string, input: string): string {\n  const messages = {\n    'BIG_IDEA': `Perfect! \"${input}\" provides a strong conceptual foundation for your project.`,\n    'ESSENTIAL_QUESTION': `Excellent! \"${input}\" will drive meaningful inquiry throughout the project.`,\n    'CHALLENGE': `Great! \"${input}\" gives students an authentic purpose for their learning.`,\n    'JOURNEY': `Your learning journey is well-structured and will guide students effectively.`,\n    'DELIVERABLES': `These deliverables will showcase student learning beautifully.`\n  };\n  return messages[stage] || `Great! Let's move forward with this.`;\n}\n\nfunction getSuggestionConfirmation(stage: string, input: string): string {\n  return `I love that choice! \"${input}\" is a strong foundation. Shall we build on this, or would you like to refine it further?`;\n}\n\nfunction getHighQualityConfirmation(stage: string, input: string): string {\n  const confirmations = {\n    'BIG_IDEA': `I love the conceptual depth in \"${input}\" - this gives students something transferable they can apply way beyond this project. This kind of Big Idea helps them see patterns across disciplines.`,\n    'ESSENTIAL_QUESTION': `\"${input}\" has that perfect quality of a question students won't be able to stop thinking about. I can imagine them debating this at lunch and bringing new perspectives from home.`,\n    'CHALLENGE': `\"${input}\" beautifully connects learning to real impact. When students know their work matters to actual people in their community, everything changes about their engagement level.`\n  };\n  return confirmations[stage] || `This demonstrates excellent understanding of what makes powerful PBL design!`;\n}\n\nfunction getMediumQualityConfirmation(stage: string, input: string): string {\n  const confirmations = {\n    'BIG_IDEA': `I can see the concept developing in \"${input}\" - you're moving from topic toward transferable understanding, which is exactly the right direction. We can build on this foundation or sharpen it further.`,\n    'ESSENTIAL_QUESTION': `\"${input}\" shows good thinking about driving inquiry. To maximize student engagement, we could explore making it even more open-ended and debate-worthy - but this works as our starting point.`,\n    'CHALLENGE': `\"${input}\" has authentic purpose building in it. The key is making sure students see exactly how their work will impact real people - we can strengthen that connection or move forward.`\n  };\n  return confirmations[stage] || `This shows solid PBL thinking! We can develop it further or build from here - what feels right to you?`;\n}\n\nfunction getRefinementHelp(stage: string, input: string): string {\n  const helpers = {\n    'BIG_IDEA': `I see where you're going with \"${input}\". Let's develop this into a fuller conceptual understanding. What patterns or principles do you want students to discover?`,\n    'ESSENTIAL_QUESTION': `Let's shape \"${input}\" into a driving question. What aspect of your Big Idea should students investigate?`,\n    'CHALLENGE': `\"${input}\" is a start! Let's make it more action-oriented. What will students create or solve?`\n  };\n  return helpers[stage] || `Let's develop this further. What else would you like to add?`;\n}\n\n/**\n * Generate confirmation prompt for AI based on strategy - EXPERT GUIDANCE APPROACH\n */\nexport function generateConfirmationPrompt(strategy: ConfirmationResponse, stage: string): string {\n  // Start with expert context to expand teacher understanding\n  let prompt = getExpertInsight(stage) + \"\\n\\n\" + strategy.message;\n\n  if (strategy.enhancementSuggestion) {\n    prompt += `\\n\\n💡 **Coaching Insight:** ${strategy.enhancementSuggestion}`;\n  }\n\n  // Add forward momentum while maintaining educational value\n  switch (strategy.confirmationType) {\n    case 'immediate':\n      prompt += '\\n\\n' + getStageTransition(stage) + '\\n\\n✅ Let\\'s build on this foundation...';\n      break;\n    case 'review':\n      prompt += '\\n\\n' + getStageTransition(stage);\n      prompt += '\\n\\n**Ready to move forward?** Type \"yes\" to continue, or share any thoughts to refine this together.';\n      break;\n    case 'refine':\n      prompt += '\\n\\n**Let\\'s strengthen this together.** What direction feels right to you?';\n      break;\n  }\n\n  return prompt;\n}\n\n/**\n * Provide expert insights that expand teacher thinking\n */\nfunction getExpertInsight(stage: string): string {\n  switch (stage) {\n    case 'BIG_IDEA':\n      return \"🎯 **PBL Expert Insight:** The strongest Big Ideas help students see transferable patterns. For example, 'Systems have interconnected parts' works across science, social studies, and beyond - while 'Photosynthesis' stays locked in one lesson.\";\n\n    case 'ESSENTIAL_QUESTION':\n      return \"🎯 **PBL Expert Insight:** Great Essential Questions create 'cognitive hooks' that students can't stop thinking about. They should spark debate at the dinner table and connect daily lessons to bigger purposes.\";\n\n    case 'CHALLENGE':\n      return \"🎯 **PBL Expert Insight:** Authentic challenges transform students from 'doing school' to 'doing important work.' When students know their audience is real and their impact matters, engagement soars.\";\n\n    case 'JOURNEY':\n      return \"🎯 **PBL Expert Insight:** The learning journey mirrors real creative work - from understanding problems to testing solutions. This process builds both content knowledge and life skills.\";\n\n    default:\n      return \"🎯 **PBL Expert Insight:** Each element works together to create learning experiences that feel meaningful to students.\";\n  }\n}\n\n/**\n * Provide transition context that maintains momentum while educating\n */\nfunction getStageTransition(stage: string): string {\n  switch (stage) {\n    case 'BIG_IDEA':\n      return \"**Next:** We'll craft an Essential Question that will drive student curiosity and connect to this Big Idea throughout your project timeline.\";\n\n    case 'ESSENTIAL_QUESTION':\n      return \"**Next:** Let's design an authentic Challenge that gives students real purpose and connects their inquiry to community impact.\";\n\n    case 'CHALLENGE':\n      return \"**Next:** We'll map the learning journey - how students will move through research, ideation, creation, and reflection to tackle this challenge.\";\n\n    case 'JOURNEY':\n      return \"**Next:** Let's define the deliverables and assessment strategy that will capture student learning and growth.\";\n\n    default:\n      return \"**Next:** Let's continue building your project framework.\";\n  }\n}\n\n/**\n * Check if user response indicates they want to proceed\n */\nexport function checkForProgressSignal(input: string): boolean {\n  const progressWords = [\n    'yes', 'yep', 'yeah', 'sure', 'ok', 'okay', 'good', 'great', \n    'perfect', 'continue', 'next', 'proceed', 'move on', 'let\\'s go',\n    'sounds good', 'that works', 'ready', 'done', 'confirmed'\n  ];\n  \n  const lowercased = input.toLowerCase().trim();\n  return progressWords.some(word => lowercased.includes(word));\n}\n\n/**\n * Check if user wants to refine\n */\nexport function checkForRefinementSignal(input: string): boolean {\n  const refineWords = [\n    'wait', 'actually', 'hmm', 'let me', 'change', 'different', \n    'revise', 'edit', 'modify', 'adjust', 'refine', 'improve',\n    'not quite', 'almost', 'close but'\n  ];\n  \n  const lowercased = input.toLowerCase().trim();\n  return refineWords.some(word => lowercased.includes(word));\n}","import React from 'react';\nimport { Check, ArrowRight } from 'lucide-react';\n\ninterface CompactRecapBarProps {\n  savedLabel?: string;\n  savedValue?: string;\n  nextLabel?: string;\n  onNext?: () => void;\n}\n\n// Compact, pill-shaped inline recap bar\nexport const CompactRecapBar: React.FC<CompactRecapBarProps> = ({\n  savedLabel,\n  savedValue,\n  nextLabel,\n  onNext,\n}) => {\n  const truncated = (s?: string, n: number = 80) => (s && s.length > n ? s.slice(0, n - 1) + '…' : s || '');\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"flex items-center gap-2 bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-gray-200 dark:border-gray-700 rounded-full px-3 py-2 shadow-sm\">\n        {savedLabel && (\n          <div className=\"flex items-center gap-2 text-sm text-gray-700 dark:text-gray-200\">\n            <span className=\"inline-flex items-center justify-center w-5 h-5 rounded-full bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-300\">\n              <Check className=\"w-3 h-3\" />\n            </span>\n            <span className=\"font-medium\">Saved:</span>\n            <span className=\"text-gray-900 dark:text-gray-100\">{savedLabel}</span>\n            {savedValue && (\n              <span className=\"text-gray-500 dark:text-gray-400\">• {truncated(savedValue, 60)}</span>\n            )}\n          </div>\n        )}\n\n        {nextLabel && (\n          <button\n            onClick={onNext}\n            className=\"ml-auto text-sm inline-flex items-center gap-1 px-2 py-1 rounded-full bg-primary-600 text-white hover:bg-primary-700 active:scale-95 transition\"\n          >\n            Next: {nextLabel}\n            <ArrowRight className=\"w-4 h-4\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\n","import { evaluateWizardCompleteness, type WizardCompletenessResult } from './completeness/wizardCompleteness';\nimport type { WizardDataV3 } from '../features/wizard/wizardSchema';\n\nexport interface SnapshotMetrics {\n  learningGoals: number;\n  successCriteria: number;\n  phases: number;\n  milestones: number;\n  artifacts: number;\n  rubrics: number;\n  roles: number;\n  scaffolds: number;\n  checkpoints: number;\n  risks: number;\n}\n\nexport interface WizardSnapshot {\n  version: string;\n  generatedAt: string;\n  completeness: WizardCompletenessResult['summary'];\n  metrics: SnapshotMetrics;\n  wizardData: Partial<WizardDataV3>;\n}\n\nfunction calculateMetrics(data: Partial<WizardDataV3>): SnapshotMetrics {\n  return {\n    learningGoals: data.learningGoals?.length ?? 0,\n    successCriteria: data.successCriteria?.length ?? 0,\n    phases: data.phases?.length ?? 0,\n    milestones: data.milestones?.length ?? 0,\n    artifacts: data.artifacts?.length ?? 0,\n    rubrics: data.rubrics?.length ?? 0,\n    roles: data.studentRoles?.length ?? 0,\n    scaffolds: data.scaffolds?.length ?? 0,\n    checkpoints: data.evidencePlan?.checkpoints?.length ?? 0,\n    risks: data.riskManagement?.risks?.length ?? 0\n  };\n}\n\nexport function buildWizardSnapshot(\n  wizardData: Partial<WizardDataV3>,\n  overrides?: {\n    completeness?: WizardCompletenessResult['summary'];\n    metrics?: SnapshotMetrics;\n  }\n): WizardSnapshot {\n  const completeness = overrides?.completeness ?? evaluateWizardCompleteness(wizardData).summary;\n  const metrics = overrides?.metrics ?? calculateMetrics(wizardData);\n\n  return {\n    version: '1.0',\n    generatedAt: new Date().toISOString(),\n    completeness,\n    metrics,\n    wizardData\n  };\n}\n\nexport function downloadWizardSnapshot(snapshot: WizardSnapshot, filename = 'alf-wizard-snapshot.json') {\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    throw new Error('Downloads are only available in a browser context.');\n  }\n\n  const payload = JSON.stringify(snapshot, null, 2);\n  const blob = new Blob([payload], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n}\n\nexport function buildSnapshotSharePreview(snapshot: WizardSnapshot): string {\n  const { completeness, metrics, wizardData } = snapshot;\n  const lines: string[] = [\n    'ALF Wizard Snapshot',\n    `Generated: ${snapshot.generatedAt}`,\n    '',\n    `Overall readiness: ${completeness.overall}% (core ${completeness.core}%, context ${completeness.context}%, progressive ${completeness.progressive}%)`,\n    '',\n    'Highlights:',\n    `• Project topic: ${wizardData.projectTopic || '—'}`,\n    `• Big idea: ${wizardData.bigIdea || '—'}`,\n    `• Essential question: ${wizardData.essentialQuestion || '—'}`,\n    '',\n    'Counts:',\n    `• Learning goals: ${metrics.learningGoals}`,\n    `• Success criteria: ${metrics.successCriteria}`,\n    `• Phases / milestones: ${metrics.phases} / ${metrics.milestones}`,\n    `• Artifacts / rubrics: ${metrics.artifacts} / ${metrics.rubrics}`,\n    `• Roles / scaffolds: ${metrics.roles} / ${metrics.scaffolds}`,\n    `• Evidence checkpoints: ${metrics.checkpoints}`,\n    `• Risk scenarios: ${metrics.risks}`\n  ];\n\n  return lines.join('\\n');\n}\n\nexport async function copySnapshotPreview(snapshot: WizardSnapshot): Promise<void> {\n  if (typeof navigator === 'undefined' || !navigator.clipboard?.writeText) {\n    throw new Error('Clipboard API is not available.');\n  }\n\n  const preview = buildSnapshotSharePreview(snapshot);\n  await navigator.clipboard.writeText(preview);\n}\n\nexport function getSnapshotMetrics(data: Partial<WizardDataV3>): SnapshotMetrics {\n  return calculateMetrics(data);\n}\n","import type { WizardDataV3 } from '../features/wizard/wizardSchema';\nimport type { ProjectV3 } from '../types/alf';\n\nexport type PartialWizardData = Partial<WizardDataV3> | null | undefined;\nexport type PartialProjectData = Partial<ProjectV3> | null | undefined;\n\nfunction isPlainObject(value: unknown): value is Record<string, unknown> {\n  return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\n\nfunction clone<T>(value: T): T {\n  if (value === null || typeof value !== 'object') {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map(item => clone(item)) as unknown as T;\n  }\n  const result: Record<string, unknown> = {};\n  Object.entries(value as Record<string, unknown>).forEach(([key, entry]) => {\n    result[key] = clone(entry);\n  });\n  return result as T;\n}\n\nfunction deepMergeRecords(\n  base: Record<string, unknown> | null | undefined,\n  incoming: Record<string, unknown>\n): Record<string, unknown> {\n  const target = base ? clone(base) : {};\n\n  Object.entries(incoming).forEach(([key, value]) => {\n    if (value === undefined) {\n      return;\n    }\n\n    if (Array.isArray(value)) {\n      target[key] = clone(value);\n      return;\n    }\n\n    if (isPlainObject(value)) {\n      const existing = isPlainObject(target[key]) ? (target[key] as Record<string, unknown>) : undefined;\n      target[key] = deepMergeRecords(existing, value);\n      return;\n    }\n\n    target[key] = value;\n  });\n\n  return target;\n}\n\nexport function mergeWizardData(\n  base: PartialWizardData,\n  incoming: PartialWizardData\n): Partial<WizardDataV3> | null {\n  if (!base && !incoming) {\n    return null;\n  }\n  if (!base) {\n    return incoming ? clone(incoming) : null;\n  }\n  if (!incoming) {\n    return clone(base);\n  }\n\n  return deepMergeRecords(base as Record<string, unknown>, incoming as Record<string, unknown>) as Partial<WizardDataV3>;\n}\n\nexport function mergeProjectData(\n  base: PartialProjectData,\n  incoming: PartialProjectData\n): Partial<ProjectV3> | null {\n  if (!base && !incoming) {\n    return null;\n  }\n  if (!base) {\n    return incoming ? clone(incoming) : null;\n  }\n  if (!incoming) {\n    return clone(base);\n  }\n\n  return deepMergeRecords(base as Record<string, unknown>, incoming as Record<string, unknown>) as Partial<ProjectV3>;\n}\n\nexport function mergeCapturedData(\n  base: Record<string, unknown> | null | undefined,\n  incoming: Record<string, unknown> | null | undefined\n): Record<string, unknown> | null {\n  if (!base && !incoming) {\n    return null;\n  }\n  if (!base) {\n    return incoming ? clone(incoming) : null;\n  }\n  if (!incoming) {\n    return clone(base);\n  }\n\n  return deepMergeRecords(base, incoming);\n}\n","/**\n * StageSpecificSuggestions - Context-aware suggestion cards for each PBL stage\n * Shows relevant examples and ideas based on current stage and user context\n */\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Sparkles, Target, HelpCircle, Map, Package, Lightbulb, Zap, BookOpen } from 'lucide-react';\nimport { getStageSpecificSuggestions } from '../../utils/stageSpecificContent';\n\ninterface Suggestion {\n  id: string;\n  text: string;\n  description?: string;\n}\n\ninterface StageSpecificSuggestionsProps {\n  stage: string;\n  context: {\n    subject?: string;\n    gradeLevel?: string;\n    bigIdea?: string;\n    essentialQuestion?: string;\n    challenge?: string;\n    projectTopic?: string;\n  };\n  onSelectSuggestion: (suggestion: string) => void;\n  isVisible: boolean;\n  showDismiss?: boolean;\n  onDismiss?: () => void;\n}\n\nexport const StageSpecificSuggestions: React.FC<StageSpecificSuggestionsProps> = ({\n  stage,\n  context,\n  onSelectSuggestion,\n  isVisible,\n  showDismiss = false,\n  onDismiss\n}) => {\n  // Generate suggestions using the sophisticated content generator\n  const getSuggestions = (): Suggestion[] => {\n    // Get suggestions from the utility function\n    const stageSuggestions = getStageSpecificSuggestions(stage, context);\n    \n    // Transform to the component's format, grouping by category\n    const transformed: Suggestion[] = [];\n    \n    // Add idea suggestions\n    const ideas = stageSuggestions.filter(s => s.category === 'idea');\n    ideas.forEach((suggestion, index) => {\n      transformed.push({\n        id: suggestion.id,\n        text: suggestion.text,\n        description: 'Click to use this idea'\n      });\n    });\n    \n    // Add what-if suggestions\n    const whatIfs = stageSuggestions.filter(s => s.category === 'whatif');\n    whatIfs.forEach((suggestion) => {\n      transformed.push({\n        id: suggestion.id,\n        text: suggestion.text,\n        description: 'Explore possibilities'\n      });\n    });\n    \n    // Add resource suggestions\n    const resources = stageSuggestions.filter(s => s.category === 'resource');\n    resources.forEach((suggestion) => {\n      transformed.push({\n        id: suggestion.id,\n        text: suggestion.text,\n        description: 'Get more help'\n      });\n    });\n    \n    // Return max 6 suggestions for clean layout\n    return transformed.slice(0, 6);\n  };\n\n  const getStageIcon = () => {\n    switch (stage) {\n      case 'BIG_IDEA': return <Sparkles className=\"w-5 h-5\" />;\n      case 'ESSENTIAL_QUESTION': return <HelpCircle className=\"w-5 h-5\" />;\n      case 'CHALLENGE': return <Target className=\"w-5 h-5\" />;\n      case 'JOURNEY': return <Map className=\"w-5 h-5\" />;\n      case 'DELIVERABLES': return <Package className=\"w-5 h-5\" />;\n      default: return <Sparkles className=\"w-5 h-5\" />;\n    }\n  };\n\n  const suggestions = getSuggestions();\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: -10 }}\n          className=\"mt-4 space-y-3\"\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              {getStageIcon()}\n              <span className=\"font-medium\">\n                {stage === 'BIG_IDEA' ? 'Example Big Ideas' :\n                 stage === 'ESSENTIAL_QUESTION' ? 'Example Questions' :\n                 stage === 'CHALLENGE' ? 'Challenge Ideas' :\n                 stage === 'JOURNEY' ? 'Journey Structures' :\n                 'Suggestions'}\n              </span>\n            </div>\n            {showDismiss && onDismiss && (\n              <button\n                onClick={onDismiss}\n                className=\"text-gray-400 hover:text-gray-600 text-sm\"\n              >\n                Hide\n              </button>\n            )}\n          </div>\n\n          <div className=\"grid gap-3 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n            {suggestions.map((suggestion, index) => (\n              <motion.button\n                key={suggestion.id}\n                initial={{ opacity: 0, scale: 0.95 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: index * 0.1 }}\n                onClick={() => {\n                  console.log('[StageSpecificSuggestions] Card clicked:', suggestion.text);\n                  onSelectSuggestion(suggestion.text);\n                }}\n                className=\"\n                  text-left p-4 rounded-lg bg-white dark:bg-gray-800 \n                  border border-gray-200 dark:border-gray-700\n                  hover:border-primary-400 dark:hover:border-primary-500 hover:shadow-md\n                  transition-all duration-200 group cursor-pointer\n                \"\n              >\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100 group-hover:text-primary-600 dark:group-hover:text-primary-400 mb-1\">\n                      {suggestion.text}\n                    </p>\n                    {suggestion.description && (\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {suggestion.description}\n                      </p>\n                    )}\n                  </div>\n                  {/* Category icon */}\n                  {suggestion.id.includes('whatif') && (\n                    <Zap className=\"w-4 h-4 text-amber-500 ml-2 mt-0.5\" />\n                  )}\n                  {suggestion.id.includes('resource') && (\n                    <BookOpen className=\"w-4 h-4 text-green-500 ml-2 mt-0.5\" />\n                  )}\n                  {suggestion.id.includes('bi-') || suggestion.id.includes('eq-') || suggestion.id.includes('ch-') && (\n                    <Lightbulb className=\"w-4 h-4 text-primary-500 ml-2 mt-0.5\" />\n                  )}\n                </div>\n                <span className=\"text-xs text-primary-500 dark:text-primary-400 opacity-0 group-hover:opacity-100 transition-opacity mt-2 inline-block\">\n                  Click to use →\n                </span>\n              </motion.button>\n            ))}\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default StageSpecificSuggestions;","/**\n * ChatbotFirstInterfaceFixed.tsx\n * \n * ACTUALLY WORKING chat interface with real AI integration\n */\n\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Send, FileText, Lightbulb, Map, Target, Download, HelpCircle, Sparkles, Layers, Menu, X, Check, ChevronLeft, Clipboard } from 'lucide-react';\nimport { lazy, Suspense } from 'react';\nimport { ContextualInitiator } from './ContextualInitiator';\n// Use default export to avoid potential TDZ with named re-exports in optimized bundles\nconst ProgressSidebarLazy = lazy(() => import('./ProgressSidebar'));\nconst InlineHelpContentLazy = lazy(() => import('./UIGuidanceSystemV2').then(m => ({ default: m.InlineHelpContent })));\nconst StageInitiatorCardsLazy = lazy(() => import('./StageInitiatorCards').then(m => ({ default: m.StageInitiatorCards })));\nimport { ConversationalOnboarding } from './ConversationalOnboarding';\nimport { getStageHelp } from '../../utils/stageSpecificContent';\nconst MessageRendererLazy = lazy(() => import('./MessageRenderer').then(m => ({ default: m.MessageRenderer })));\nconst StandardsCoverageMapLazy = lazy(() => import('../standards/StandardsCoverageMap').then(m => ({ default: m.StandardsCoverageMap })));\nimport { EnhancedButton } from '../ui/EnhancedButton';\nimport { WizardV3Wrapper } from '../../features/wizard/WizardV3Wrapper';\nimport type { WizardDataV3 } from '../../features/wizard/wizardSchema';\nimport type { ProjectV3, Milestone, Scaffold, Checkpoint, Phase } from '../../types/alf';\nimport { normalizeProjectV3 } from '../../utils/normalizeProject';\nconst ContextualHelpLazy = lazy(() => import('./ContextualHelp').then(m => ({ default: m.ContextualHelp })));\nimport { useAuth } from '../../hooks/useAuth';\nimport { GeminiService } from '../../services/GeminiService';\nimport { firebaseSync } from '../../services/FirebaseSync';\nimport { useFeatureFlag } from '../../utils/featureFlags';\n// Removed unused StateManager import\nimport { logger } from '../../utils/logger';\nimport { WizardHandoffService } from '../../services/WizardHandoffService';\nimport { getContextualHelp } from '../../utils/helpContent';\nimport { getStageSuggestions } from '../../utils/suggestionContent';\nimport { CONVERSATION_STAGES, getStageMessage, shouldShowCards, getNextStage } from '../../utils/conversationFramework';\nimport { getConfirmationStrategy, generateConfirmationPrompt, checkForProgressSignal, checkForRefinementSignal } from '../../utils/confirmationFramework';\nimport { FlowOrchestrator } from '../../services/FlowOrchestrator';\nimport { ALFProcessRibbon } from '../layout/ALFProcessRibbon';\nimport { featureFlags } from '../../utils/featureFlags';\nimport { TourOverlay } from '../onboarding/TourOverlay';\nimport { TooltipGlossary } from '../ui/TooltipGlossary';\nimport { CompactRecapBar } from './CompactRecapBar';\nimport { BlueprintPreviewModal } from '../preview/BlueprintPreviewModal';\nimport { STANDARD_FRAMEWORKS, TERMS } from '../../constants/terms';\nimport { queryHeroPromptReferences } from '../../ai/context/heroContext';\nimport { buildWizardSnapshot, copySnapshotPreview, buildSnapshotSharePreview } from '../../utils/wizardExport';\nimport { mergeProjectData, mergeWizardData } from '../../utils/draftMerge';\nimport { StageSpecificSuggestions } from './StageSpecificSuggestions';\nimport { CardActionBar } from '../../features/wizard/components/CardActionBar';\nimport { unifiedStorage } from '../../services/UnifiedStorageManager';\nimport { heroProjectTransformer } from '../../services/HeroProjectTransformer';\n\ninterface Message {\n  id: string;\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: Date;\n  metadata?: {\n    stage?: string;\n    showIdeas?: boolean;\n    showHelp?: boolean;\n    suggestions?: Array<{ id: string; text: string; category: string }>;\n    stageInitiator?: {\n      type: 'big-idea' | 'essential-question' | 'challenge' | 'phase-timeline';\n      value: string;\n    };\n  };\n}\n\ninterface ProjectState {\n  stage: 'ONBOARDING' | 'GROUNDING' | 'IDEATION_INTRO' | 'BIG_IDEA' | 'ESSENTIAL_QUESTION' | 'CHALLENGE' | 'JOURNEY' | 'DELIVERABLES' | 'COMPLETE';\n  conversationStep: number;\n  messageCountInStage: number;\n  awaitingConfirmation?: {\n    type: string;\n    value: string;\n  };\n  context: {\n    subject: string;\n    gradeLevel: string;\n    duration: string;\n    location: string;\n    materials: string;\n  };\n  ideation: {\n    bigIdea: string;\n    bigIdeaConfirmed: boolean;\n    essentialQuestion: string;\n    essentialQuestionConfirmed: boolean;\n    challenge: string;\n    challengeConfirmed: boolean;\n  };\n  journey: {\n    phases: {\n      analyze: { duration: string; activities: string[] };\n      brainstorm: { duration: string; activities: string[] };\n      prototype: { duration: string; activities: string[] };\n      evaluate: { duration: string; activities: string[] };\n    };\n  };\n}\n\nconst SYSTEM_PROMPT = `You are a master PBL educator and curriculum design coach helping teachers create powerful project-based learning experiences.\n\nYOUR COACHING PHILOSOPHY:\n- Be a thinking partner, not a validator or tester\n- Expand teacher understanding while maintaining momentum\n- Provide expert insights that help teachers see the \"why\" behind good PBL\n- Balance educational guidance with practical progress\n- Always acknowledge teacher input positively before offering expertise\n\nEXPERT COACHING APPROACH:\n1. ACKNOWLEDGE: Start by recognizing what's valuable in their thinking\n2. EDUCATE: Share brief expert insight about what makes this element powerful\n3. ENHANCE: Offer gentle ways to strengthen their idea (if needed)\n4. ADVANCE: Create clear momentum toward the next step\n\nCurrent Stage: {stage}\nTeacher Context: {context}\nProgress So Far: {progressSummary}\n\n{stageInstructions}\n\nTONE: Collaborative expert who educates while coaching. Think \"working with a master teacher colleague\" not \"taking a test.\"\n\nTeacher's input: \"{userInput}\"\n\nGenerate a response that acknowledges their thinking, provides expert insight about this stage of PBL design, and creates momentum toward completion.`;\n\ninterface ChatbotFirstInterfaceFixedProps {\n  projectId?: string;\n  projectData?: any;\n  onStageComplete?: (stage: string, data: any) => void;\n  onNavigate?: (target: string) => void;\n}\n\nexport const ChatbotFirstInterfaceFixed: React.FC<ChatbotFirstInterfaceFixedProps> = ({ \n  projectId, \n  projectData, \n  onStageComplete,\n  onNavigate \n}) => {\n  const { user } = useAuth();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [lastInteractionTime, setLastInteractionTime] = useState(Date.now());\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(true);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [showSuggestionsForMessage, setShowSuggestionsForMessage] = useState<string | null>(null);\n  const [showHelpForMessage, setShowHelpForMessage] = useState<string | null>(null);\n  const [showContextualHelp, setShowContextualHelp] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [suggestions, setSuggestions] = useState<any[]>([]);\n  const [activeAskALFStage, setActiveAskALFStage] = useState<ProjectState['stage'] | null>(null);\n  const [activeAskALFContext, setActiveAskALFContext] = useState<{\n    subject?: string;\n    gradeLevel?: string;\n    projectTopic?: string;\n    bigIdea?: string;\n    essentialQuestion?: string;\n    challenge?: string;\n  } | null>(null);\n  const [showHelp, setShowHelp] = useState(false);\n  const [automaticSuggestionsHidden, setAutomaticSuggestionsHidden] = useState(false);\n  const [lastSuggestionStage, setLastSuggestionStage] = useState<string>('');\n  const [lastSavedKey, setLastSavedKey] = useState<string | null>(null);\n  const [recapExpanded, setRecapExpanded] = useState(true);\n  const [journeyExpanded, setJourneyExpanded] = useState(false);\n  const [deliverablesExpanded, setDeliverablesExpanded] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [standardsDraft, setStandardsDraft] = useState<{ framework: string; items: { code: string; label: string; rationale: string }[] }>({ framework: '', items: [{ code: '', label: '', rationale: '' }] });\n  const [standardsConfirmed, setStandardsConfirmed] = useState(false);\n  const [feasAck, setFeasAck] = useState(false);\n  \n  // Store wizard data locally to avoid race condition with projectData updates\n  const [localWizardData, setLocalWizardData] = useState<Partial<WizardDataV3> | null>(null);\n  const [localProjectSnapshot, setLocalProjectSnapshot] = useState<ProjectV3 | null>(null);\n  const [snapshotShareStatus, setSnapshotShareStatus] = useState<'idle' | 'success' | 'error' | 'manual'>('idle');\n  const [snapshotSharePreview, setSnapshotSharePreview] = useState<string | null>(null);\n\n  const generateRuntimeId = useCallback((prefix: string) => {\n    return `${prefix}_${Math.random().toString(36).slice(2, 8)}_${Date.now().toString(36)}`;\n  }, []);\n\n  const getCurrentProjectSnapshot = useCallback(() => {\n    return localProjectSnapshot || ((projectData as any)?.projectData as ProjectV3 | null) || null;\n  }, [localProjectSnapshot, projectData]);\n\n  const parseListFromText = useCallback((value: string): string[] => {\n    if (!value) {\n      return [];\n    }\n    const trimmed = value.trim();\n    if (!trimmed) {\n      return [];\n    }\n    const newlineSplit = trimmed.split(/\\n+/).map(item => item.trim()).filter(Boolean);\n    if (newlineSplit.length > 1) {\n      return newlineSplit;\n    }\n    const bulletSplit = trimmed\n      .split(/(?:•|\\u2022|\\u25AA|\\u25CF|\\*)\\s*/)\n      .map(item => item.trim())\n      .filter(Boolean);\n    if (bulletSplit.length > 1) {\n      return bulletSplit;\n    }\n    const semicolonSplit = trimmed.split(/;+/).map(item => item.trim()).filter(Boolean);\n    if (semicolonSplit.length > 1) {\n      return semicolonSplit;\n    }\n    return [trimmed];\n  }, []);\n\n  const applyProjectPatch = useCallback((patch: Partial<ProjectV3>) => {\n    if (!patch || Object.keys(patch).length === 0) {\n      return;\n    }\n\n    setLocalProjectSnapshot(prev => {\n      if (!prev) {\n        return prev;\n      }\n\n      const updated: ProjectV3 = {\n        ...prev,\n        ...patch,\n        metadata: {\n          ...prev.metadata,\n          updated: new Date().toISOString()\n        }\n      };\n\n      return updated;\n    });\n  }, []);\n\n  const wizardSnapshotSource = useMemo(\n    () => mergeWizardData((projectData as any)?.wizardData ?? null, localWizardData),\n    [projectData, localWizardData]\n  );\n  const canExportSnapshot = Boolean(wizardSnapshotSource && Object.keys(wizardSnapshotSource).length > 0);\n\n  useEffect(() => {\n    if (!localProjectSnapshot && (projectData as any)?.projectData) {\n      setLocalProjectSnapshot((projectData as any).projectData as ProjectV3);\n    }\n  }, [projectData, localProjectSnapshot]);\n\n  const handleCopySnapshot = useCallback(async () => {\n    if (!canExportSnapshot || !wizardSnapshotSource) {\n      setSnapshotShareStatus('error');\n      setSnapshotSharePreview(null);\n      return;\n    }\n\n    const snapshot = buildWizardSnapshot(wizardSnapshotSource);\n    try {\n      await copySnapshotPreview(snapshot);\n      setSnapshotShareStatus('success');\n      setSnapshotSharePreview(null);\n    } catch (error) {\n      console.warn('[ChatbotFirstInterfaceFixed] Clipboard share unavailable, showing manual preview', error);\n      setSnapshotShareStatus('manual');\n      setSnapshotSharePreview(buildSnapshotSharePreview(snapshot));\n    }\n  }, [canExportSnapshot, wizardSnapshotSource]);\n\n  const dismissSnapshotPreview = useCallback(() => {\n    setSnapshotSharePreview(null);\n    setSnapshotShareStatus('idle');\n  }, []);\n\n  useEffect(() => {\n    if (snapshotShareStatus === 'idle' || snapshotShareStatus === 'manual') {\n      return;\n    }\n    const timeout = window.setTimeout(() => setSnapshotShareStatus('idle'), 3500);\n    return () => window.clearTimeout(timeout);\n  }, [snapshotShareStatus]);\n\n  // Function to format stage labels consistently\n  const formatStageLabel = (stage: string): string => {\n    const stageLabels: Record<string, string> = {\n      'ONBOARDING': 'Onboarding',\n      'GROUNDING': 'Grounding',\n      'IDEATION_INTRO': 'Getting Started',\n      'BIG_IDEA': 'Big Idea',\n      'ESSENTIAL_QUESTION': 'Essential Question',\n      'CHALLENGE': 'Challenge',\n      'JOURNEY': 'Learning Journey',\n      'DELIVERABLES': 'Deliverables',\n      'COMPLETE': 'Complete'\n    };\n    return stageLabels[stage] || stage.replace('_', ' ').toLowerCase();\n  };\n  \n  // Feature flags\n  const useInlineUI = useFeatureFlag('inlineUIGuidance');\n  const useProgressSidebar = useFeatureFlag('progressSidebar');\n  const useStageInitiators = useFeatureFlag('stageInitiatorCards');\n  const showInlineRecap = useFeatureFlag('inlineRecapPanel');\n  \n  // Stage microcopy: What/Why/Coach Tip (grounding the teacher at each step)\n  const getStageMicrocopy = (stage: ProjectState['stage']) => {\n    switch (stage) {\n      case 'BIG_IDEA':\n        return {\n          what: 'Define the Big Idea — a transferable concept that anchors the project.',\n          why: 'It keeps work meaningful and gives coherence to everything that follows.',\n          tip: 'Accept your first strong idea; we can refine language later.'\n        };\n      case 'ESSENTIAL_QUESTION':\n        return {\n          what: 'Shape an Essential Question that drives extended inquiry.',\n          why: 'A good EQ builds curiosity and guides student investigation for weeks.',\n          tip: 'Start with How/Why; aim for multiple perspectives and “can’t Google in 5 minutes”.'\n        };\n      case 'STANDARDS':\n        return {\n          what: 'Select standards and add a short rationale.',\n          why: 'Clear alignment builds rigor and makes expectations transparent.',\n          tip: 'Keep it tight: a few high‑value codes with plain‑language “why this fits”.'\n        };\n      case 'CHALLENGE':\n        return {\n          what: 'Design an authentic Challenge that gives students real purpose.',\n          why: 'Authentic tasks create engagement and connect learning to community impact.',\n          tip: 'Make the audience explicit (who benefits) and keep scope achievable.'\n        };\n      case 'JOURNEY':\n        return {\n          what: 'Plan the learning journey — Analyze → Brainstorm → Prototype → Evaluate.',\n          why: 'A clear arc supports creative process and feedback‑driven growth.',\n          tip: 'Add 1–2 simple checkpoints per phase; we’ll refine later.'\n        };\n      case 'DELIVERABLES':\n        return {\n          what: 'Lock deliverables, rubric criteria, impact plan, and checkpoints.',\n          why: 'Clarity on products and evidence ensures fair, student‑friendly assessment.',\n          tip: 'Tie criteria to artifacts; each milestone gets at least one checkpoint.'\n        };\n      default:\n        return null;\n    }\n  };\n\n  // Mobile-friendly toggle for stage tips (persisted per blueprint + stage)\n  const [mobileTipsOpen, setMobileTipsOpen] = useState(true);\n\n  // (moved) Persist Stage Guide state — placed after projectState\n\n  const mapWizardToSummary = (wizard: Partial<WizardDataV3> | Record<string, any>) => {\n    const source = wizard || {};\n    const projectContext = (source as Partial<WizardDataV3>).projectContext || (source as any).context || {};\n\n    // Prioritize main wizard fields over nested projectContext fields\n    const subjects: string[] = Array.isArray((source as any).subjects)\n      ? (source as any).subjects\n      : Array.isArray((projectContext as any).subjects)\n        ? (projectContext as any).subjects\n        : [];\n\n    const gradeLevel: string = (source as any).gradeLevel || (projectContext as any).gradeLevel || '';\n\n    // Map duration enum to user-friendly string\n    const durationRaw = (source as any).duration || (projectContext as any).timeWindow || '';\n    const durationLabels = {\n      'short': '2-3 weeks',\n      'medium': '4-8 weeks',\n      'long': 'Semester'\n    };\n    const duration = durationLabels[durationRaw as keyof typeof durationLabels] || durationRaw;\n\n    const location: string = (projectContext as any).space || (source as any).location || '';\n\n    const materialItems = Array.isArray((source as any).materials)\n      ? (source as any).materials\n      : Array.isArray((projectContext as any).availableMaterials)\n        ? (projectContext as any).availableMaterials\n        : typeof (source as any).materials === 'string'\n          ? [(source as any).materials]\n          : [];\n\n    const materials = Array.isArray(materialItems)\n      ? materialItems.filter(Boolean).join(', ')\n      : typeof materialItems === 'string'\n        ? materialItems\n        : '';\n\n    // Handle learningGoals properly - can be string or array\n    const learningGoalsRaw = (source as any).learningGoals;\n    const learningGoalsArray = Array.isArray(learningGoalsRaw)\n      ? learningGoalsRaw.map(goal => {\n          if (typeof goal === 'string') return goal;\n          if (goal && typeof (goal as any).text === 'string') return (goal as any).text;\n          return '';\n        }).filter(Boolean)\n      : typeof learningGoalsRaw === 'string'\n        ? learningGoalsRaw.split(/\\n+/).filter(Boolean)\n        : [];\n\n    return {\n      projectTopic: (source as any).projectTopic || '',\n      learningGoals: learningGoalsArray.join('\\n'),\n      entryPoint: (source as any).entryPoint || '',\n      subjects,\n      gradeLevel,\n      duration,\n      materials,\n      location,\n      specialRequirements: (source as any).specialRequirements || ((projectContext as any).constraints || []).join(', '),\n      specialConsiderations: (source as any).specialConsiderations || '',\n      pblExperience: (source as any).pblExperience || 'some',\n      projectContext\n    };\n  };\n\n  // Standardize wizard data access with comprehensive fallback\n  const getWizardData = () => {\n    const rawWizard = localWizardData || (projectData as any)?.wizardData || {};\n    return mapWizardToSummary(rawWizard);\n  };\n\n  const [projectState, setProjectState] = useState<ProjectState>(() => {\n    const wizard = getWizardData();\n    \n    // Simple check: Does this blueprint have valid wizard data?\n    const hasValidWizardData = wizard.subjects?.length > 0 || wizard.projectTopic;\n    \n    // For development/debugging\n    const urlParams = new URLSearchParams(window.location.search);\n    const forceSkipOnboarding = urlParams.get('skip') === 'true';\n    \n    // Start with onboarding unless we have valid wizard data\n    const shouldShowOnboarding = !hasValidWizardData && !forceSkipOnboarding;\n    \n    console.log('[ChatbotFirstInterfaceFixed] Initial state:', {\n      projectId,\n      hasValidWizardData,\n      wizardData: wizard,\n      shouldShowOnboarding,\n      stage: shouldShowOnboarding ? 'ONBOARDING' : 'BIG_IDEA'\n    });\n    \n    return {\n      stage: shouldShowOnboarding ? 'ONBOARDING' : 'BIG_IDEA',\n      conversationStep: 0,\n      messageCountInStage: 0,\n      context: {\n        subject: wizard.subjects?.join(', ') || '',\n        gradeLevel: wizard.gradeLevel || '',\n        duration: wizard.duration || '',\n        location: wizard.location || '',\n        materials: wizard.materials || ''\n      },\n    ideation: {\n      bigIdea: '',\n      bigIdeaConfirmed: false,\n      essentialQuestion: '',\n      essentialQuestionConfirmed: false,\n      challenge: '',\n      challengeConfirmed: false\n    },\n    journey: {\n      phases: {\n        analyze: { duration: '', activities: [] },\n        brainstorm: { duration: '', activities: [] },\n        prototype: { duration: '', activities: [] },\n        evaluate: { duration: '', activities: [] }\n      }\n    }\n  };\n  });\n\n  const composeAskALFContext = useCallback(() => {\n    const wizard = getWizardData();\n    return {\n      subject: projectState.context.subject || wizard.subjects?.join(', ') || wizard.subject || '',\n      gradeLevel: projectState.context.gradeLevel || wizard.gradeLevel,\n      projectTopic: wizard.projectTopic,\n      bigIdea: projectState.ideation.bigIdea,\n      essentialQuestion: projectState.ideation.essentialQuestion,\n      challenge: projectState.ideation.challenge\n    };\n  }, [getWizardData, projectState.context.subject, projectState.context.gradeLevel, projectState.ideation.bigIdea, projectState.ideation.essentialQuestion, projectState.ideation.challenge]);\n\n  const clearAskALFTray = useCallback(() => {\n    setActiveAskALFStage(null);\n    setActiveAskALFContext(null);\n  }, []);\n\n  // Enhanced data persistence with UnifiedStorageManager\n  const saveProjectData = useCallback(async (updatedData: any) => {\n    if (!projectId) return;\n\n    try {\n      const existingProject = await unifiedStorage.loadProject(projectId);\n      const mergedData = {\n        ...existingProject,\n        ...updatedData,\n        capturedData: {\n          ...existingProject?.capturedData,\n          chatState: projectState,\n          messages: messages\n        },\n        updatedAt: new Date()\n      };\n\n      await unifiedStorage.saveProject(mergedData);\n      console.log('[ChatbotFirstInterfaceFixed] Project data saved with UnifiedStorageManager');\n    } catch (error: any) {\n      console.error('[ChatbotFirstInterfaceFixed] Failed to save project data:', error);\n\n      // Handle Firebase permissions specifically\n      if (error?.code === 'permission-denied' || error?.message?.includes('permission')) {\n        console.warn('[ChatbotFirstInterfaceFixed] Firebase permissions issue during auto-save - data saved locally');\n        // Don't show toast for auto-save permission errors to avoid spam\n      } else if (error?.code === 'unauthenticated') {\n        console.warn('[ChatbotFirstInterfaceFixed] Authentication required for cloud sync - data saved locally');\n      } else {\n        console.error('[ChatbotFirstInterfaceFixed] Unexpected auto-save error:', error);\n      }\n    }\n  }, [projectId, projectState, messages]);\n\n  // Auto-save project state changes\n  useEffect(() => {\n    const saveTimer = setTimeout(() => {\n      if (projectId && projectState) {\n        saveProjectData({});\n      }\n    }, 2000); // Auto-save every 2 seconds\n\n    return () => clearTimeout(saveTimer);\n  }, [projectState, saveProjectData]);\n\n  // ENHANCED stage validation with detailed feedback\n  const canEnterStage = useCallback((targetStage: ProjectState['stage']) => {\n    switch(targetStage) {\n      case 'ESSENTIAL_QUESTION':\n        return !!projectState.ideation.bigIdea && projectState.ideation.bigIdea.trim().length > 10;\n      case 'CHALLENGE':\n        return !!projectState.ideation.bigIdea && projectState.ideation.bigIdea.trim().length > 10 &&\n               !!projectState.ideation.essentialQuestion && projectState.ideation.essentialQuestion.trim().length > 10;\n      case 'JOURNEY':\n        return !!projectState.ideation.bigIdea && projectState.ideation.bigIdea.trim().length > 10 &&\n               !!projectState.ideation.essentialQuestion && projectState.ideation.essentialQuestion.trim().length > 10 &&\n               !!projectState.ideation.challenge && projectState.ideation.challenge.trim().length > 15;\n      case 'DELIVERABLES':\n        return !!projectState.ideation.bigIdea && projectState.ideation.bigIdea.trim().length > 10 &&\n               !!projectState.ideation.essentialQuestion && projectState.ideation.essentialQuestion.trim().length > 10 &&\n               !!projectState.ideation.challenge && projectState.ideation.challenge.trim().length > 15;\n      default:\n        return true;\n    }\n  }, [projectState.ideation]);\n\n  // Get validation message for why a stage cannot be entered\n  const getStageValidationMessage = useCallback((targetStage: ProjectState['stage']): string => {\n    switch(targetStage) {\n      case 'ESSENTIAL_QUESTION':\n        if (!projectState.ideation.bigIdea || projectState.ideation.bigIdea.trim().length <= 10) {\n          return 'Please define a substantial Big Idea (at least 10 characters) before moving to Essential Question.';\n        }\n        break;\n      case 'CHALLENGE':\n        if (!projectState.ideation.bigIdea || projectState.ideation.bigIdea.trim().length <= 10) {\n          return 'Please define a Big Idea before moving to Challenge.';\n        }\n        if (!projectState.ideation.essentialQuestion || projectState.ideation.essentialQuestion.trim().length <= 10) {\n          return 'Please define an Essential Question before moving to Challenge.';\n        }\n        break;\n      case 'JOURNEY':\n        if (!projectState.ideation.bigIdea || projectState.ideation.bigIdea.trim().length <= 10) {\n          return 'Please define a Big Idea before planning the Learning Journey.';\n        }\n        if (!projectState.ideation.essentialQuestion || projectState.ideation.essentialQuestion.trim().length <= 10) {\n          return 'Please define an Essential Question before planning the Learning Journey.';\n        }\n        if (!projectState.ideation.challenge || projectState.ideation.challenge.trim().length <= 15) {\n          return 'Please define a substantial Challenge before planning the Learning Journey.';\n        }\n        break;\n      case 'DELIVERABLES':\n        if (!projectState.ideation.bigIdea || projectState.ideation.bigIdea.trim().length <= 10) {\n          return 'Please complete all ideation steps before defining Deliverables.';\n        }\n        if (!projectState.ideation.essentialQuestion || projectState.ideation.essentialQuestion.trim().length <= 10) {\n          return 'Please complete all ideation steps before defining Deliverables.';\n        }\n        if (!projectState.ideation.challenge || projectState.ideation.challenge.trim().length <= 15) {\n          return 'Please complete all ideation steps before defining Deliverables.';\n        }\n        break;\n    }\n    return 'Please complete the previous steps before continuing.';\n  }, [projectState.ideation]);\n\n  // STABILIZATION FIX: Get stage order for preventing backward navigation\n  const getStageOrder = (stage: ProjectState['stage']): number => {\n    const order = {\n      'ONBOARDING': 0,\n      'BIG_IDEA': 1,\n      'ESSENTIAL_QUESTION': 2,\n      'CHALLENGE': 3,\n      'JOURNEY': 4,\n      'DELIVERABLES': 5,\n      'COMPLETE': 6\n    };\n    return order[stage] || 0;\n  };\n\n  useEffect(() => {\n    if (!activeAskALFStage) {\n      return;\n    }\n    if (projectState.stage !== activeAskALFStage) {\n      clearAskALFTray();\n    }\n  }, [projectState.stage, activeAskALFStage, clearAskALFTray]);\n\n  // Persist Stage Guide open/closed state per project + stage\n  useEffect(() => {\n    try {\n      const key = `stageGuideCollapsed:${projectId || 'unknown'}:${projectState.stage}`;\n      const stored = localStorage.getItem(key);\n      if (stored === '0' || stored === '1') {\n        setMobileTipsOpen(stored === '1');\n      } else {\n        // default open on first visit\n        setMobileTipsOpen(true);\n      }\n    } catch {}\n  }, [projectId, projectState.stage]);\n\n  // STABILIZATION FIX: Clear confirmation state on stage change\n  useEffect(() => {\n    if (projectState.awaitingConfirmation) {\n      const timeout = setTimeout(() => {\n        logger.warn('Clearing stuck confirmation state after timeout');\n        setProjectState(prev => ({ ...prev, awaitingConfirmation: null }));\n      }, 30000); // 30 second timeout\n      return () => clearTimeout(timeout);\n    }\n  }, [projectState.awaitingConfirmation]);\n\n  // STABILIZATION FIX: Recovery mechanism for invalid states\n  useEffect(() => {\n    // If in DELIVERABLES but missing prerequisites, go back to appropriate stage\n    if (projectState.stage === 'DELIVERABLES' && !projectState.ideation.challenge) {\n      logger.warn('Invalid state detected: DELIVERABLES without challenge');\n      setProjectState(prev => ({ ...prev, stage: 'CHALLENGE', awaitingConfirmation: null }));\n      addMessage('assistant', 'Let\\'s complete the challenge first before defining deliverables.');\n    } else if (projectState.stage === 'JOURNEY' && !projectState.ideation.challenge) {\n      logger.warn('Invalid state detected: JOURNEY without challenge');\n      setProjectState(prev => ({ ...prev, stage: 'CHALLENGE', awaitingConfirmation: null }));\n      addMessage('assistant', 'Let\\'s define the challenge first before planning the journey.');\n    } else if (projectState.stage === 'CHALLENGE' && !projectState.ideation.essentialQuestion) {\n      logger.warn('Invalid state detected: CHALLENGE without essential question');\n      setProjectState(prev => ({ ...prev, stage: 'ESSENTIAL_QUESTION', awaitingConfirmation: null }));\n      addMessage('assistant', 'Let\\'s complete the essential question first.');\n    } else if (projectState.stage === 'ESSENTIAL_QUESTION' && !projectState.ideation.bigIdea) {\n      logger.warn('Invalid state detected: ESSENTIAL_QUESTION without big idea');\n      setProjectState(prev => ({ ...prev, stage: 'BIG_IDEA', awaitingConfirmation: null }));\n      addMessage('assistant', 'Let\\'s define the big idea first.');\n    }\n\n    // STABILIZATION FIX: Clear orphaned confirmation states that don't match current stage\n    if (projectState.awaitingConfirmation) {\n      const confirmationType = projectState.awaitingConfirmation.type;\n      const currentStage = projectState.stage;\n      let shouldClear = false;\n\n      // Check if confirmation type doesn't match current stage\n      if (currentStage === 'BIG_IDEA' && !confirmationType.includes('bigIdea')) shouldClear = true;\n      if (currentStage === 'ESSENTIAL_QUESTION' && !confirmationType.includes('essentialQuestion')) shouldClear = true;\n      if (currentStage === 'CHALLENGE' && !confirmationType.includes('challenge')) shouldClear = true;\n      if (currentStage === 'JOURNEY' && !confirmationType.includes('journey')) shouldClear = true;\n      if (currentStage === 'DELIVERABLES' && !confirmationType.includes('deliverables')) shouldClear = true;\n      if (currentStage === 'GROUNDING' || currentStage === 'IDEATION_INTRO' || currentStage === 'COMPLETE') shouldClear = true;\n\n      if (shouldClear) {\n        logger.warn('Clearing orphaned confirmation state', { confirmationType, currentStage });\n        setProjectState(prev => ({ ...prev, awaitingConfirmation: null }));\n      }\n    }\n  }, [projectState.stage, projectState.ideation, projectState.awaitingConfirmation]);\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const geminiService = useRef(new GeminiService());\n  \n  // Connection status logging removed - not using StateManager\n  \n  // Scroll to bottom when messages update\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Initialize with proper welcome message - only if not showing onboarding\n  useEffect(() => {\n    console.log('[ChatbotFirstInterfaceFixed] Welcome message useEffect triggered', {\n      stage: projectState.stage,\n      messagesLength: messages.length,\n      hasLocalWizardData: !!localWizardData,\n      hasProjectData: !!projectData?.wizardData\n    });\n    \n    const wizard = getWizardData();\n    \n    // Show welcome message when stage changes to BIG_IDEA (from wizard completion)\n    if (projectState.stage === 'BIG_IDEA' && messages.length === 0) {\n      console.log('[ChatbotFirstInterfaceFixed] Stage changed to BIG_IDEA, initializing welcome message with context:', wizard);\n      \n      // Build rich context from wizard data\n      const contextSubject = wizard.subjects?.join(' & ') || projectState.context.subject || 'your subject area';\n      const contextGrade = wizard.gradeLevel || projectState.context.gradeLevel || 'your students';\n      const contextTopic = wizard.projectTopic || 'an engaging project';\n      const contextGoals = (wizard.learningGoals || '').trim();\n      const contextLocation = (wizard.location || '').trim();\n      const contextDuration = wizard.duration || projectState.context.duration || 'this project';\n      \n      let welcomeContent = '';\n      \n      if (wizard.subjects?.length > 0 || wizard.projectTopic) {\n        // Enhanced welcome with full wizard context\n        if (wizard.projectTopic) {\n          const goalLine = contextGoals ? `\\n\\nLearning goals you noted: ${contextGoals}` : '';\n          const locationLine = contextLocation ? ` in ${contextLocation}` : '';\n          welcomeContent = `Excellent! I see you want to explore \"${wizard.projectTopic}\" with your ${contextGrade} students in ${contextSubject}${locationLine}. This ${contextDuration} project has great potential!${goalLine}\n\nLet's start by defining the Big Idea - the central concept that will drive deep learning. What overarching theme or principle do you want students to understand through this project?`;\n        } else {\n          welcomeContent = `Perfect! You're creating a ${contextSubject} project for ${contextGrade} students over ${contextDuration}. Let's design something amazing!\n\nWhat's the big idea or central theme you'd like your students to explore? Think about a concept that connects to real-world challenges and sparks curiosity.`;\n        }\n      } else {\n        // Fallback welcome message using available context\n        welcomeContent = `Welcome! Let's create an amazing Active Learning Framework experience for your students.\n\nWhat's the big idea or theme you'd like your students to explore? Think about a real-world problem or compelling question that could drive this project.`;\n      }\n      \n      const welcomeMessage: Message = {\n        id: Date.now().toString(),\n        role: 'assistant',\n        content: welcomeContent,\n        timestamp: new Date(),\n        metadata: {\n          stage: 'BIG_IDEA'\n        }\n      };\n      setMessages([welcomeMessage]);\n      console.log('[ChatbotFirstInterfaceFixed] Welcome message set with full context, chat should be visible');\n    }\n  }, [projectState.stage, projectState.context, messages.length, localWizardData, projectData?.wizardData]);\n\n  // When entering JOURNEY, seed first micro-step prompt if not already awaiting\n  useEffect(() => {\n    if (projectState.stage === 'JOURNEY' && !projectState.awaitingConfirmation) {\n      const firstType = 'journey.analyze.goal';\n      setProjectState(prev => ({\n        ...prev,\n        awaitingConfirmation: { type: firstType, value: '' }\n      }));\n      // Seed inline micro-step suggestions\n      setSuggestions(getMicrostepSuggestions(firstType).map((t, i) => ({ id: `js-${i}`, text: t })) as any);\n      setShowSuggestions(true);\n      const assistantMessage: Message = {\n        id: String(Date.now() + 2),\n        role: 'assistant',\n        content: promptForJourneyAwaiting(firstType),\n        timestamp: new Date(),\n        metadata: { stage: 'JOURNEY' }\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    }\n  }, [projectState.stage]);\n\n  // When entering DELIVERABLES, seed first micro-step prompt if not already awaiting\n  useEffect(() => {\n    if (projectState.stage === 'DELIVERABLES' && !projectState.awaitingConfirmation) {\n      const firstType = 'deliverables.milestones.0';\n      setProjectState(prev => ({\n        ...prev,\n        awaitingConfirmation: { type: firstType, value: '' }\n      }));\n      setSuggestions(getMicrostepSuggestions(firstType).map((t, i) => ({ id: `ds-${i}`, text: t })) as any);\n      setShowSuggestions(true);\n      const assistantMessage: Message = {\n        id: String(Date.now() + 5),\n        role: 'assistant',\n        content: promptForDeliverablesAwaiting(firstType),\n        timestamp: new Date(),\n        metadata: { stage: 'DELIVERABLES' }\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    }\n  }, [projectState.stage]);\n  \n  // Generate contextual AI prompt using rich wizard data\n  const generateAIPrompt = (userInput: string): string => {\n    const wizard = getWizardData();\n    const ideation = projectData?.ideation || projectState.ideation;\n    \n    // Get stage-specific instructions\n    const getStageInstructions = () => {\n      switch (projectState.stage) {\n        case 'BIG_IDEA':\n        case 'IDEATION_BIG_IDEA':\n          return `EXPERT COACHING FOCUS: Help the teacher develop a Big Idea - a transferable concept that anchors the entire project.\n\nWHY BIG IDEAS MATTER: They help students see patterns across disciplines and develop understanding they can apply beyond this single project. Strong Big Ideas focus on concepts (like \"Systems have interconnected parts\") rather than topics (like \"The Water Cycle\").\n\nCOACHING APPROACH:\n- Acknowledge what's conceptual in their thinking\n- Help them see the transferable potential in their idea\n- Share why this concept will serve their students well\n- Explain how this foundation will support their Essential Question\n- Create momentum toward next step while ensuring they understand the pedagogical value\n\nBe a thinking partner who educates about PBL design while building on their ideas.`;\n        \n        case 'ESSENTIAL_QUESTION':\n        case 'IDEATION_EQ':\n          return `EXPERT COACHING FOCUS: Help the teacher craft an Essential Question that drives sustained student inquiry and connects to their Big Idea: \"${ideation.bigIdea || 'Not yet defined'}\"\n\nWHY ESSENTIAL QUESTIONS MATTER: Great EQs create \"cognitive hooks\" that students can't stop thinking about. They spark debate at dinner tables and connect daily lessons to bigger purposes. They should be open-ended, thought-provoking, and impossible to Google in 5 minutes.\n\nCOACHING APPROACH:\n- Acknowledge the inquiry thinking in their question\n- Help them see how this will keep students engaged over weeks\n- Explain the connection between their EQ and the Big Idea\n- Share why open-ended questions create better learning experiences\n- Guide them toward the authentic Challenge that will address this question\n\nFocus on expanding their understanding of what makes questions powerful for sustained learning.`;\n        \n        case 'CHALLENGE':\n        case 'IDEATION_CHALLENGE':\n          return `EXPERT COACHING FOCUS: Help the teacher design an authentic Challenge that transforms learning from \"school work\" to meaningful action, building on their Essential Question: \"${ideation.essentialQuestion || 'Not yet defined'}\"\n\nWHY AUTHENTIC CHALLENGES MATTER: When students know their work will impact real people in their community, engagement transforms completely. Authentic challenges give students genuine purpose and connect classroom learning to real-world application.\n\nCOACHING APPROACH:\n- Acknowledge the authentic purpose emerging in their thinking\n- Help them see how this challenge addresses their Essential Question\n- Explain why real audiences create powerful motivation for students\n- Guide them to make the scope achievable but genuinely useful\n- Show the connection between this challenge and the learning journey ahead\n\nBe an expert partner who helps them understand how authentic work transforms student engagement.`;\n        \n        case 'JOURNEY':\n          return `CURRENT TASK: Plan the learning journey for the Challenge: \"${ideation.challenge || 'Not yet defined'}\"\n\nACCEPTANCE CRITERIA:\n- Accept any structured learning plan\n- Confirm before progressing to Deliverables\n\nRESPONSE STRATEGY:\n1. ACKNOWLEDGE their journey plan (\"This provides excellent structure...\")\n2. CONFIRM their choice (\"Ready to define the deliverables and assessment?\")\n3. WAIT for confirmation\n\nGuide them through phases if needed: Analyze → Brainstorm → Prototype → Evaluate\nUse markdown lists and headers to organize the phases clearly.`;\n        \n        case 'DELIVERABLES':\n          return `CURRENT TASK: Define deliverables and assessment for the project\n\nACCEPTANCE CRITERIA:\n- Accept any concrete deliverables\n- Confirm before completing\n\nRESPONSE STRATEGY:\n1. ACKNOWLEDGE their deliverables (\"These will showcase meaningful learning...\")\n2. CONFIRM completion (\"Your project blueprint is complete! Ready to finalize?\")\n3. WAIT for confirmation\n\nHelp them define assessment criteria if needed.\nUse markdown tables or lists to present options clearly.`;\n        \n        default:\n          return `CURRENT TASK: Understand the teacher's project context and goals.`;\n      }\n    };\n    \n    const stageInstructions = getStageInstructions();\n    \n    // Build enhanced context string with wizard data\n    const subjectText = wizard.subjects?.length > 0 ? wizard.subjects.join(' & ') : projectState.context.subject || 'Not specified';\n    const context = `\n=== PROJECT CONTEXT ===\nSubject Areas: ${subjectText}\nGrade Level: ${wizard.gradeLevel || projectState.context.gradeLevel || 'Not specified'}\nProject Duration: ${wizard.duration || projectState.context.duration || 'Not specified'}\nProject Topic: ${wizard.projectTopic || 'Not specified'}\nLearning Goals: ${wizard.learningGoals || 'Not specified'}\nEntry Point: ${wizard.entryPoint || 'Standards-based'}\nMaterials Available: ${wizard.materials || 'Standard classroom resources'}\n\n=== CONVERSATION PROGRESS ===\n- Big Idea: ${ideation.bigIdea || 'Not yet defined'}\n- Essential Question: ${ideation.essentialQuestion || 'Not yet defined'}\n- Challenge: ${ideation.challenge || 'Not yet defined'}\n\n=== CURRENT CONTEXT ===\nUser is working on: ${projectState.stage.replace('_', ' ')}\nMessage count in stage: ${projectState.messageCountInStage}\nAwaiting confirmation: ${projectState.awaitingConfirmation ? 'Yes - for ' + projectState.awaitingConfirmation.type : 'No'}\n\n=== USER INPUT ===\n\"${userInput}\"\n`;\n    \n    // Build progress summary for expert context\n    const progressSummary = `\nBig Idea: ${projectState.ideation.bigIdea || 'Not yet defined'}\nEssential Question: ${projectState.ideation.essentialQuestion || 'Not yet defined'}\nChallenge: ${projectState.ideation.challenge || 'Not yet defined'}\nJourney Progress: ${getJourneySummary()}\nDeliverables: ${getDeliverablesSummary()}\n    `.trim();\n\n    return SYSTEM_PROMPT\n      .replace('{stage}', projectState.stage)\n      .replace('{context}', context)\n      .replace('{progressSummary}', progressSummary)\n      .replace('{stageInstructions}', stageInstructions)\n      .replace('{userInput}', userInput);\n  };\n  \n  // Framework for when suggestions should appear automatically\n  const shouldShowAutomaticSuggestions = () => {\n    // Don't show if user manually hid them\n    if (automaticSuggestionsHidden) return false;\n    \n    // Don't show if already showing manually\n    if (showSuggestions) return false;\n    \n    // Don't show if typing\n    if (isTyping) return false;\n    \n    // Show suggestions at key transition points\n    const suggestibleStages = ['BIG_IDEA', 'ESSENTIAL_QUESTION', 'CHALLENGE', 'JOURNEY', 'DELIVERABLES'];\n    \n    // Show if:\n    // 1. We're in a suggestible stage\n    // 2. Stage just changed (different from last shown)\n    // 3. User hasn't typed anything yet\n    // 4. Not too many messages in current stage (first 2 messages)\n    return (\n      suggestibleStages.includes(projectState.stage) &&\n      projectState.stage !== lastSuggestionStage &&\n      !input.trim() &&\n      projectState.messageCountInStage <= 1\n    );\n  };\n  \n  // Reset automatic suggestions when stage changes\n  useEffect(() => {\n    if (projectState.stage !== lastSuggestionStage) {\n      setAutomaticSuggestionsHidden(false);\n      setLastSuggestionStage(projectState.stage);\n    }\n  }, [projectState.stage, lastSuggestionStage]);\n\n  // Helpers to surface captured summaries (non-blocking if data missing)\n  const getCaptured = () => (projectData && projectData.capturedData) ? projectData.capturedData as Record<string, any> : {};\n  const getJourneySummary = () => {\n    const cd = getCaptured();\n    const phases = ['analyze', 'brainstorm', 'prototype', 'evaluate'];\n    const have = phases.filter(p => cd[`journey.${p}.goal`] || cd[`journey.${p}.activity`] || cd[`journey.${p}.output`] || cd[`journey.${p}.duration`]);\n    if (have.length === 0) return 'No phases planned yet';\n    return `${have.map(p => p[0].toUpperCase() + p.slice(1)).join(', ')} planned`;\n  };\n  const getDeliverablesSummary = () => {\n    const cd = getCaptured();\n    const milestones = ['0','1','2'].filter(i => cd[`deliverables.milestones.${i}`]).length;\n    const criteria = cd['deliverables.rubric.criteria'] ? 'criteria set' : 'criteria pending';\n    const audience = cd['deliverables.impact.audience'] || 'audience TBD';\n    const method = cd['deliverables.impact.method'] || 'sharing method TBD';\n    const parts: string[] = [];\n    parts.push(`${milestones} milestone${milestones===1?'':'s'}`);\n    parts.push(criteria);\n    parts.push(`audience: ${audience}`);\n    parts.push(`method: ${method}`);\n    return parts.join(' • ');\n  };\n\n  // Derive standards confirmation and draft from captured data (for reload continuity)\n  useEffect(() => {\n    if (projectState.stage !== 'STANDARDS') return;\n    const cd = getCaptured();\n    const framework = cd['standards.framework'] || '';\n    const list = cd['standards.list'] ? (() => { try { return JSON.parse(cd['standards.list']); } catch { return []; } })() : [];\n    if (framework || (Array.isArray(list) && list.length)) {\n      setStandardsConfirmed(true);\n      setStandardsDraft({ framework, items: Array.isArray(list) && list.length ? list : standardsDraft.items });\n    }\n  }, [projectState.stage, projectData?.capturedData]);\n\n  const getMissingItems = () => {\n    const cd = getCaptured();\n    const missing: string[] = [];\n    // Standards are optional - don't mark as missing\n    if (!cd['ideation.bigIdea']) missing.push('Big Idea');\n    if (!cd['ideation.essentialQuestion']) missing.push('EQ');\n    if (!cd['ideation.challenge']) missing.push('Challenge');\n    if (!cd['deliverables.rubric.criteria']) missing.push('Rubric');\n    if (!cd['deliverables.milestones.0']) missing.push('Milestones');\n    if (!cd['deliverables.artifacts']) missing.push('Artifacts');\n    if (!cd['deliverables.checkpoints.0']) missing.push('Checkpoints');\n    return missing;\n  };\n\n  const isJourneyComplete = () => {\n    const cd = getCaptured();\n    const phases = ['analyze','brainstorm','prototype','evaluate'];\n    return phases.every(p => (\n      cd[`journey.${p}.goal`] && cd[`journey.${p}.activity`] && cd[`journey.${p}.output`] && cd[`journey.${p}.duration`]\n    ));\n  };\n\n  const isDeliverablesComplete = () => {\n    const cd = getCaptured();\n    const milestonesOk = ['0','1','2'].every(i => !!cd[`deliverables.milestones.${i}`]);\n    const rubricOk = !!cd['deliverables.rubric.criteria'];\n    const impactOk = !!cd['deliverables.impact.audience'] && !!cd['deliverables.impact.method'];\n    return milestonesOk && rubricOk && impactOk;\n  };\n\n  const getJourneyPhasePreview = (phase: 'analyze'|'brainstorm'|'prototype'|'evaluate') => {\n    const projectSnapshot = getCurrentProjectSnapshot();\n    let goal = '';\n    let activity = '';\n    let output = '';\n    let duration = '';\n\n    if (projectSnapshot?.phases?.length) {\n      const normalized = phase.toLowerCase();\n      const matchedPhase = projectSnapshot.phases.find(item => item.name?.toLowerCase().includes(normalized));\n      if (matchedPhase) {\n        goal = matchedPhase.goals?.[0] || goal;\n        activity = Array.isArray(matchedPhase.activities) ? matchedPhase.activities[0] || activity : activity;\n        duration = matchedPhase.duration || duration;\n      }\n    }\n\n    if (!goal || !activity || !duration) {\n      const cd = getCaptured();\n      goal = goal || cd[`journey.${phase}.goal`] || '';\n      activity = activity || cd[`journey.${phase}.activity`] || cd[`journey.${phase}.activities`] || '';\n      output = cd[`journey.${phase}.output`] || '';\n      duration = duration || cd[`journey.${phase}.duration`] || '';\n    }\n\n    const parts = [] as string[];\n    if (goal) parts.push(goal);\n    if (activity) parts.push(activity);\n    if (output) parts.push(output);\n    if (duration) parts.push(duration);\n    return parts.slice(0, 2).join(' • ') || 'No details yet';\n  };\n\n  const getDeliverablesPreviewLines = () => {\n    const projectSnapshot = getCurrentProjectSnapshot();\n    const lines: string[] = [];\n    if (projectSnapshot?.milestones?.length) {\n      const milestoneSummary = projectSnapshot.milestones\n        .map(item => item.name || item.description)\n        .filter(Boolean);\n      if (milestoneSummary.length) {\n        lines.push(`Milestones: ${milestoneSummary.slice(0, 3).join(' • ')}`);\n      }\n    }\n    if ((projectSnapshot as any)?.deliverables?.impact) {\n      const impact = (projectSnapshot as any).deliverables.impact;\n      const audience = impact?.audience;\n      const method = impact?.method;\n      if (audience || method) {\n        lines.push(`Impact: ${audience || 'audience TBD'} • ${method || 'method TBD'}`);\n      }\n    } else if (projectSnapshot?.exhibition) {\n      const audList = projectSnapshot.exhibition.audience?.join(', ');\n      const method = projectSnapshot.exhibition.format;\n      if (audList || method) {\n        lines.push(`Impact: ${audList || 'audience TBD'} • ${method || 'method TBD'}`);\n      }\n    }\n\n    if (!lines.length) {\n      const cd = getCaptured();\n      const ms = ['0','1','2'].map(i => cd[`deliverables.milestones.${i}`]).filter(Boolean);\n      if (ms.length) lines.push(`Milestones: ${ms.join(' • ')}`);\n      if (cd['deliverables.rubric.criteria']) lines.push(`Rubric: ${cd['deliverables.rubric.criteria']}`);\n      const aud = cd['deliverables.impact.audience'];\n      const meth = cd['deliverables.impact.method'];\n      if (aud || meth) lines.push(`Impact: ${aud || 'audience TBD'} • ${meth || 'method TBD'}`);\n    }\n    return lines.length ? lines : ['No details yet'];\n  };\n\n  const aiAssistReferences = useMemo(() => {\n    const wizard = getWizardData();\n    const subjectSet = new Set<string>();\n    (wizard.subjects || []).forEach(sub => sub && subjectSet.add(sub));\n    if (wizard.projectTopic) subjectSet.add(wizard.projectTopic);\n    if (projectState.context.subject) subjectSet.add(projectState.context.subject);\n\n    const gradeSet = new Set<string>();\n    if (wizard.gradeLevel) gradeSet.add(wizard.gradeLevel);\n    if (projectState.context.gradeLevel) gradeSet.add(projectState.context.gradeLevel);\n\n    const subjects = Array.from(subjectSet).filter(Boolean);\n    const gradeLevels = Array.from(gradeSet).filter(Boolean);\n\n    return queryHeroPromptReferences({\n      subjects,\n      gradeLevels,\n      limit: 3\n    });\n  }, [localWizardData, projectData?.wizardData, projectState.context.subject, projectState.context.gradeLevel]);\n\n  // Map last saved key to a friendly label\n  const mapSavedKeyToLabel = (key: string | null): string | undefined => {\n    if (!key) return undefined;\n    if (key.startsWith('ideation.')) {\n      if (key.endsWith('bigIdea')) return 'Big Idea';\n      if (key.endsWith('essentialQuestion')) return 'Essential Question';\n      if (key.endsWith('challenge')) return 'Challenge';\n    }\n    if (key.startsWith('journey.')) return 'Learning Journey';\n    if (key.startsWith('deliverables.')) return 'Deliverables';\n    return undefined;\n  };\n\n  const getSavedValueForKey = (key: string | null): string | undefined => {\n    if (!key) return undefined;\n    if (key === 'ideation.bigIdea') return projectState.ideation.bigIdea;\n    if (key === 'ideation.essentialQuestion') return projectState.ideation.essentialQuestion;\n    if (key === 'ideation.challenge') return projectState.ideation.challenge;\n    const cd = getCaptured();\n    return cd[key];\n  };\n\n  const getNextLabel = (): string | undefined => {\n    switch (projectState.stage) {\n      case 'BIG_IDEA':\n        return projectState.ideation.bigIdeaConfirmed ? 'Essential Question' : 'Confirm Big Idea';\n      case 'ESSENTIAL_QUESTION':\n        return projectState.ideation.essentialQuestionConfirmed ? 'Challenge' : 'Confirm Essential Question';\n      case 'CHALLENGE':\n        return projectState.ideation.challengeConfirmed ? 'Learning Journey' : 'Confirm Challenge';\n      case 'JOURNEY':\n        return isJourneyComplete() ? 'Deliverables' : 'Continue Journey';\n      case 'DELIVERABLES':\n        return isDeliverablesComplete() ? 'Export' : 'Finalize Deliverables';\n      default:\n        return undefined;\n    }\n  };\n\n  const openJourneyPhase = (phase: 'analyze'|'brainstorm'|'prototype'|'evaluate') => {\n    const t = ('journey.' + phase + '.goal') as const;\n    setProjectState(prev => ({ ...prev, stage: 'JOURNEY', awaitingConfirmation: { type: t, value: '' } }));\n    setSuggestions(getMicrostepSuggestions(t).map((v, i) => ({ id: 'js-open-' + i, text: v })) as any);\n    setShowSuggestions(true);\n    showInfoToast('Editing ' + phase);\n  };\n\n  const openDeliverablesSection = (section: 'milestones'|'rubric'|'impact') => {\n    let t: string = 'deliverables.milestones.0';\n    if (section === 'rubric') t = 'deliverables.rubric.criteria';\n    if (section === 'impact') t = 'deliverables.impact.audience';\n    setProjectState(prev => ({ ...prev, stage: 'DELIVERABLES', awaitingConfirmation: { type: t, value: '' } }));\n    setSuggestions(getMicrostepSuggestions(t).map((v, i) => ({ id: 'ds-open-' + i, text: v })) as any);\n    setShowSuggestions(true);\n    showInfoToast('Editing ' + section);\n  };\n\n  const truncate = (s: string, n: number = 80) => (s && s.length > n ? s.slice(0, n - 1) + '…' : s);\n  \n  // Show subtle completion feedback\n  const showStageCompletionCelebration = (stageName: string) => {\n    // Minimal, professional progress feedback\n    const notification = document.createElement('div');\n    notification.className = 'fixed top-4 right-4 z-50';\n    notification.innerHTML = `\n      <div class=\"bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 text-gray-700 dark:text-gray-300 px-3 py-1.5 rounded-md shadow-sm\">\n        <div class=\"flex items-center gap-1.5\">\n          <svg class=\"w-3 h-3 text-gray-500 dark:text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n          </svg>\n          <p class=\"text-xs font-normal\">${stageName} saved</p>\n        </div>\n      </div>\n    `;\n    notification.style.opacity = '0';\n    notification.style.transform = 'translateY(-10px)';\n    document.body.appendChild(notification);\n\n    // Fade in\n    requestAnimationFrame(() => {\n      notification.style.transition = 'all 0.2s ease-out';\n      notification.style.opacity = '1';\n      notification.style.transform = 'translateY(0)';\n    });\n\n    // Remove after 2 seconds\n    setTimeout(() => {\n      notification.style.opacity = '0';\n      notification.style.transform = 'translateY(-10px)';\n      setTimeout(() => notification.remove(), 200);\n    }, 2000);\n  };\n\n  const showInfoToast = (message: string) => {\n    const el = document.createElement('div');\n    el.className = 'fixed top-4 right-4 z-50';\n    el.innerHTML = `\n      <div class=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 text-gray-800 dark:text-gray-100 px-4 py-2 rounded-lg shadow-sm\">\n        <div class=\"flex items-center gap-2\">\n          <svg class=\"w-4 h-4 text-primary-600 dark:text-primary-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M12 2a10 10 0 100 20 10 10 0 000-20z\"></path>\n          </svg>\n          <p class=\"text-sm font-medium\">${message}</p>\n        </div>\n      </div>`;\n    el.style.opacity = '0';\n    el.style.transform = 'translateX(100px)';\n    document.body.appendChild(el);\n    requestAnimationFrame(() => {\n      el.style.transition = 'all 0.25s ease-out';\n      el.style.opacity = '1';\n      el.style.transform = 'translateX(0)';\n    });\n    setTimeout(() => {\n      el.style.opacity = '0';\n      el.style.transform = 'translateX(100px)';\n      setTimeout(() => el.remove(), 250);\n    }, 2000);\n  };\n\n  // Helper function to save data to chat service capturedData format\n  const saveToBackend = (stageKey: string, value: string, stageLabel: string) => {\n    // Save in the format expected by chat-service.ts\n    let capturedPrefix = projectState.stage.toLowerCase();\n    if (['bigIdea', 'essentialQuestion', 'challenge'].includes(stageKey)) {\n      capturedPrefix = 'ideation';\n    } else if (stageKey === 'phases' || stageKey === 'supports' || stageKey === 'activities' || stageKey === 'resources') {\n      capturedPrefix = 'journey';\n    } else if (\n      stageKey.startsWith('milestones') ||\n      stageKey.startsWith('rubric') ||\n      stageKey.startsWith('deliverables') ||\n      stageKey.startsWith('impact') ||\n      stageKey.startsWith('artifacts') ||\n      stageKey.startsWith('checkpoints')\n    ) {\n      capturedPrefix = 'deliverables';\n    }\n\n    const capturedDataKey = `${capturedPrefix}.${stageKey}`;\n\n    const payload: Record<string, unknown> = {\n      [capturedDataKey]: value,\n      value,\n      stage: projectState.stage,\n      stageLabel\n    };\n\n    const projectPatch: Partial<ProjectV3> & Record<string, unknown> = {};\n    const existingProject = getCurrentProjectSnapshot();\n\n    if (stageKey === 'bigIdea' && typeof value === 'string' && value.trim()) {\n      const base = localProjectSnapshot?.bigIdea ?? { text: '', tier: 'core' as const, confidence: 0.85 };\n      projectPatch.bigIdea = {\n        ...base,\n        text: value\n      };\n    }\n\n    if (stageKey === 'essentialQuestion' && typeof value === 'string' && value.trim()) {\n      const base = localProjectSnapshot?.essentialQuestion ?? { text: '', tier: 'core' as const, confidence: 0.85 };\n      projectPatch.essentialQuestion = {\n        ...base,\n        text: value\n      };\n    }\n\n    if (stageKey === 'challenge' && typeof value === 'string' && value.trim()) {\n      const base = (localProjectSnapshot as any)?.challenge ?? { text: '', tier: 'core' as const, confidence: 0.75 };\n      (projectPatch as any).challenge = {\n        ...base,\n        text: value\n      };\n    }\n\n    if (stageKey === 'phases' && typeof value === 'string' && value.trim()) {\n      const entries = parseListFromText(value);\n      const basePhases = existingProject?.phases ?? [];\n      const phases: Phase[] = entries.length\n        ? entries.map((entry, index) => {\n            const base = basePhases[index];\n            const [namePart, ...rest] = entry.split(/[:–-]\\s*/);\n            const name = (namePart || entry).trim() || `Phase ${index + 1}`;\n            const description = rest.length ? rest.join(': ').trim() : base?.description || '';\n            return {\n              id: base?.id ?? generateRuntimeId('phase'),\n              name,\n              description,\n              duration: base?.duration || '',\n              goals: base?.goals ?? [],\n              activities: base?.activities ?? []\n            } satisfies Phase;\n          })\n        : basePhases;\n      projectPatch.phases = phases;\n    }\n\n    if (stageKey.startsWith('milestones') && typeof value === 'string' && value.trim()) {\n      const index = Number.parseInt(stageKey.split('.')[1] ?? '0', 10);\n      const baseMilestones = existingProject?.milestones ?? [];\n      const updatedMilestones: Milestone[] = [...baseMilestones];\n      const targetPhase = existingProject?.phases?.[Math.min(index, Math.max(0, (existingProject?.phases?.length ?? 1) - 1))];\n      const existingMilestone = baseMilestones[index];\n      const trimmedValue = value.trim();\n      const [namePart, ...rest] = trimmedValue.split(/[:–\\-]\\s*/);\n      const name = (namePart || trimmedValue).trim();\n      const description = rest.length ? rest.join(': ').trim() || trimmedValue : trimmedValue;\n      updatedMilestones[index] = {\n        id: existingMilestone?.id ?? generateRuntimeId('milestone'),\n        phaseId: existingMilestone?.phaseId ?? targetPhase?.id ?? 'unassigned',\n        name,\n        description,\n        due: existingMilestone?.due,\n        owner: existingMilestone?.owner ?? 'student',\n        evidence: existingMilestone?.evidence ?? []\n      };\n      projectPatch.milestones = updatedMilestones;\n\n      const deliverableSummary = (projectPatch as any).deliverables || (existingProject as any)?.deliverables || {};\n      (projectPatch as any).deliverables = {\n        ...deliverableSummary,\n        milestones: updatedMilestones.map(milestone => ({\n          id: milestone.id,\n          title: milestone.name,\n          description: milestone.description,\n          phaseId: milestone.phaseId\n        }))\n      };\n    }\n\n    if (stageKey === 'supports' && typeof value === 'string' && value.trim()) {\n      const entries = parseListFromText(value);\n      const scaffoldEntries = entries.length ? entries : [value.trim()];\n      const baseScaffolds = existingProject?.scaffolds ?? [];\n      const scaffolds: Scaffold[] = scaffoldEntries.map((entry, index) => {\n        const [titlePart, ...rest] = entry.split(/[:–\\-]\\s*/);\n        const name = (titlePart || entry).trim() || `Support ${index + 1}`;\n        const description = rest.length ? rest.join(': ').trim() || entry : entry;\n        const base = baseScaffolds[index];\n        return {\n          id: base?.id ?? generateRuntimeId('scaffold'),\n          name,\n          description,\n          templateLink: base?.templateLink\n        } satisfies Scaffold;\n      });\n      projectPatch.scaffolds = scaffolds;\n    }\n\n    if (stageKey === 'checkpoints' && typeof value === 'string' && value.trim()) {\n      const entries = parseListFromText(value);\n      const checkpointEntries = entries.length ? entries : [value.trim()];\n      const basePlan = existingProject?.evidencePlan;\n      const baseCheckpoints = basePlan?.checkpoints ?? [];\n      const referenceMilestones = (projectPatch.milestones as Milestone[] | undefined) ?? existingProject?.milestones ?? [];\n\n      const checkpoints: Checkpoint[] = checkpointEntries.map((entry, index) => {\n        const base = baseCheckpoints[index];\n        const [typePart, ...rest] = entry.split(/[:–]\\s*/);\n        const type = (typePart || entry).trim();\n        const notes = rest.length ? rest.join(': ').trim() : base?.notes;\n        return {\n          id: base?.id ?? generateRuntimeId('checkpoint'),\n          milestoneId: base?.milestoneId ?? referenceMilestones[index]?.id ?? 'unassigned',\n          type,\n          evidence: base?.evidence ?? [],\n          notes\n        } satisfies Checkpoint;\n      });\n\n      const updatedPlan = {\n        checkpoints,\n        permissions: basePlan?.permissions ?? [],\n        storage: basePlan?.storage ?? '',\n        dataManagement: basePlan?.dataManagement,\n        tier: basePlan?.tier ?? 'core',\n        confidence: basePlan?.confidence ?? 0.75\n      };\n\n      projectPatch.evidencePlan = updatedPlan;\n    }\n\n    if ((stageKey === 'impact.audience' || stageKey === 'impact.method') && typeof value === 'string' && value.trim()) {\n      const baseExhibition = existingProject?.exhibition ?? {\n        format: '',\n        audience: [] as string[],\n        date: existingProject?.metadata?.updated,\n        location: existingProject?.context?.space || existingProject?.context?.location || '',\n        preparation: [] as string[],\n        tier: 'aspirational' as const,\n        confidence: 0.6\n      };\n\n      const updatedExhibition = {\n        ...baseExhibition,\n        audience: stageKey === 'impact.audience' ? parseListFromText(value) : baseExhibition.audience,\n        format: stageKey === 'impact.method' ? value.trim() : baseExhibition.format\n      };\n\n      projectPatch.exhibition = updatedExhibition;\n\n      const deliverableImpact = (projectPatch as any).deliverables || (existingProject as any)?.deliverables || {};\n      (projectPatch as any).deliverables = {\n        ...deliverableImpact,\n        impact: {\n          audience: updatedExhibition.audience.join(', '),\n          method: updatedExhibition.format\n        }\n      };\n    }\n\n    if (Object.keys(projectPatch).length > 0) {\n      applyProjectPatch(projectPatch as Partial<ProjectV3>);\n      payload.projectData = projectPatch as Partial<ProjectV3>;\n    }\n\n    // Try to save to backend with Firebase permissions error handling\n    try {\n      onStageComplete?.(stageKey, payload);\n      console.log('[Data Save] Saved to backend:', {\n        key: capturedDataKey,\n        value: value,\n        stageLabel: stageLabel\n      });\n    } catch (error: any) {\n      console.error('[Data Save] Failed to save to backend:', error);\n\n      // Handle Firebase permissions specifically\n      if (error?.code === 'permission-denied' || error?.message?.includes('permission')) {\n        console.warn('[Data Save] Firebase permissions issue, continuing with local save only');\n        showInfoToast(`${stageLabel} saved locally. Check your connection and permissions.`);\n      } else if (error?.code === 'unauthenticated') {\n        console.warn('[Data Save] Authentication required for cloud sync, continuing with local save only');\n        showInfoToast(`${stageLabel} saved locally. Sign in to enable cloud sync.`);\n      } else {\n        console.error('[Data Save] Unexpected save error:', error);\n        showInfoToast(`${stageLabel} saved locally (sync issue).`);\n      }\n    }\n\n    // Mark recap line as just-saved for inline feedback\n    try {\n      let recapKey = '';\n      if (capturedPrefix === 'journey') {\n        recapKey = stageKey.includes('.') ? `journey.${stageKey}` : `journey.${stageKey}`;\n      } else if (capturedPrefix === 'deliverables') {\n        const deliverableSection = stageKey.split('.')[0];\n        recapKey = `deliverables.${deliverableSection}`;\n      } else if (capturedPrefix === 'ideation') {\n        recapKey = `ideation.${stageKey}`;\n      }\n      if (recapKey) {\n        setLastSavedKey(recapKey);\n        setTimeout(() => setLastSavedKey(null), 1500);\n      }\n    } catch {}\n  };\n\n  const handleAcceptIdeation = (section: 'bigIdea' | 'essentialQuestion' | 'challenge') => {\n    const config = {\n      bigIdea: { label: 'Big Idea', stageKey: 'bigIdea', confirmKey: 'bigIdeaConfirmed' as const },\n      essentialQuestion: { label: 'Essential Question', stageKey: 'essentialQuestion', confirmKey: 'essentialQuestionConfirmed' as const },\n      challenge: { label: 'Challenge', stageKey: 'challenge', confirmKey: 'challengeConfirmed' as const }\n    }[section];\n\n    const currentValue = (projectState.ideation as Record<string, string>)[section] || '';\n    if (!currentValue.trim()) {\n      showInfoToast(`Add a ${config.label.toLowerCase()} before accepting.`);\n      return;\n    }\n\n    clearAskALFTray();\n    saveToBackend(config.stageKey, currentValue, config.label);\n    setProjectState(prev => ({\n      ...prev,\n      ideation: {\n        ...prev.ideation,\n        [section]: currentValue,\n        [config.confirmKey]: true\n      }\n    }));\n    showInfoToast(`${config.label} saved to your draft.`);\n  };\n\n  const handleRefineIdeation = (section: 'bigIdea' | 'essentialQuestion' | 'challenge') => {\n    const config = {\n      bigIdea: { label: 'Big Idea', stage: 'BIG_IDEA' as ProjectState['stage'], hint: 'idea' },\n      essentialQuestion: { label: 'Essential Question', stage: 'ESSENTIAL_QUESTION' as ProjectState['stage'], hint: 'question' },\n      challenge: { label: 'Challenge', stage: 'CHALLENGE' as ProjectState['stage'], hint: 'challenge' }\n    }[section];\n\n    const currentValue = (projectState.ideation as Record<string, string>)[section] || '';\n    clearAskALFTray();\n    triggerAskALF(config.stage, config.hint);\n    const prompt = currentValue\n      ? `Let's refine the ${config.label.toLowerCase()}. Current draft: \"${currentValue}\". Make it sharper and more student-facing.`\n      : `Let's craft a compelling ${config.label.toLowerCase()} from scratch.`;\n    setInput(prompt);\n    window.requestAnimationFrame(() => {\n      const textarea = document.querySelector('textarea') as HTMLTextAreaElement | null;\n      textarea?.focus();\n    });\n  };\n\n  const handleReplaceIdeation = (section: 'bigIdea' | 'essentialQuestion' | 'challenge') => {\n    const config = {\n      bigIdea: { stage: 'BIG_IDEA' as ProjectState['stage'], hint: 'idea', confirmKey: 'bigIdeaConfirmed' as const },\n      essentialQuestion: { stage: 'ESSENTIAL_QUESTION' as ProjectState['stage'], hint: 'question', confirmKey: 'essentialQuestionConfirmed' as const },\n      challenge: { stage: 'CHALLENGE' as ProjectState['stage'], hint: 'challenge', confirmKey: 'challengeConfirmed' as const }\n    }[section];\n\n    clearAskALFTray();\n    triggerAskALF(config.stage, config.hint);\n    setProjectState(prev => ({\n      ...prev,\n      ideation: {\n        ...prev.ideation,\n        [section]: '',\n        [config.confirmKey]: false\n      }\n    }));\n    setInput('');\n    showInfoToast(`Cleared the ${section === 'bigIdea' ? 'big idea' : section === 'essentialQuestion' ? 'essential question' : 'challenge'} for a fresh brainstorm.`);\n  };\n\n  const handleAcceptJourney = () => {\n    const snapshot = getCurrentProjectSnapshot();\n    const phases = snapshot?.phases ?? [];\n    if (!phases.length) {\n      showInfoToast('Add some journey details before accepting.');\n      return;\n    }\n    const summary = phases\n      .map(phase => `${phase.name || 'Phase'}: ${phase.description || phase.goals?.[0] || ''}`.trim())\n      .filter(Boolean)\n      .join('\\n');\n    clearAskALFTray();\n    saveToBackend('phases', summary, 'Learning Journey');\n    showInfoToast('Learning journey saved to your draft.');\n  };\n\n  const handleRefineJourney = () => {\n    const snapshot = getCurrentProjectSnapshot();\n    const phases = snapshot?.phases ?? [];\n    const summary = phases\n      .map(phase => `${phase.name || 'Phase'} → ${phase.description || phase.goals?.[0] || ''}`.trim())\n      .filter(Boolean)\n      .join('\\n');\n    clearAskALFTray();\n    triggerAskALF('JOURNEY', 'phases');\n    const prompt = summary\n      ? `Let's refine the learning journey. Here is the current outline:\\n${summary}\\nFocus on clarifying purpose, student experience, and timing.`\n      : 'Help me design a learning journey aligned to our big idea and challenge.';\n    setInput(prompt);\n    window.requestAnimationFrame(() => {\n      const textarea = document.querySelector('textarea') as HTMLTextAreaElement | null;\n      textarea?.focus();\n    });\n  };\n\n  const handleReplaceJourney = () => {\n    clearAskALFTray();\n    const firstType = 'journey.analyze.goal';\n    setProjectState(prev => ({ ...prev, stage: 'JOURNEY', awaitingConfirmation: { type: firstType, value: '' } }));\n    setSuggestions(getMicrostepSuggestions(firstType).map((t, i) => ({ id: `js-reset-${i}`, text: t })) as any);\n    setShowSuggestions(true);\n    showInfoToast('Starting a fresh learning journey plan.');\n  };\n\n  const handleAcceptDeliverables = () => {\n    const snapshot = getCurrentProjectSnapshot();\n    const milestones = snapshot?.milestones ?? [];\n    if (milestones.length === 0) {\n      showInfoToast('Add milestones before accepting deliverables.');\n    }\n    clearAskALFTray();\n    milestones.forEach((milestone, index) => {\n      const text = milestone.description || milestone.name;\n      if (text) {\n        saveToBackend(`milestones.${index}`, text, 'Deliverables');\n      }\n    });\n    const audience = snapshot?.exhibition?.audience?.join(', ');\n    const method = snapshot?.exhibition?.format;\n    if (audience) {\n      saveToBackend('impact.audience', audience, 'Deliverables Impact');\n    }\n    if (method) {\n      saveToBackend('impact.method', method, 'Deliverables Impact');\n    }\n    showInfoToast('Deliverables saved to your draft.');\n  };\n\n  const handleRefineDeliverables = () => {\n    clearAskALFTray();\n    triggerAskALF('DELIVERABLES', 'deliverables');\n    const summary = getDeliverablesSummary();\n    const prompt = summary\n      ? `Let's refine the deliverables plan. Current summary:\\n${summary}\\nSuggest improvements for authenticity and assessment.`\n      : 'Help me craft milestones, rubric criteria, and an impact plan for this project.';\n    setInput(prompt);\n    window.requestAnimationFrame(() => {\n      const textarea = document.querySelector('textarea') as HTMLTextAreaElement | null;\n      textarea?.focus();\n    });\n  };\n\n  const handleReplaceDeliverables = () => {\n    clearAskALFTray();\n    const t = 'deliverables.milestones.0';\n    setProjectState(prev => ({ ...prev, stage: 'DELIVERABLES', awaitingConfirmation: { type: t, value: '' } }));\n    setSuggestions(getMicrostepSuggestions(t).map((v, i) => ({ id: `ds-reset-${i}`, text: v })) as any);\n    setShowSuggestions(true);\n    showInfoToast('Cleared deliverables — ready for a fresh plan.');\n  };\n\n  // Journey micro-steps orchestration (deterministic)\n  const journeyPhases = ['analyze', 'brainstorm', 'prototype', 'evaluate'] as const;\n  const journeySubsteps = ['goal', 'activity', 'output', 'duration'] as const;\n\n  const isJourneySubAwaiting = () => {\n    const t = projectState.awaitingConfirmation?.type || '';\n    const parts = t.split('.');\n    return t.startsWith('journey.') && parts.length === 3 && journeyPhases.includes(parts[1] as any) && journeySubsteps.includes(parts[2] as any);\n  };\n\n  const nextJourneyAwaitingType = (currentType: string): string | null => {\n    const [, phase, sub] = currentType.split('.');\n    const subIdx = journeySubsteps.indexOf(sub as any);\n    if (subIdx < journeySubsteps.length - 1) {\n      return `journey.${phase}.${journeySubsteps[subIdx + 1]}`;\n    }\n    // move to next phase\n    const phaseIdx = journeyPhases.indexOf(phase as any);\n    if (phaseIdx < journeyPhases.length - 1) {\n      return `journey.${journeyPhases[phaseIdx + 1]}.goal`;\n    }\n    return null;\n  };\n\n  const promptForJourneyAwaiting = (type: string) => {\n    if (type === 'journey.supports') {\n      const wizard = getWizardData();\n      const baseCtx = `${wizard.subjects?.join(', ') || projectState.context.subject || 'your subject'} • ${wizard.gradeLevel || projectState.context.gradeLevel || 'your students'}`;\n      return `Roles & Scaffolds (${baseCtx}).\\nDescribe student roles (e.g., researcher/designer), differentiation/UDL supports, and teacher scaffolds (templates, sentence frames, checklists).`;\n    }\n    const [, phase, sub] = type.split('.');\n    const wizard = getWizardData();\n    const baseCtx = `${wizard.subjects?.join(', ') || projectState.context.subject || 'your subject'} • ${wizard.gradeLevel || projectState.context.gradeLevel || 'your students'}`;\n    const phaseTitle: Record<string, string> = { analyze: 'Analyze', brainstorm: 'Brainstorm', prototype: 'Prototype', evaluate: 'Evaluate' };\n    const subLabel: Record<string, string> = {\n      goal: `What should students learn or accomplish in the ${phaseTitle[phase]} phase?`,\n      activity: `Describe one activity/method you want students to do in ${phaseTitle[phase]}.`,\n      output: `What will students produce as evidence in ${phaseTitle[phase]}?`,\n      duration: `About how long will ${phaseTitle[phase]} take (e.g., 1–2 lessons)?`\n    };\n    return `Let’s plan your Learning Journey (${baseCtx}).\\n${subLabel[sub]}`;\n  };\n\n  const getMicrostepSuggestions = (type: string): string[] => {\n    const [, phase, sub] = type.split('.');\n    const band = (projectState.context.gradeLevel || getWizardData().gradeLevel || '').toLowerCase();\n    const elem = band.includes('elementary');\n    if (type.startsWith('journey.')) {\n      if (sub === 'goal') {\n        return elem\n          ? ['Learn key ideas', 'Ask good questions', 'Understand the problem']\n          : ['Clarify the problem', 'Identify learning goals', 'Define success indicators'];\n      }\n      if (sub === 'activity') {\n        return elem\n          ? ['Interview a helper', 'Observe and take notes', 'Read and discuss']\n          : ['Stakeholder interviews', 'Data/Document analysis', 'Field observation'];\n      }\n      if (sub === 'output') {\n        return elem\n          ? ['Short poster', 'Sketch/model', 'Journal entry']\n          : ['Research memo', 'Annotated sources', 'Interview summary'];\n      }\n      if (sub === 'duration') {\n        return ['1–2 lessons', '3–4 lessons', 'About a week'];\n      }\n    }\n    if (type.startsWith('deliverables.milestones')) {\n      return ['Research summary', 'Prototype review', 'Final showcase'];\n    }\n    if (type === 'deliverables.rubric.criteria') {\n      return ['Understanding, Process, Product', 'Insight, Rigor, Impact', 'Research, Design, Communication'];\n    }\n    if (type === 'deliverables.impact.audience') {\n      return ['Peers and families', 'Community stakeholders', 'School leadership'];\n    }\n    if (type === 'deliverables.impact.method') {\n      return ['Public exhibition', 'Stakeholder briefing', 'Digital publication'];\n    }\n    if (type === 'deliverables.artifacts') {\n      return ['Infographic brief', 'Prototype demo', 'Policy proposal'];\n    }\n    if (type.startsWith('deliverables.checkpoints')) {\n      return ['Kickoff check-in', 'Midpoint review', 'Final rehearsal'];\n    }\n    return [];\n  };\n\n  // Accept & Continue helper – accelerates micro-steps and confirmations\n  // Defined after handleSend below to avoid TDZ issues\n\n  const backOneStep = useCallback(() => {\n    const awaiting = projectState.awaitingConfirmation?.type || '';\n    if (!awaiting) return;\n\n    if (awaiting === 'journey') {\n      const previous = 'journey.evaluate.duration';\n      // Clear previous value so user can re-enter\n      saveToBackend(previous.replace('journey.', ''), '', 'Learning Journey');\n      setProjectState(prev => ({ ...prev, awaitingConfirmation: { type: previous, value: '' } }));\n      setSuggestions(getMicrostepSuggestions(previous).map((t, i) => ({ id: `js-prev-${i}`, text: t })) as any);\n      setShowSuggestions(true);\n      const prompt = promptForJourneyAwaiting(previous);\n      setMessages(prev => [...prev, { id: String(Date.now() + 25), role: 'assistant', content: prompt, timestamp: new Date(), metadata: { stage: 'JOURNEY' } }]);\n      showInfoToast('Previous step cleared');\n      return;\n    }\n    if (awaiting === 'deliverables') {\n      const previous = 'deliverables.impact.method';\n      saveToBackend(previous.replace('deliverables.', ''), '', 'Deliverables');\n      setProjectState(prev => ({ ...prev, awaitingConfirmation: { type: previous, value: '' } }));\n      setSuggestions(getMicrostepSuggestions(previous).map((t, i) => ({ id: `ds-prev-${i}`, text: t })) as any);\n      setShowSuggestions(true);\n      const prompt = promptForDeliverablesAwaiting(previous);\n      setMessages(prev => [...prev, { id: String(Date.now() + 26), role: 'assistant', content: prompt, timestamp: new Date(), metadata: { stage: 'DELIVERABLES' } }]);\n      showInfoToast('Previous step cleared');\n      return;\n    }\n    if (awaiting.startsWith('journey.')) {\n      const previous = prevJourneyAwaitingType(awaiting);\n      if (previous) {\n        saveToBackend(previous.replace('journey.', ''), '', 'Learning Journey');\n        setProjectState(prev => ({ ...prev, awaitingConfirmation: { type: previous, value: '' } }));\n        setSuggestions(getMicrostepSuggestions(previous).map((t, i) => ({ id: `js-prev-${i}`, text: t })) as any);\n        setShowSuggestions(true);\n        const prompt = promptForJourneyAwaiting(previous);\n        setMessages(prev => [...prev, { id: String(Date.now() + 27), role: 'assistant', content: prompt, timestamp: new Date(), metadata: { stage: 'JOURNEY' } }]);\n        showInfoToast('Previous step cleared');\n      }\n      return;\n    }\n    if (awaiting.startsWith('deliverables.')) {\n      const previous = prevDeliverablesAwaitingType(awaiting);\n      if (previous) {\n        saveToBackend(previous.replace('deliverables.', ''), '', 'Deliverables');\n        setProjectState(prev => ({ ...prev, awaitingConfirmation: { type: previous, value: '' } }));\n        setSuggestions(getMicrostepSuggestions(previous).map((t, i) => ({ id: `ds-prev-${i}`, text: t })) as any);\n        setShowSuggestions(true);\n        const prompt = promptForDeliverablesAwaiting(previous);\n        setMessages(prev => [...prev, { id: String(Date.now() + 28), role: 'assistant', content: prompt, timestamp: new Date(), metadata: { stage: 'DELIVERABLES' } }]);\n        showInfoToast('Previous step cleared');\n      }\n    }\n  }, [projectState.awaitingConfirmation]);\n\n  // Deliverables micro-steps orchestration (deterministic)\n  const deliverablesSequence = [\n    'deliverables.milestones.0',\n    'deliverables.milestones.1',\n    'deliverables.milestones.2',\n    'deliverables.rubric.criteria',\n    'deliverables.impact.audience',\n    'deliverables.impact.method'\n  ] as const;\n\n  const isDeliverablesSubAwaiting = () => {\n    const t = projectState.awaitingConfirmation?.type || '';\n    return deliverablesSequence.includes(t as any);\n  };\n\n  const nextDeliverablesAwaitingType = (currentType: string): string | null => {\n    const idx = deliverablesSequence.indexOf(currentType as any);\n    if (idx >= 0 && idx < deliverablesSequence.length - 1) {\n      return deliverablesSequence[idx + 1];\n    }\n    return null;\n  };\n\n  const promptForDeliverablesAwaiting = (type: string) => {\n    const wizard = getWizardData();\n    const baseCtx = `${wizard.subjects?.join(', ') || projectState.context.subject || 'your subject'} • ${wizard.gradeLevel || projectState.context.gradeLevel || 'your students'}`;\n    if (type.startsWith('deliverables.milestones')) {\n      const n = type.endsWith('.0') ? 'first' : type.endsWith('.1') ? 'second' : 'third';\n      return `Let's define project milestones (${baseCtx}).\\nWhat should be the ${n} key checkpoint (e.g., research summary, prototype review, final showcase)?`;\n    }\n    if (type === 'deliverables.rubric.criteria') {\n      return `Now the rubric (${baseCtx}).\\nList 3–4 criteria we will assess (e.g., understanding, process, product, impact).`;\n    }\n    if (type === 'deliverables.impact.audience') {\n      return `Impact plan (${baseCtx}).\\nWho is the authentic audience (e.g., peers, families, community partners, stakeholders)?`;\n    }\n    if (type === 'deliverables.impact.method') {\n      return `And how will students share their work (e.g., exhibition, briefing, publication, demo)?`;\n    }\n    if (type === 'deliverables.artifacts') {\n      return `Artifacts/Deliverables (${baseCtx}).\\nList 1–3 student-facing outputs with a short description. Optionally reference a milestone number (e.g., \"Infographic (Milestone 2)\").`;\n    }\n    if (type.startsWith('deliverables.checkpoints')) {\n      return `Checkpoints & Evidence (${baseCtx}).\\nDescribe one formative checkpoint (name + due). Include what evidence to capture, where it lives (Drive/LMS), and who owns it (student/team/teacher).`;\n    }\n    return 'Tell me more about your deliverables.';\n  };\n\n  const prevJourneyAwaitingType = (currentType: string): string | null => {\n    const [, phase, sub] = currentType.split('.');\n    const subIdx = journeySubsteps.indexOf(sub as any);\n    if (subIdx > 0) return `journey.${phase}.${journeySubsteps[subIdx - 1]}`;\n    const phaseIdx = journeyPhases.indexOf(phase as any);\n    if (phaseIdx > 0) return `journey.${journeyPhases[phaseIdx - 1]}.duration`;\n    return null;\n  };\n\n  const prevDeliverablesAwaitingType = (currentType: string): string | null => {\n    const deliverablesSequence = [\n      'deliverables.milestones.0',\n      'deliverables.milestones.1',\n      'deliverables.milestones.2',\n      'deliverables.rubric.criteria',\n      'deliverables.impact.audience',\n      'deliverables.impact.method'\n    ];\n    const idx = deliverablesSequence.indexOf(currentType);\n    if (idx > 0) return deliverablesSequence[idx - 1];\n    return null;\n  };\n\n  // Helper function to detect if input is conversational/greeting rather than substantive\n  const isConversationalInput = (input: string): boolean => {\n    const conversationalPatterns = [\n      // Greetings\n      'hi', 'hello', 'hey', 'good morning', 'good afternoon', 'good evening',\n      // Polite responses\n      'please', 'thank you', 'thanks', 'you\\'re welcome', 'no problem',\n      // Acknowledgments\n      'ok', 'okay', 'alright', 'sure', 'yes', 'yeah', 'yep', 'no', 'nope',\n      // Filler words/phrases\n      'um', 'uh', 'well', 'so', 'like', 'you know', 'i mean',\n      // Single word responses\n      'cool', 'nice', 'great', 'awesome', 'perfect', 'right', 'correct',\n      // Questions about the system\n      'what should i do', 'what do you need', 'what\\'s next', 'how does this work'\n    ];\n\n    const normalizedInput = input.toLowerCase().trim();\n\n    // Check for exact matches or if input starts/ends with these patterns\n    return conversationalPatterns.some(pattern =>\n      normalizedInput === pattern ||\n      normalizedInput.startsWith(pattern + ' ') ||\n      normalizedInput.endsWith(' ' + pattern) ||\n      normalizedInput.includes(' ' + pattern + ' ')\n    );\n  };\n\n  // Improved stage transition with natural progression and quality validation\n  const detectStageTransition = (userInput: string, aiResponse: string) => {\n    const input = userInput.toLowerCase();\n    \n    // Track message count in current stage\n    setProjectState(prev => ({\n      ...prev,\n      messageCountInStage: prev.messageCountInStage + 1\n    }));\n    \n    // Delegated deterministic flow via orchestrator first\n    try {\n      const plan = FlowOrchestrator.detect({\n        stage: projectState.stage as any,\n        messageCountInStage: projectState.messageCountInStage,\n        awaitingConfirmation: projectState.awaitingConfirmation as any,\n        ideation: projectState.ideation\n      }, userInput);\n\n      if (plan.type === 'clearAwaiting') {\n        setProjectState(prev => ({ ...prev, awaitingConfirmation: undefined }));\n        return;\n      }\n\n      if ((plan.type === 'awaitConfirmation' || plan.type === 'proposeMinimal') && plan.awaiting) {\n        setProjectState(prev => ({ ...prev, awaitingConfirmation: plan.awaiting }));\n        return;\n      }\n\n      if (plan.type === 'commitAndAdvance') {\n        if (plan.celebrateLabel) showStageCompletionCelebration(plan.celebrateLabel);\n        if (plan.save) saveToBackend(plan.save.stageKey, plan.save.value, plan.save.label);\n        showInfoToast('Saved and advanced');\n        setProjectState(prev => ({\n          ...prev,\n          stage: (plan.nextStage || prev.stage) as any,\n          messageCountInStage: 0,\n          awaitingConfirmation: undefined,\n          ideation: {\n            ...prev.ideation,\n            bigIdea: plan.save?.stageKey === 'bigIdea' ? (plan.save.value || prev.ideation.bigIdea) : prev.ideation.bigIdea,\n            bigIdeaConfirmed: plan.save?.stageKey === 'bigIdea' ? true : prev.ideation.bigIdeaConfirmed,\n            essentialQuestion: plan.save?.stageKey === 'essentialQuestion' ? (plan.save.value || prev.ideation.essentialQuestion) : prev.ideation.essentialQuestion,\n            essentialQuestionConfirmed: plan.save?.stageKey === 'essentialQuestion' ? true : prev.ideation.essentialQuestionConfirmed,\n            challenge: plan.save?.stageKey === 'challenge' ? (plan.save.value || prev.ideation.challenge) : prev.ideation.challenge,\n            challengeConfirmed: plan.save?.stageKey === 'challenge' ? true : prev.ideation.challengeConfirmed,\n          }\n        }));\n        return;\n      }\n    } catch (e) {\n      // Fall back to in-component logic below\n    }\n    \n    // Detect confusion patterns (from guide section 4)\n    const confusionPatterns = [\n      'not sure', 'don\\'t understand', 'confused', 'what do you mean',\n      'can you explain', 'help me', 'i don\\'t know', 'unclear', 'lost'\n    ];\n    const seemsConfused = confusionPatterns.some(pattern => input.includes(pattern));\n    \n    // Look for explicit progression signals (from guide section 5)\n    const progressionSignals = [\n      'sounds good', 'let\\'s continue', 'what\\'s next', 'next step',\n      'i\\'m ready', 'that works', 'perfect', 'great', 'yes, let\\'s',\n      'let\\'s move on', 'i like that', 'that\\'s it', 'exactly'\n    ];\n    const wantsToProgress = progressionSignals.some(signal => input.includes(signal));\n    \n    // Don't progress if user is confused\n    if (seemsConfused) {\n      console.log('[Stage Transition] User seems confused, providing support');\n      // Stay in current stage but increase support\n      return;\n    }\n    \n    // Note: We now start directly in BIG_IDEA stage after wizard completion\n    // No need for GROUNDING -> BIG_IDEA transition\n    \n    // BIG_IDEA -> ESSENTIAL_QUESTION (simplified progression)\n    if (projectState.stage === 'BIG_IDEA') {\n      // Check if we're confirming a previous input\n      if (projectState.awaitingConfirmation?.type === 'bigIdea') {\n        if (checkForProgressSignal(userInput)) {\n          // User confirmed - proceed\n          const bigIdea = projectState.awaitingConfirmation.value;\n          console.log('[Stage Transition] BIG_IDEA -> ESSENTIAL_QUESTION (confirmed)', { bigIdea });\n          showStageCompletionCelebration('Big Idea');\n          \n          // Save to backend FIRST\n          saveToBackend('bigIdea', bigIdea, 'Big Idea');\n          \n          setProjectState(prev => ({\n            ...prev,\n            ideation: { ...prev.ideation, bigIdea, bigIdeaConfirmed: true },\n            stage: 'ESSENTIAL_QUESTION',\n            messageCountInStage: 0,\n            awaitingConfirmation: undefined\n          }));\n          \n          return;\n        } else if (checkForRefinementSignal(userInput)) {\n          // User wants to refine - clear confirmation state\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: undefined\n          }));\n          return;\n        } else {\n          // User provided new input instead of confirming - treat as refined Big Idea\n          const hasSubstance = userInput.trim().length > 5;\n          if (hasSubstance) {\n            console.log('[Stage Transition] User refined Big Idea, auto-progressing');\n            showStageCompletionCelebration('Big Idea');\n            \n            // Save to backend FIRST\n            saveToBackend('bigIdea', userInput, 'Big Idea');\n            \n            setProjectState(prev => ({\n              ...prev,\n              ideation: { ...prev.ideation, bigIdea: userInput, bigIdeaConfirmed: true },\n              stage: 'ESSENTIAL_QUESTION',\n              messageCountInStage: 0,\n              awaitingConfirmation: undefined\n            }));\n            \n            return;\n          }\n        }\n      }\n      \n      // ENHANCED: Only capture actual big ideas with semantic validation\n      const hasMinimumLength = userInput.trim().length >= 15; // Require more substantial input\n      const forceAccept = projectState.messageCountInStage >= 5; // Increase threshold before force-accepting\n\n      // EXPANDED clarification/conversation patterns - be more restrictive\n      const clarificationPatterns = [\n        'what?', 'huh?', 'what do you mean', 'can you explain', 'i don\\'t understand',\n        'help', 'what', 'how', 'why', 'unclear', 'confused', 'what is', 'tell me more',\n        'i need help', 'can you help', 'not sure', 'don\\'t know', 'hmm', 'ok', 'okay',\n        'yes', 'no', 'maybe', 'sure', 'thanks', 'thank you', 'got it', 'i see',\n        'sounds good', 'makes sense', 'understood', 'right', 'correct', 'exactly',\n        'that\\'s right', 'perfect', 'great', 'awesome', 'cool', 'nice', 'good',\n        'interesting', 'wow', 'oh', 'ah', 'hmm', 'uh', 'um', 'well', 'so',\n        'actually', 'but', 'however', 'although', 'though', 'yet', 'still'\n      ];\n\n      // SEMANTIC validation - check if input looks like a concept/topic\n      const conceptualKeywords = [\n        'concept', 'idea', 'theme', 'topic', 'principle', 'theory', 'framework',\n        'system', 'process', 'method', 'approach', 'strategy', 'solution',\n        'innovation', 'design', 'development', 'creation', 'exploration',\n        'investigation', 'research', 'study', 'analysis', 'understanding'\n      ];\n\n      const hasConceptualLanguage = conceptualKeywords.some(keyword =>\n        userInput.toLowerCase().includes(keyword)\n      );\n\n      const seemsLikeClarification = clarificationPatterns.some(pattern =>\n        userInput.toLowerCase().trim() === pattern ||\n        userInput.toLowerCase().includes(pattern)\n      );\n\n      const isConversational = isConversationalInput(userInput);\n\n      // STRICT validation - must pass multiple checks\n      const isLikelyBigIdea = hasMinimumLength &&\n                            !seemsLikeClarification &&\n                            !isConversational &&\n                            (hasConceptualLanguage || userInput.includes(' ') && userInput.split(' ').length >= 3);\n\n      // Don't auto-progress unless we're confident this is a big idea\n      if (!isLikelyBigIdea && !forceAccept) {\n        console.log('[Stage Transition] Input does not meet big idea criteria:', {\n          length: userInput.trim().length,\n          hasConceptualLanguage,\n          seemsLikeClarification,\n          isConversational,\n          messageCount: projectState.messageCountInStage,\n          input: userInput.slice(0, 50) + (userInput.length > 50 ? '...' : '')\n        });\n        return;\n      }\n\n      // REQUIRE CONFIRMATION instead of auto-progressing\n      if (isLikelyBigIdea || forceAccept) {\n        console.log('[Stage Transition] Setting up big idea confirmation:', { bigIdea: userInput });\n\n        // Set up confirmation state instead of auto-progressing\n        setProjectState(prev => ({\n          ...prev,\n          awaitingConfirmation: {\n            type: 'bigIdea',\n            value: userInput\n          }\n        }));\n        return;\n      }\n    }\n    \n    // ESSENTIAL_QUESTION -> CHALLENGE (with confirmation)\n    if (projectState.stage === 'ESSENTIAL_QUESTION') {\n      // Check if we're confirming a previous input\n      if (projectState.awaitingConfirmation?.type === 'essentialQuestion') {\n        if (checkForProgressSignal(userInput)) {\n          // User confirmed - proceed\n          const essentialQuestion = projectState.awaitingConfirmation.value;\n          console.log('[Stage Transition] ESSENTIAL_QUESTION -> CHALLENGE (confirmed EQ, skipping standards since handled in wizard)', { essentialQuestion });\n          showStageCompletionCelebration('Essential Question');\n          \n          // Save to backend FIRST\n          saveToBackend('essentialQuestion', essentialQuestion, 'Essential Question');\n          \n          setProjectState(prev => ({\n            ...prev,\n            ideation: { ...prev.ideation, essentialQuestion, essentialQuestionConfirmed: true },\n            stage: 'CHALLENGE',\n            messageCountInStage: 0,\n            awaitingConfirmation: undefined\n          }));\n          \n          return;\n        } else if (checkForRefinementSignal(userInput)) {\n          // User wants to refine\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: undefined\n          }));\n          return;\n        }\n      }\n      \n      // New input - check if it's a question\n      const hasQuestion = input.includes('?') || \n                         (input.includes('how') || input.includes('why') || input.includes('what'));\n      const forceAccept = projectState.messageCountInStage >= 3;\n      \n      if (hasQuestion || forceAccept) {\n        // Set up confirmation state\n        setProjectState(prev => ({\n          ...prev,\n          awaitingConfirmation: {\n            type: 'essentialQuestion',\n            value: userInput\n          }\n        }));\n        return;\n      }\n    }\n    \n    // CHALLENGE -> JOURNEY (with confirmation)\n    if (projectState.stage === 'CHALLENGE') {\n      // Check if we're confirming a previous input\n      if (projectState.awaitingConfirmation?.type === 'challenge') {\n        if (checkForProgressSignal(userInput)) {\n          // User confirmed - proceed\n          const challenge = projectState.awaitingConfirmation.value;\n          console.log('[Stage Transition] CHALLENGE -> JOURNEY (confirmed)', { challenge });\n          showStageCompletionCelebration('Challenge Definition');\n          \n          // Save to backend FIRST\n          saveToBackend('challenge', challenge, 'Challenge Definition');\n          \n          setProjectState(prev => ({\n            ...prev,\n            ideation: { ...prev.ideation, challenge, challengeConfirmed: true },\n            stage: 'JOURNEY',\n            messageCountInStage: 0,\n            awaitingConfirmation: undefined\n          }));\n          \n          return;\n        } else if (checkForRefinementSignal(userInput)) {\n          // User wants to refine\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: undefined\n          }));\n          return;\n        }\n      }\n      \n      // New input - check if it has action\n      const hasSubstance = userInput.length > 15;\n      const forceAccept = projectState.messageCountInStage >= 3;\n      \n      if (hasSubstance || forceAccept) {\n        // Set up confirmation state\n        setProjectState(prev => ({\n          ...prev,\n          awaitingConfirmation: {\n            type: 'challenge',\n            value: userInput\n          }\n        }));\n        return;\n      }\n    }\n    \n    // JOURNEY -> DELIVERABLES (with confirmation or auto-plan)\n    if (projectState.stage === 'JOURNEY') {\n      // Check if we're confirming a previous input\n      if (projectState.awaitingConfirmation?.type === 'journey') {\n        if (checkForProgressSignal(userInput)) {\n          // User confirmed - proceed\n          const journeyPlan = projectState.awaitingConfirmation.value;\n          console.log('[Stage Transition] JOURNEY -> DELIVERABLES (confirmed)', { journeyPlan });\n          showStageCompletionCelebration('Learning Journey');\n          \n          // Save to backend FIRST\n          saveToBackend('phases', journeyPlan, 'Learning Journey Phases');\n          \n          setProjectState(prev => ({\n            ...prev,\n            stage: 'DELIVERABLES',\n            messageCountInStage: 0,\n            awaitingConfirmation: undefined\n          }));\n          \n          return;\n        } else if (checkForRefinementSignal(userInput)) {\n          // User wants to refine\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: undefined\n          }));\n          return;\n        }\n      }\n      \n      // If user signals progress without a detailed plan, propose a minimal plan for confirmation\n      if (wantsToProgress) {\n        const minimalPlan = `Analyze → Brainstorm → Prototype → Evaluate\\n- Analyze: research + stakeholder perspectives\\n- Brainstorm: generate and select ideas\\n- Prototype: build and test with users\\n- Evaluate: measure impact and refine`;\n        setProjectState(prev => ({\n          ...prev,\n          awaitingConfirmation: { type: 'journey', value: minimalPlan }\n        }));\n        return;\n      }\n\n      // Check for quality content that could be the learning journey plan\n      const journeyKeywords = ['research', 'analyze', 'brainstorm', 'prototype', 'create', 'test', 'evaluate', 'phase', 'week', 'timeline'];\n      const hasJourneyContent = journeyKeywords.some(keyword => userInput.toLowerCase().includes(keyword));\n      \n      if (hasJourneyContent && userInput.length > 50) {\n        // Save and ask for confirmation\n        setProjectState(prev => ({\n          ...prev,\n          awaitingConfirmation: {\n            type: 'journey',\n            value: userInput\n          }\n        }));\n        return;\n      }\n    }\n    \n    // DELIVERABLES -> COMPLETE (with confirmation or default summary)\n    if (projectState.stage === 'DELIVERABLES') {\n      // Check if we're confirming a previous input\n      if (projectState.awaitingConfirmation?.type === 'deliverables') {\n        if (checkForProgressSignal(userInput)) {\n          // User confirmed - proceed\n          const deliverables = projectState.awaitingConfirmation.value;\n          console.log('[Stage Transition] DELIVERABLES -> COMPLETE (confirmed)', { deliverables });\n          showStageCompletionCelebration('Project Blueprint');\n          \n          // Save to backend FIRST\n          saveToBackend('deliverables', deliverables, 'Deliverables & Assessment');\n          \n          setProjectState(prev => ({\n            ...prev,\n            stage: 'COMPLETE',\n            messageCountInStage: 0,\n            awaitingConfirmation: undefined\n          }));\n\n          // Trigger Hero Project transformation\n          if (projectId) {\n            heroProjectTransformer.transformProject(projectId, 'comprehensive')\n              .then(() => console.log('[ChatbotFirstInterfaceFixed] Hero Project transformation complete'))\n              .catch(err => console.error('[ChatbotFirstInterfaceFixed] Hero Project transformation failed:', err));\n          }\n          \n          return;\n        } else if (checkForRefinementSignal(userInput)) {\n          // User wants to refine\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: undefined\n          }));\n          return;\n        }\n      }\n\n      // If user signals ready, propose a minimal deliverables package and ask to confirm\n      if (wantsToProgress) {\n        const minimalDeliverables = `Milestones: kickoff, midpoint review, final showcase\\nRubric: understanding, process, product (3 levels)\\nImpact: share with authentic audience (e.g., community or stakeholders)`;\n        setProjectState(prev => ({\n          ...prev,\n          awaitingConfirmation: { type: 'deliverables', value: minimalDeliverables }\n        }));\n        return;\n      }\n      \n      // Check for quality content that could be deliverables\n      const deliverablesKeywords = ['presentation', 'portfolio', 'prototype', 'report', 'assessment', 'rubric', 'showcase', 'exhibition'];\n      const hasDeliverablesContent = deliverablesKeywords.some(keyword => userInput.toLowerCase().includes(keyword));\n      \n      if (hasDeliverablesContent && userInput.length > 50) {\n        // Save and ask for confirmation\n        setProjectState(prev => ({\n          ...prev,\n          awaitingConfirmation: {\n            type: 'deliverables',\n            value: userInput\n          }\n        }));\n        return;\n      }\n    }\n  };\n  \n  // Handle sending messages with REAL AI\n  const handleSend = async (textOverride?: string) => {\n    const textToSend = textOverride || input;\n    if (!textToSend.trim()) return;\n    \n    setLastInteractionTime(Date.now());\n    \n    // Add micro-interaction feedback\n    const inputElement = document.querySelector('textarea');\n    if (inputElement) {\n      inputElement.style.transform = 'scale(0.98)';\n      setTimeout(() => {\n        inputElement.style.transform = 'scale(1)';\n      }, 150);\n    }\n    \n    const userMessage: Message = {\n      id: Date.now().toString(),\n      role: 'user',\n      content: textToSend,\n      timestamp: new Date()\n    };\n    \n    setMessages(prev => [...prev, userMessage]);\n    const userInput = textToSend;\n    setInput('');\n    setIsTyping(true);\n    \n    // Check if user is asking for ideas/examples\n    const askingForIdeas = [\n      'ideas', 'examples', 'suggestions', 'options', 'help me think',\n      'not sure', 'give me', 'show me', 'what are some', 'can you suggest'\n    ].some(phrase => userInput.toLowerCase().includes(phrase));\n    \n    try {\n      // Deterministic handling for Journey micro-steps\n      if (isJourneySubAwaiting()) {\n        const awaitingType = projectState.awaitingConfirmation!.type;\n        // Save this sub-step immediately using dotted keys, e.g., analyze.goal\n        const saveKey = awaitingType.replace('journey.', '');\n        saveToBackend(saveKey, textToSend, 'Learning Journey');\n\n        // Advance to next sub-step or propose summary\n        const nextType = nextJourneyAwaitingType(awaitingType);\n        if (nextType) {\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: { type: nextType, value: '' }\n          }));\n          setSuggestions(getMicrostepSuggestions(nextType).map((t, i) => ({ id: `js-${i}`, text: t })) as any);\n          setShowSuggestions(true);\n          const prompt = promptForJourneyAwaiting(nextType);\n          const assistantMessage: Message = {\n            id: String(Date.now() + 3),\n            role: 'assistant',\n            content: prompt,\n            timestamp: new Date(),\n            metadata: { stage: 'JOURNEY' }\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n          setIsTyping(false);\n          return;\n        } else {\n          // Finished all phases → propose a compiled minimal plan for confirmation\n          const minimalPlan = `Analyze → Brainstorm → Prototype → Evaluate\\n- Analyze: research + stakeholder perspectives\\n- Brainstorm: generate and select ideas\\n- Prototype: build and test with users\\n- Evaluate: measure impact and refine`;\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: { type: 'journey', value: minimalPlan }\n          }));\n          const assistantMessage: Message = {\n            id: String(Date.now() + 4),\n            role: 'assistant',\n            content: `Great progress! Here’s a simple structure we can confirm:\\n\\n${minimalPlan}\\n\\nDoes this look good to move forward to Deliverables?`,\n            timestamp: new Date(),\n            metadata: { stage: 'JOURNEY' }\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n          setIsTyping(false);\n          return;\n        }\n      }\n\n      // Deterministic handling for Deliverables micro-steps\n      if (isDeliverablesSubAwaiting()) {\n        const awaitingType = projectState.awaitingConfirmation!.type; // e.g., deliverables.milestones.0\n        // Save to backend removing 'deliverables.' so captured key becomes 'deliverables.xxx'\n        const saveKey = awaitingType.replace('deliverables.', '');\n        saveToBackend(saveKey, textToSend, 'Deliverables');\n\n        const nextType = nextDeliverablesAwaitingType(awaitingType);\n        if (nextType) {\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: { type: nextType, value: '' }\n          }));\n          setSuggestions(getMicrostepSuggestions(nextType).map((t, i) => ({ id: `ds-${i}`, text: t })) as any);\n          setShowSuggestions(true);\n          const prompt = promptForDeliverablesAwaiting(nextType);\n          const assistantMessage: Message = {\n            id: String(Date.now() + 6),\n            role: 'assistant',\n            content: prompt,\n            timestamp: new Date(),\n            metadata: { stage: 'DELIVERABLES' }\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n          setIsTyping(false);\n          return;\n        } else {\n          // Finished micro-steps: propose summary for confirmation\n          const summary = `Milestones: three checkpoints\\nRubric: criteria as defined\\nImpact: audience + method above`;\n          setProjectState(prev => ({\n            ...prev,\n            awaitingConfirmation: { type: 'deliverables', value: summary }\n          }));\n          const assistantMessage: Message = {\n            id: String(Date.now() + 7),\n            role: 'assistant',\n            content: `Excellent. Here is a concise summary of your Deliverables:\\n\\n${summary}\\n\\nReady to finalize and complete the blueprint?`,\n            timestamp: new Date(),\n            metadata: { stage: 'DELIVERABLES' }\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n          setIsTyping(false);\n          return;\n        }\n      }\n\n      // Simple handling for additional Deliverables micro-steps (artifacts, checkpoints)\n      if (projectState.awaitingConfirmation?.type === 'journey.supports') {\n        saveToBackend('supports', textToSend, 'Learning Journey');\n        const assistantMessage: Message = {\n          id: String(Date.now() + 5),\n          role: 'assistant',\n          content: 'Captured roles and scaffolds. You can continue refining or type \"next\" to proceed to Deliverables.',\n          timestamp: new Date(),\n          metadata: { stage: 'JOURNEY' }\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n        setIsTyping(false);\n        return;\n      }\n\n      // Simple handling for additional Deliverables micro-steps (artifacts, checkpoints)\n      if (projectState.awaitingConfirmation?.type?.startsWith('deliverables.artifacts')) {\n        // Save as single field under deliverables.artifacts\n        saveToBackend('artifacts', textToSend, 'Deliverables');\n        const assistantMessage: Message = {\n          id: String(Date.now() + 5),\n          role: 'assistant',\n          content: 'Got it. Add another artifact or type \"next\" to move on.',\n          timestamp: new Date(),\n          metadata: { stage: 'DELIVERABLES' }\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n        setIsTyping(false);\n        return;\n      }\n\n      if (projectState.awaitingConfirmation?.type?.startsWith('deliverables.checkpoints')) {\n        // Save current checkpoint entry, then advance index\n        const awaitingType = projectState.awaitingConfirmation!.type; // e.g., deliverables.checkpoints.0\n        const saveKey = awaitingType.replace('deliverables.', ''); // checkpoints.0\n        saveToBackend(saveKey, textToSend, 'Deliverables');\n        // Advance to next checkpoint index\n        const parts = awaitingType.split('.');\n        const nextIdx = String((parseInt(parts[2] || '0', 10) || 0) + 1);\n        const nextType = `deliverables.checkpoints.${nextIdx}`;\n        setProjectState(prev => ({ ...prev, awaitingConfirmation: { type: nextType, value: '' } }));\n        setSuggestions(getMicrostepSuggestions(nextType).map((t, i) => ({ id: `ds-cp-${i}`, text: t })) as any);\n        setShowSuggestions(true);\n        const prompt = promptForDeliverablesAwaiting(nextType);\n        const assistantMessage: Message = {\n          id: String(Date.now() + 6),\n          role: 'assistant',\n          content: prompt + '\\n(Type \"done\" any time to stop adding checkpoints.)',\n          timestamp: new Date(),\n          metadata: { stage: 'DELIVERABLES' }\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n        setIsTyping(false);\n        return;\n      }\n\n      let aiResponse = '';\n      \n      // If asking for ideas, generate suggestions and show them\n      if (askingForIdeas) {\n        // Generate contextual suggestions using actual wizard data\n        const wizard = getWizardData();\n        const context = {\n          subject: wizard.subjects?.join(', ') || projectState.context.subject || 'your subject area',\n          gradeLevel: wizard.gradeLevel || projectState.context.gradeLevel || 'your students',\n          projectTopic: wizard.projectTopic || 'your project',\n          bigIdea: projectState.ideation.bigIdea,\n          essentialQuestion: projectState.ideation.essentialQuestion,\n          challenge: projectState.ideation.challenge\n        };\n        \n        // Get contextual suggestions based on actual wizard data\n        const stageSuggestions = getStageSuggestions(projectState.stage, undefined, context);\n        \n        if (stageSuggestions.length > 0) {\n          const suggestions = stageSuggestions.slice(0, 3).map(s => \n            typeof s === 'string' ? s : s.text\n          );\n          \n          // Create contextual response based on wizard data\n          if (projectState.stage === 'BIG_IDEA') {\n            aiResponse = `Here are some Big Idea concepts tailored to your ${context.subject} project with ${context.gradeLevel} students:`;\n          } else if (projectState.stage === 'ESSENTIAL_QUESTION') {\n            aiResponse = `Based on your Big Idea \"${context.bigIdea || 'concept'}\", here are Essential Questions for your ${context.subject} students:`;\n          } else if (projectState.stage === 'CHALLENGE') {\n            aiResponse = `Here are authentic ${context.subject} challenges that connect to your Essential Question and give students real purpose:`;\n          } else {\n            aiResponse = `Here are some ideas for your ${context.subject} project:`;\n          }\n          \n          // Add suggestions to the message\n          const assistantMessage: Message = {\n            id: (Date.now() + 1).toString(),\n            role: 'assistant',\n            content: aiResponse,\n            timestamp: new Date(),\n            metadata: {\n              stage: projectState.stage,\n              suggestions: suggestions,\n              showSuggestions: true\n            }\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n          setIsTyping(false);\n          return; // Exit early since we handled the suggestions\n        } else {\n          // Fallback to AI response if no contextual suggestions available\n          const prompt = generateAIPrompt(userInput);\n          aiResponse = await geminiService.current.generateResponse(prompt, {\n            temperature: 0.7,\n            maxTokens: 500\n          });\n        }\n      } else {\n        // Check if we're in confirmation state\n        if (projectState.awaitingConfirmation) {\n          // Generate confirmation response based on user input\n          const confirmationStrategy = getConfirmationStrategy({\n            stage: projectState.stage,\n            input: projectState.awaitingConfirmation.value,\n            attemptCount: projectState.messageCountInStage,\n            isFromSuggestion: false\n          });\n          \n          // If user is confirming or refining, handle in detectStageTransition\n          // Otherwise, provide the confirmation prompt\n          if (!checkForProgressSignal(userInput) && !checkForRefinementSignal(userInput)) {\n            aiResponse = generateConfirmationPrompt(confirmationStrategy, projectState.stage);\n          } else {\n            // Regular AI response for confirmation/refinement\n            const prompt = generateAIPrompt(userInput);\n            aiResponse = await geminiService.current.generateResponse(prompt, {\n              temperature: 0.7,\n              maxTokens: 500\n            });\n          }\n        } else {\n          // Regular AI response\n          const prompt = generateAIPrompt(userInput);\n          aiResponse = await geminiService.current.generateResponse(prompt, {\n            temperature: 0.7,\n            maxTokens: 500\n          });\n        }\n      }\n      \n      // Detect stage transitions (handles confirmation logic)\n      detectStageTransition(userInput, aiResponse);\n      \n      // Determine if we should show help/ideas buttons\n      const shouldShowHelp = aiResponse.toLowerCase().includes('big idea') || \n                            aiResponse.toLowerCase().includes('essential question') ||\n                            aiResponse.toLowerCase().includes('challenge');\n      \n      const shouldShowIdeas = ['BIG_IDEA','ESSENTIAL_QUESTION','CHALLENGE','JOURNEY'].includes(projectState.stage);\n      \n      const assistantMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        role: 'assistant',\n        content: aiResponse,\n        timestamp: new Date(),\n        metadata: {\n          stage: projectState.stage,\n          showIdeas: useInlineUI && shouldShowIdeas,\n          showHelp: useInlineUI && shouldShowHelp\n        }\n      };\n      \n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      logger.error('AI response failed:', error);\n      \n      // Fallback message\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        role: 'assistant',\n        content: \"I apologize, I'm having trouble processing that. Could you rephrase or tell me more about what you're looking for?\",\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  // Accept & Continue helper – accelerates micro-steps and confirmations\n  const acceptAndContinue = useCallback(() => {\n    const awaiting = projectState.awaitingConfirmation?.type || '';\n    if (!awaiting) return;\n\n    // Confirmation steps – just confirm\n    if (awaiting === 'journey' || awaiting === 'deliverables') {\n      handleSend('yes');\n      showInfoToast('Saved and advanced');\n      return;\n    }\n\n    // Micro-steps – choose first suggestion or a sensible fallback\n    const suggs = getMicrostepSuggestions(awaiting);\n    const choice = suggs[0] || 'Looks good';\n    handleSend(choice);\n  }, [projectState.awaitingConfirmation, handleSend]);\n  \n  // Handle inline actions (Ideas/Help)\n  const handleInlineAction = async (action: 'ideas' | 'help', messageId: string) => {\n    logger.log('Inline action triggered:', action, messageId);\n    \n    if (action === 'ideas') {\n      // Get contextual suggestions for the current stage\n      const wizard = getWizardData();\n      const stageSuggestions = getStageSuggestions(projectState.stage, undefined, {\n        subject: projectState.context.subject || wizard.subjects?.join(', '),\n        gradeLevel: projectState.context.gradeLevel || wizard.gradeLevel,\n        projectTopic: wizard.projectTopic,\n        bigIdea: projectState.ideation.bigIdea,\n        essentialQuestion: projectState.ideation.essentialQuestion,\n        challenge: projectState.ideation.challenge\n      });\n      \n      // Set suggestions and show them\n      setSuggestions(stageSuggestions);\n      setShowSuggestions(true);\n      setShowSuggestionsForMessage(messageId);\n    }\n    \n    if (action === 'help') {\n      // Show contextual help inline\n      setShowHelpForMessage(messageId);\n    }\n  };\n\n  const triggerAskALF = useCallback((stage: ProjectState['stage'], stepHint?: string) => {\n    const context = composeAskALFContext();\n\n    const contextualSuggestions = getStageSuggestions(stage, stepHint, context);\n    if (contextualSuggestions.length) {\n      setSuggestions(contextualSuggestions);\n    }\n\n    setActiveAskALFStage(stage);\n    setActiveAskALFContext(context);\n    setAutomaticSuggestionsHidden(false);\n    setShowSuggestionsForMessage(null);\n    setShowSuggestions(false);\n\n    setProjectState(prev => ({\n      ...prev,\n      stage,\n      awaitingConfirmation: undefined,\n      messageCountInStage: 0\n    }));\n\n    window.requestAnimationFrame(() => {\n      const textarea = document.querySelector('textarea') as HTMLTextAreaElement | null;\n      if (textarea) {\n        textarea.focus();\n        textarea.style.height = 'auto';\n        textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';\n      }\n    });\n  }, [composeAskALFContext]);\n  \n  // Handle suggestion selection - Fixed to work properly\n  const handleSuggestionSelect = (suggestion: string) => {\n    console.log('[Suggestion Selected]:', suggestion);\n    // Add the suggestion to the input\n    setInput(suggestion);\n    setShowSuggestionsForMessage(null);\n    setShowSuggestions(false); // Also hide the main suggestions panel\n    \n    // Focus the textarea (not input)\n    const textarea = document.querySelector('textarea') as HTMLTextAreaElement;\n    if (textarea) {\n      textarea.focus();\n      // Auto-resize after setting value\n      textarea.style.height = 'auto';\n      textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';\n    }\n  };\n  \n  // Handle suggestion click - auto-submit immediately\n  const handleSuggestionClick = (suggestion: any) => {\n    console.log('[Suggestion Clicked - Insert to input]:', suggestion);\n    const text = typeof suggestion === 'string' ? suggestion : suggestion.text;\n    setInput(text);\n    setShowSuggestions(false);\n    try {\n      const textarea = document.querySelector('textarea') as HTMLTextAreaElement | null;\n      if (textarea) {\n        textarea.focus();\n        try {\n          textarea.selectionStart = textarea.selectionEnd = text.length;\n        } catch {}\n        textarea.style.height = 'auto';\n        textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';\n      }\n    } catch (err) {\n      // Non-fatal UI enhancement; ignore errors and let the user type\n    }\n  };\n\n  // Handle stage initiator card clicks\n  const handleStageInitiatorClick = (prompt: string) => {\n    // Replace placeholders with actual context data if available\n    let processedPrompt = prompt;\n    if (projectState.context.subject) {\n      processedPrompt = processedPrompt.replace(/\\[subject\\]/g, projectState.context.subject);\n    }\n    if (projectState.context.duration) {\n      processedPrompt = processedPrompt.replace(/\\[duration\\]/g, projectState.context.duration);\n    }\n    \n    // Set input and auto-submit\n    setInput(processedPrompt);\n    \n    // Auto-submit after a brief delay\n    setTimeout(() => {\n      handleSend(processedPrompt);\n    }, 50);\n  };\n\n  // Handle onboarding skip (dev/debug path)\n  const handleOnboardingSkip = useCallback(async () => {\n    console.log('[ChatbotFirstInterfaceFixed] Skipping onboarding (debug)');\n\n    const wizardData: Partial<WizardDataV3> = {\n      projectTopic: 'Draft Project Exploration',\n      projectContext: {\n        gradeLevel: 'Middle Years',\n        subjects: ['Interdisciplinary'],\n        studentCount: 24,\n        timeWindow: '4 weeks',\n        cadence: 'Weekly',\n        availableTech: [],\n        availableMaterials: [],\n        constraints: [],\n        resources: [],\n        tier: 'core',\n        confidence: 0.5\n      },\n      bigIdea: 'Students investigate challenges in their community and propose creative solutions.',\n      essentialQuestion: 'How can we make a meaningful impact on our local community?',\n      learningGoals: [\n        'Students will collaborate to identify authentic community needs.',\n        'Students will analyze research to justify proposed solutions.'\n      ],\n      successCriteria: [\n        'Solutions align to a clearly defined community need.',\n        'Presentations include evidence gathered from multiple sources.'\n      ]\n    };\n\n    const project = normalizeProjectV3(wizardData as WizardDataV3);\n    const derivedDraftId = projectId || `bp_${Date.now()}_${Math.random().toString(36).slice(2, 6)}`;\n\n    setLocalWizardData(wizardData);\n    setLocalProjectSnapshot(project);\n    setProjectState(prev => ({\n      ...prev,\n      stage: 'BIG_IDEA',\n      context: {\n        subject: (wizardData.projectContext?.subjects || []).join(', ') || 'Interdisciplinary',\n        gradeLevel: wizardData.projectContext?.gradeLevel || 'Middle Years',\n        duration: wizardData.projectContext?.timeWindow || '4 weeks',\n        location: wizardData.projectContext?.space || 'Classroom',\n        materials: (wizardData.projectContext?.availableMaterials || []).join(', ')\n      }\n    }));\n\n    const welcomeMessage: Message = {\n      id: Date.now().toString(),\n      role: 'assistant',\n      content: \"Welcome! I'm your curriculum design partner. What big idea would you like your students to tackle?\",\n      timestamp: new Date(),\n      metadata: {\n        stage: 'BIG_IDEA'\n      }\n    };\n    setMessages([welcomeMessage]);\n\n    try {\n      await onStageComplete?.('onboarding', {\n        wizardData,\n        project,\n        draftId: derivedDraftId\n      });\n    } catch (error) {\n      console.error('[ChatbotFirstInterfaceFixed] Failed to persist skip onboarding snapshot:', error);\n    }\n  }, [onStageComplete, projectId]);\n\n  // Generate progress stages\n  const getProgressStages = useCallback((): Stage[] => {\n    const stages: Stage[] = [\n      {\n        id: 'setup',\n        label: 'Setup',\n        icon: <FileText className=\"w-5 h-5\" />,\n        status: projectState.stage === 'BIG_IDEA' ? 'completed' : 'completed', // Setup is complete when we reach BIG_IDEA\n        substeps: [\n          { id: 'subject', label: 'Subject Area', completed: !!projectState.context.subject },\n          { id: 'grade', label: 'Grade Level', completed: !!projectState.context.gradeLevel },\n          { id: 'duration', label: 'Project Duration', completed: !!projectState.context.duration }\n        ]\n      },\n      {\n        id: 'ideation',\n        label: 'Ideation',\n        icon: <Lightbulb className=\"w-5 h-5\" />,\n        status: ['BIG_IDEA', 'ESSENTIAL_QUESTION', 'CHALLENGE'].includes(projectState.stage) ? 'in-progress' : \n                ['JOURNEY', 'DELIVERABLES', 'COMPLETE'].includes(projectState.stage) ? 'completed' : 'pending',\n        substeps: [\n          { id: 'bigIdea', label: 'Big Idea', completed: projectState.ideation.bigIdeaConfirmed },\n          { id: 'essential', label: 'Essential Question', completed: projectState.ideation.essentialQuestionConfirmed },\n          { id: 'challenge', label: 'Challenge', completed: projectState.ideation.challengeConfirmed }\n        ]\n      },\n      {\n        id: 'journey',\n        label: 'Learning Journey',\n        icon: <Map className=\"w-5 h-5\" />,\n        status: projectState.stage === 'JOURNEY' ? 'in-progress' : \n                ['DELIVERABLES', 'COMPLETE'].includes(projectState.stage) ? 'completed' : 'pending'\n      },\n      {\n        id: 'deliverables',\n        label: 'Deliverables',\n        icon: <Target className=\"w-5 h-5\" />,\n        status: projectState.stage === 'DELIVERABLES' ? 'in-progress' : \n                projectState.stage === 'COMPLETE' ? 'completed' : 'pending'\n      },\n      {\n        id: 'export',\n        label: 'Export',\n        icon: <Download className=\"w-5 h-5\" />,\n        status: projectState.stage === 'COMPLETE' ? 'completed' : 'pending'\n      }\n    ];\n    \n    return stages;\n  }, [projectState]);\n  \n  // Show onboarding if not completed\n  if (projectState.stage === 'ONBOARDING') {\n    console.log('[ChatbotFirstInterfaceFixed] Showing WizardV3Wrapper for ONBOARDING stage');\n    return (\n      <div className=\"min-h-screen relative\">\n        <WizardV3Wrapper\n          projectId={projectId}\n          initialData={(projectData as any)?.wizardData as Partial<WizardDataV3>}\n          onSkip={handleOnboardingSkip}\n          onComplete={async ({ draftId, project, wizardData }) => {\n            console.log('[ChatbotFirstInterfaceFixed] WizardV3 completed with project snapshot:', project);\n\n            setLocalWizardData(wizardData);\n            setLocalProjectSnapshot(project);\n\n            const subjectList = wizardData?.projectContext?.subjects ?? [];\n            const subjectText = Array.isArray(subjectList) && subjectList.length\n              ? subjectList.join(', ')\n              : wizardData?.projectContext?.primarySubject || '';\n\n            setProjectState(prev => ({\n              ...prev,\n              stage: 'BIG_IDEA',\n              context: {\n                subject: subjectText,\n                gradeLevel: wizardData?.projectContext?.gradeLevel || '',\n                duration: wizardData?.projectContext?.timeWindow || '',\n                location: wizardData?.projectContext?.space || '',\n                materials: (wizardData?.projectContext?.availableMaterials || []).join(', ')\n              }\n            }));\n\n            try {\n              await onStageComplete?.('onboarding', {\n                wizardData,\n                project,\n                draftId\n              });\n              console.log('[ChatbotFirstInterfaceFixed] WizardV3 onboarding snapshot persisted');\n            } catch (error) {\n              console.error('[ChatbotFirstInterfaceFixed] Failed to persist onboarding snapshot:', error);\n            }\n          }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative flex flex-col h-screen max-h-screen overflow-hidden bg-gradient-to-br from-gray-50 via-gray-50 to-primary-50/20 dark:from-gray-900 dark:via-gray-900 dark:to-gray-800\">\n      \n      {/* Mobile Progress Menu Button - Subtle floating button */}\n      <div className=\"lg:hidden fixed top-20 left-4 z-40\" style={{ left: 'max(16px, calc(50% - 400px))' }}>\n        <button\n          onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n          className=\"p-2 bg-gray-100/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-lg shadow-sm hover:bg-gray-200/80 dark:hover:bg-gray-700/80 transition-all duration-200 border border-gray-200/50 dark:border-gray-700/50\"\n          style={{ backdropFilter: 'blur(8px)' }}\n        >\n          {mobileMenuOpen ? (\n            <X className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\n          ) : (\n            <Map className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\n          )}\n        </button>\n      </div>\n      \n      {/* Removed ALF ribbon and tour overlay to prioritize chat interface space */}\n\n      {/* Manual snapshot preview modal - only show when needed */}\n      {canExportSnapshot && snapshotShareStatus === 'manual' && snapshotSharePreview && (\n        <div className=\"print-hidden fixed top-20 right-6 z-30 w-80 max-w-sm rounded-xl border border-slate-200 bg-white/95 p-3 text-xs shadow-xl dark:border-slate-700 dark:bg-gray-900/95\">\n          <div className=\"mb-2 flex items-center justify-between text-slate-700 dark:text-slate-200\">\n            <span className=\"font-semibold\">Snapshot preview</span>\n            <button\n              onClick={dismissSnapshotPreview}\n              className=\"text-slate-400 transition hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-200\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          </div>\n          <p className=\"mb-2 text-[11px] text-slate-500 dark:text-slate-400\">\n            Copy this text manually if clipboard access is blocked.\n          </p>\n          <textarea\n            readOnly\n            value={snapshotSharePreview}\n            className=\"h-32 w-full rounded-lg border border-slate-200 bg-slate-50 p-2 text-[11px] text-slate-700 dark:border-slate-700 dark:bg-gray-900 dark:text-slate-200\"\n          />\n        </div>\n      )}\n\n      <div className=\"flex flex-1 min-h-0 overflow-hidden relative\">\n        {/* Mobile Progress Menu Overlay */}\n        {mobileMenuOpen && (\n          <div className=\"lg:hidden absolute inset-0 z-50 bg-black/50 backdrop-blur-sm\" onClick={() => setMobileMenuOpen(false)}>\n            <motion.div\n              initial={{ x: '-100%' }}\n              animate={{ x: 0 }}\n              exit={{ x: '-100%' }}\n              className=\"w-80 max-w-[85vw] h-full bg-white dark:bg-gray-800 shadow-xl\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Project Progress</h2>\n              </div>\n              {useProgressSidebar && (\n                <Suspense fallback={null}>\n                <ProgressSidebarLazy\n                  stages={getProgressStages()}\n                  currentStageId={projectState.stage.toLowerCase()}\n                  isCollapsed={false}\n                  onToggleCollapse={() => {}}\n                  onStageClick={(stageId) => {\n                    logger.log('Stage clicked:', stageId);\n                    setMobileMenuOpen(false);\n                  }}\n                  className=\"h-full border-none shadow-none\"\n                />\n                </Suspense>\n              )}\n            </motion.div>\n          </div>\n        )}\n        \n        {/* Desktop Progress Sidebar - Reduced size when collapsed */}\n        {useProgressSidebar && (\n          <div className={`hidden lg:block flex-shrink-0 transition-all duration-300 ease-in-out ${sidebarCollapsed ? 'lg:w-12' : 'lg:w-64'}`}>\n            <Suspense fallback={null}>\n            <ProgressSidebarLazy\n              stages={getProgressStages()}\n              currentStageId={projectState.stage.toLowerCase()}\n              isCollapsed={sidebarCollapsed}\n              onToggleCollapse={() => setSidebarCollapsed(!sidebarCollapsed)}\n              onStageClick={(stageId) => logger.log('Stage clicked:', stageId)}\n              onEditStage={(stageId) => {\n                // STABILIZATION FIX: Prevent backward navigation and validate stage transitions\n                const map: Record<string, ProjectState['stage']> = {\n                  setup: 'BIG_IDEA',\n                  ideation: 'BIG_IDEA',\n                  journey: 'JOURNEY',\n                  deliverables: 'DELIVERABLES',\n                  export: 'COMPLETE'\n                } as any;\n                const target = map[stageId] || projectState.stage;\n\n                // Prevent going backwards\n                if (getStageOrder(target) < getStageOrder(projectState.stage)) {\n                  logger.warn('Backward navigation prevented for stability');\n                  return;\n                }\n\n                // Check if can enter the stage with detailed validation message\n                if (!canEnterStage(target)) {\n                  const validationMessage = getStageValidationMessage(target);\n                  logger.warn('Cannot enter stage - prerequisites not met:', validationMessage);\n                  addMessage('assistant', validationMessage);\n                  return;\n                }\n\n                // Clear confirmation state when changing stages (STABILIZATION FIX)\n                setProjectState(prev => ({\n                  ...prev,\n                  stage: target,\n                  messageCountInStage: 0,\n                  awaitingConfirmation: null\n                }));\n                setShowSuggestions(true);\n              }}\n              className=\"h-full\"\n            />\n            <div className=\"hidden lg:block mt-2 px-2\">\n              <button\n                onClick={() => setShowPreview(true)}\n                className=\"w-full text-xs px-3 py-2 rounded-full border border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                Preview Blueprint\n              </button>\n              <div className=\"mt-1 text-center\">\n                {(() => { const miss = getMissingItems(); return miss.length ? (\n                  <span className=\"inline-block text-[11px] text-amber-700 dark:text-amber-300\">Missing: {miss.join(', ')}</span>\n                ) : (\n                  <span className=\"inline-block text-[11px] text-green-700 dark:text-green-300\">Ready to finalize</span>\n                ); })()}\n              </div>\n              {/* Review Checklist Panel */}\n              <div className=\"mt-2 p-2 rounded-lg bg-white/70 dark:bg-gray-800/60 border border-gray-200 dark:border-gray-700\">\n                <p className=\"text-xs font-medium text-gray-700 dark:text-gray-300 mb-1\">Review Checklist</p>\n                <div className=\"space-y-1\">\n                  {(() => {\n                    const items = getMissingItems();\n                    if (!items.length) return <p className=\"text-[11px] text-green-700 dark:text-green-300\">All core items set</p>;\n                    const jump = (key: string) => {\n                      switch (key) {\n                        case 'Standards':\n                          setProjectState(prev => ({ ...prev, stage: 'STANDARDS', messageCountInStage: 0 }));\n                          break;\n                        case 'Big Idea':\n                          // STABILIZATION FIX: Clear any existing confirmation state when navigating\n                          setProjectState(prev => ({ ...prev, stage: 'BIG_IDEA', awaitingConfirmation: null, messageCountInStage: 0 }));\n                          break;\n                        case 'EQ':\n                          // STABILIZATION FIX: Clear any existing confirmation state when navigating\n                          setProjectState(prev => ({ ...prev, stage: 'ESSENTIAL_QUESTION', awaitingConfirmation: null, messageCountInStage: 0 }));\n                          break;\n                        case 'Challenge':\n                          // STABILIZATION FIX: Clear any existing confirmation state when navigating\n                          setProjectState(prev => ({ ...prev, stage: 'CHALLENGE', awaitingConfirmation: null, messageCountInStage: 0 }));\n                          break;\n                        case 'Milestones':\n                          // STABILIZATION FIX: Clear any existing confirmation state when navigating\n                          setProjectState(prev => ({ ...prev, stage: 'DELIVERABLES', awaitingConfirmation: null, messageCountInStage: 0 }));\n                          break;\n                        case 'Rubric':\n                          // STABILIZATION FIX: Clear any existing confirmation state when navigating\n                          setProjectState(prev => ({ ...prev, stage: 'DELIVERABLES', awaitingConfirmation: null, messageCountInStage: 0 }));\n                          break;\n                        case 'Artifacts':\n                          setProjectState(prev => ({ ...prev, stage: 'DELIVERABLES', awaitingConfirmation: { type: 'deliverables.artifacts', value: '' } }));\n                          break;\n                        case 'Checkpoints':\n                          setProjectState(prev => ({ ...prev, stage: 'DELIVERABLES', awaitingConfirmation: { type: 'deliverables.checkpoints.0', value: '' } }));\n                          break;\n                        default:\n                          break;\n                      }\n                      setShowSuggestions(true);\n                    };\n                    return items.map(it => (\n                      <button key={it} onClick={() => jump(it)} className=\"w-full text-left text-[11px] text-primary-700 dark:text-primary-300 hover:underline\">\n                        • {it}\n                      </button>\n                    ));\n                  })()}\n                </div>\n              </div>\n              {aiAssistReferences.length > 0 && (\n                <div className=\"mt-3 p-3 rounded-lg bg-white/70 dark:bg-gray-800/60 border border-gray-200 dark:border-gray-700\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <p className=\"text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wide flex items-center gap-1\">\n                      <Sparkles className=\"w-3.5 h-3.5 text-primary-500\" />\n                      AI Assist\n                    </p>\n                    <span className=\"text-[10px] text-gray-400\">Hero exemplars</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    {aiAssistReferences.map(ref => (\n                      <div key={ref.id} className=\"rounded-md border border-gray-100 dark:border-gray-700 bg-white/80 dark:bg-gray-900/40 p-2\">\n                        <p className=\"text-sm font-semibold text-primary-700 dark:text-primary-300 leading-tight\">\n                          {ref.title}\n                        </p>\n                        <p className=\"text-[11px] text-gray-600 dark:text-gray-400 mt-1 leading-snug line-clamp-2\">\n                          Essential Question: {ref.essentialQuestion}\n                        </p>\n                        {ref.metricHighlights[0] && (\n                          <p className=\"text-[11px] text-gray-500 dark:text-gray-500 mt-1\">\n                            Impact Focus: {ref.metricHighlights[0].metric} → {ref.metricHighlights[0].target}\n                          </p>\n                        )}\n                        <div className=\"mt-2 flex flex-wrap gap-1\">\n                          {ref.resourceHighlights.slice(0, 2).map((resource, index) => (\n                            <span\n                              key={`${ref.id}-res-${index}`}\n                              className=\"px-2 py-0.5 rounded-full bg-primary-50 dark:bg-primary-900/30 border border-primary-100 dark:border-primary-800 text-[10px] text-primary-700 dark:text-primary-300\"\n                            >\n                              {resource}\n                            </span>\n                          ))}\n                        </div>\n                        <a\n                          href={`/app/samples/${ref.id}`}\n                          className=\"mt-2 inline-flex items-center gap-1 text-[11px] text-primary-600 dark:text-primary-300 hover:underline\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          View hero blueprint\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n            </Suspense>\n          </div>\n        )}\n      \n      {/* Main Chat Area - Unified Layout Container */}\n      <div className=\"flex-1 min-w-0 min-h-0 flex flex-col relative bg-gradient-to-br from-gray-50 via-gray-50 to-primary-50/20 dark:from-gray-900 dark:via-gray-900 dark:to-gray-800\">\n        {/* Subtle Progress Indicator - Minimized visual prominence */}\n        {projectState.stage !== 'ONBOARDING' && projectState.stage !== 'COMPLETE' && (\n          <div className=\"flex items-center justify-between px-4 pt-1 pb-1\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-[10px] px-2 py-1 bg-gray-100/60 dark:bg-gray-800/40 text-gray-500 dark:text-gray-400 rounded-md border border-gray-200/50 dark:border-gray-700/50 font-normal\">\n                {['BIG_IDEA', 'ESSENTIAL_QUESTION', 'CHALLENGE', 'JOURNEY', 'DELIVERABLES'].indexOf(projectState.stage) + 1}/5\n              </span>\n              {canExportSnapshot && (\n                <button\n                  onClick={() => { void handleCopySnapshot(); }}\n                  className=\"print-hidden inline-flex items-center gap-1 rounded-md bg-gray-100/60 dark:bg-gray-800/40 px-2 py-1 text-[10px] font-normal text-gray-500 dark:text-gray-400 border border-gray-200/50 dark:border-gray-700/50 hover:bg-gray-200/60 dark:hover:bg-gray-700/60 hover:text-gray-600 dark:hover:text-gray-300 transition-all duration-200\"\n                  title=\"Copy project summary to clipboard\"\n                >\n                  <Clipboard className=\"h-2.5 w-2.5\" />\n                  <span className=\"hidden sm:inline\">Copy</span>\n                </button>\n              )}\n            </div>\n            {canExportSnapshot && snapshotShareStatus === 'success' && (\n              <div className=\"rounded-md bg-emerald-50 dark:bg-emerald-900/20 px-2 py-1 text-[10px] font-normal text-emerald-600 dark:text-emerald-400 border border-emerald-200/50 dark:border-emerald-800/50\">\n                ✓ Copied\n              </div>\n            )}\n            {canExportSnapshot && snapshotShareStatus === 'error' && (\n              <div className=\"rounded-md bg-amber-50 dark:bg-amber-900/20 px-2 py-1 text-[10px] font-normal text-amber-600 dark:text-amber-400 border border-amber-200/50 dark:border-amber-800/50\">\n                Clipboard unavailable\n              </div>\n            )}\n          </div>\n        )}\n        \n\n        {/* Stage Guide - Minimal Context Card */}\n        {projectState.stage !== 'ONBOARDING' && getStageMicrocopy(projectState.stage) && (\n          <div className=\"px-4 pt-1\">\n            {(() => { const mc = getStageMicrocopy(projectState.stage)!; return (\n              <div className=\"w-full rounded-lg border border-gray-200/50 dark:border-gray-700/50 bg-gray-50/60 dark:bg-gray-800/30 backdrop-blur\" data-testid=\"stage-guide\">\n                {/* Mobile header with subtle toggle */}\n                <div className=\"flex items-center justify-between px-3 py-1.5 md:hidden\">\n                  <span className=\"text-xs font-medium text-gray-600 dark:text-gray-300\">Context</span>\n                  <button\n                    onClick={() => {\n                      setMobileTipsOpen(v => {\n                        const next = !v;\n                        try {\n                          const key = `stageGuideCollapsed:${projectId || 'unknown'}:${projectState.stage}`;\n                          // store '1' for open, '0' for closed\n                          localStorage.setItem(key, next ? '1' : '0');\n                        } catch {}\n                        return next;\n                      });\n                    }}\n                    className=\"text-[10px] text-gray-500 dark:text-gray-400 px-1.5 py-0.5 rounded hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                    aria-expanded={mobileTipsOpen}\n                    aria-controls=\"stage-guide-mobile\"\n                    data-testid=\"stage-guide-toggle\"\n                  >\n                    {mobileTipsOpen ? 'Hide' : 'Show'}\n                  </button>\n                </div>\n                <div id=\"stage-guide-mobile\" className={`px-3 pb-2 ${mobileTipsOpen ? 'block' : 'hidden md:block'}`}>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2 text-[11px]\">\n                    <div>\n                      <div className=\"text-gray-600 dark:text-gray-300 font-medium\">What</div>\n                      <div className=\"text-gray-500 dark:text-gray-400 mt-0.5\">{mc.what}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-gray-600 dark:text-gray-300 font-medium\">Why</div>\n                      <div className=\"text-gray-500 dark:text-gray-400 mt-0.5\">{mc.why}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-gray-600 dark:text-gray-300 font-medium\">Tip</div>\n                      <div className=\"text-gray-500 dark:text-gray-400 mt-0.5\">{mc.tip}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ); })()}\n          </div>\n        )}\n\n        {/* Chat Messages - Full width layout */}\n        <div className=\"flex-1 overflow-y-auto px-4 py-4 safe-top pb-4\">\n          <div className=\"w-full space-y-3\">\n            {messages.map((message, index) => (\n              <div key={message.id} className=\"space-y-3\">\n                {/* Coach Message with Enhanced Layout */}\n                {message.role === 'assistant' && (\n                  <motion.div\n                    initial={{ opacity: 0, y: 15 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    className=\"flex items-start gap-4\"\n                  >\n                    {/* Coach Avatar & Status - Fixed Positioning */}\n                    <div className=\"flex-shrink-0 mt-2\">\n                      <div className=\"w-10 h-10 bg-white dark:bg-gray-800 rounded-full flex items-center justify-center shadow-sm border border-gray-200 dark:border-gray-700\">\n                        <Layers className=\"w-5 h-5 text-primary-600 dark:text-primary-400\" />\n                      </div>\n                      {/* Clean Stage Indicator */}\n                      {message.metadata?.stage && (\n                        <div className=\"mt-2 text-center\">\n                          <div className=\"w-6 h-0.5 bg-primary-500 dark:bg-primary-400 rounded-full mx-auto\"></div>\n                          <span className=\"text-xs text-gray-500 dark:text-gray-400 mt-1 block font-medium\">\n                            {formatStageLabel(message.metadata.stage)}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Message Content with Coaching Context */}\n                    <div className=\"flex-1\">\n                      {/* Stage Progress Context */}\n                      {message.metadata?.stage && index === 0 && (\n                        <div className=\"mb-3 p-3 bg-primary-50 dark:bg-primary-900/20 rounded-lg border-l-4 border-primary-400\">\n                          <div className=\"flex items-center gap-2\">\n                            <div className=\"w-2 h-2 bg-primary-500 rounded-full animate-pulse\"></div>\n                            <span className=\"text-sm font-medium text-primary-700 dark:text-primary-300\">\n                              Working on: {formatStageLabel(message.metadata.stage)}\n                            </span>\n                            {featureFlags.isEnabled('glossary') && (\n                              <span className=\"ml-1\">\n                                {message.metadata.stage === 'BIG_IDEA' && <TooltipGlossary term=\"Big Idea\" />}\n                                {message.metadata.stage === 'ESSENTIAL_QUESTION' && <TooltipGlossary term=\"Essential Question\" />}\n                                {message.metadata.stage === 'CHALLENGE' && <TooltipGlossary term=\"Challenge\" />}\n                              </span>\n                            )}\n                          </div>\n                          <p className=\"text-xs text-primary-600 dark:text-primary-400 mt-1\">\n                            Building on your {getWizardData().subjects?.join(', ') || 'project'} context\n                          </p>\n                        </div>\n                      )}\n                      \n                      {/* Main Message */}\n                      <div className=\"p-5\">\n                        <Suspense fallback={null}>\n                          <MessageRendererLazy content={message.content} role={message.role} />\n                        </Suspense>\n                      </div>\n                      \n                      {/* Contextual Encouragement */}\n                      {message.metadata?.stage && (\n                        <div className=\"mt-2 flex items-center gap-2\">\n                          <div className=\"w-1 h-1 bg-green-400 rounded-full\"></div>\n                          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            Thinking about your {projectState.context.gradeLevel || 'students'}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </motion.div>\n                )}\n                \n                {/* User Message with Context */}\n                {message.role === 'user' && (\n                  <motion.div\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    className=\"flex justify-end\"\n                  >\n                    <div className=\"w-full\">\n                      {/* User Input Context */}\n                      <div className=\"text-right mb-2\">\n                        <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          Your {projectState.stage.toLowerCase().replace('_', ' ')} input\n                        </span>\n                      </div>\n                      \n                      <div className=\"border-2 border-primary-500 dark:border-primary-400 text-gray-900 dark:text-gray-100 px-6 py-4 rounded-2xl rounded-tr-sm bg-transparent\">\n                        <Suspense fallback={null}>\n                          <MessageRendererLazy content={message.content} role={message.role} />\n                        </Suspense>\n                      </div>\n                      \n                      {/* Build Progress Indicator */}\n                      <div className=\"mt-2 text-right\">\n                        <span className=\"text-xs text-green-600 dark:text-green-400\">\n                          Added to your project design\n                        </span>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n                \n                {/* Removed the Get Started button - no longer needed */}\n                \n                {/* Help content can still be shown separately if needed */}\n                {showHelpForMessage === message.id && (\n                  <div className=\"mt-3 ml-4\">\n                    <Suspense fallback={null}>\n                      <InlineHelpContentLazy\n                        {...getContextualHelp(message.content, projectState.stage)}\n                        onDismiss={() => setShowHelpForMessage(null)}\n                      />\n                    </Suspense>\n                  </div>\n                )}\n              </div>\n            ))}\n            \n            {/* Optional inline recap panel (disabled by default in favor of sidebar) */}\n            {showInlineRecap && messages.length > 2 && (\n              <div className=\"mt-6 mb-4 bg-white dark:bg-gray-800 rounded-2xl p-5 border border-gray-200 dark:border-gray-700 shadow-sm\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <div className=\"w-6 h-6 bg-primary-500 rounded-full flex items-center justify-center\">\n                    <Layers className=\"w-3 h-3 text-white\" />\n                  </div>\n                  <h3 className=\"font-medium text-gray-800 dark:text-gray-200\">Your Project Taking Shape</h3>\n                  <button\n                    onClick={() => setRecapExpanded(!recapExpanded)}\n                    className=\"ml-auto text-xs text-primary-600 dark:text-primary-400 hover:underline\"\n                    aria-expanded={recapExpanded}\n                    aria-controls=\"recap-content\"\n                  >\n                    {recapExpanded ? 'Hide' : 'Show'}\n                  </button>\n                  <div className=\"ml-2 flex items-center gap-2\">\n                    <button\n                      onClick={() => { setJourneyExpanded(true); setDeliverablesExpanded(true); }}\n                      className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline\"\n                    >\n                      Expand all\n                    </button>\n                    <button\n                      onClick={() => { setJourneyExpanded(false); setDeliverablesExpanded(false); }}\n                      className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline\"\n                    >\n                      Collapse all\n                    </button>\n                  </div>\n                </div>\n                <motion.div\n                  id=\"recap-content\"\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: recapExpanded ? 1 : 0, height: recapExpanded ? 'auto' : 0 }}\n                  transition={{ duration: 0.2 }}\n                >\n                <div className=\"grid gap-3 md:grid-cols-3\">\n                  {/* Big Idea Progress */}\n                  <div className={`p-3 rounded-xl border-2 transition-all ${\n                    projectState.ideation.bigIdeaConfirmed \n                      ? 'bg-green-50 dark:bg-green-900/10 border-green-300 dark:border-green-500' \n                      : projectState.stage === 'BIG_IDEA' \n                        ? 'bg-primary-50 dark:bg-primary-900/10 border-primary-300 dark:border-primary-500 ring-1 ring-blue-200 dark:ring-blue-400' \n                        : 'bg-gray-50 dark:bg-gray-800/50 border-gray-200 dark:border-gray-600'\n                  }`}>\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      {projectState.ideation.bigIdeaConfirmed ? (\n                        <div className=\"w-4 h-4 bg-green-500 rounded-full flex items-center justify-center\">\n                          <svg className=\"w-3 h-3 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                        </div>\n                      ) : (\n                        <div className=\"w-4 h-4 border-2 border-gray-300 rounded-full\"></div>\n                      )}\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Big Idea</span>\n                      {lastSavedKey === 'ideation.bigIdea' && (\n                        <motion.span initial={{ opacity: 0, scale: 0.95 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.2 }}\n                          className=\"ml-2 inline-flex items-center gap-1 text-[10px] px-1.5 py-0.5 rounded-md bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                          <svg className=\"w-3 h-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                          Saved\n                        </motion.span>\n                      )}\n                      <div className=\"ml-auto flex items-center gap-2\">\n                        <button\n                          onClick={() => {\n                            triggerAskALF('BIG_IDEA', 'idea');\n                            showInfoToast('Here are some Big Idea spark starters');\n                          }}\n                          className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline inline-flex items-center gap-1\"\n                          title=\"Ask ALF for Big Idea suggestions\"\n                        >\n                          <Lightbulb className=\"w-3.5 h-3.5\" /> Ask ALF\n                        </button>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      {projectState.ideation.bigIdea || 'Conceptual foundation...'}\n                    </p>\n                    <CardActionBar\n                      onAccept={() => handleAcceptIdeation('bigIdea')}\n                      onRefine={() => handleRefineIdeation('bigIdea')}\n                      onReplace={() => handleReplaceIdeation('bigIdea')}\n                      disabled={!projectState.ideation.bigIdea.trim()}\n                    />\n                  </div>\n                  \n                  {/* Essential Question Progress */}\n                  <div className={`p-3 rounded-xl border-2 transition-all ${\n                    projectState.ideation.essentialQuestionConfirmed \n                      ? 'bg-green-50 dark:bg-green-900/10 border-green-300 dark:border-green-500' \n                      : projectState.stage === 'ESSENTIAL_QUESTION' \n                        ? 'bg-primary-50 dark:bg-primary-900/10 border-primary-300 dark:border-primary-500 ring-1 ring-blue-200 dark:ring-blue-400' \n                        : 'bg-gray-50 dark:bg-gray-800/50 border-gray-200 dark:border-gray-600'\n                  }`}>\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      {projectState.ideation.essentialQuestionConfirmed ? (\n                        <div className=\"w-4 h-4 bg-green-500 rounded-full flex items-center justify-center\">\n                          <svg className=\"w-3 h-3 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                        </div>\n                      ) : (\n                        <div className=\"w-4 h-4 border-2 border-gray-300 rounded-full\"></div>\n                      )}\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Essential Question</span>\n                      {lastSavedKey === 'ideation.essentialQuestion' && (\n                        <motion.span initial={{ opacity: 0, scale: 0.95 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.2 }}\n                          className=\"ml-2 inline-flex items-center gap-1 text-[10px] px-1.5 py-0.5 rounded-md bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                          <svg className=\"w-3 h-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                          Saved\n                        </motion.span>\n                      )}\n                      <div className=\"ml-auto flex items-center gap-2\">\n                        <button\n                          onClick={() => {\n                            triggerAskALF('ESSENTIAL_QUESTION', 'question');\n                            showInfoToast('Here come Essential Question starters');\n                          }}\n                          className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline inline-flex items-center gap-1\"\n                          title=\"Ask ALF for Essential Question ideas\"\n                        >\n                          <Lightbulb className=\"w-3.5 h-3.5\" /> Ask ALF\n                        </button>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      {projectState.ideation.essentialQuestion || 'Driving inquiry...'}\n                    </p>\n                    <CardActionBar\n                      onAccept={() => handleAcceptIdeation('essentialQuestion')}\n                      onRefine={() => handleRefineIdeation('essentialQuestion')}\n                      onReplace={() => handleReplaceIdeation('essentialQuestion')}\n                      disabled={!projectState.ideation.essentialQuestion.trim()}\n                    />\n                  </div>\n                  \n                  {/* Challenge Progress */}\n                  <div className={`p-3 rounded-xl border-2 transition-all ${\n                    projectState.ideation.challengeConfirmed \n                      ? 'bg-green-50 dark:bg-green-900/10 border-green-300 dark:border-green-500' \n                      : projectState.stage === 'CHALLENGE' \n                        ? 'bg-primary-50 dark:bg-primary-900/10 border-primary-300 dark:border-primary-500 ring-1 ring-blue-200 dark:ring-blue-400' \n                        : 'bg-gray-50 dark:bg-gray-800/50 border-gray-200 dark:border-gray-600'\n                  }`}>\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      {projectState.ideation.challengeConfirmed ? (\n                        <div className=\"w-4 h-4 bg-green-500 rounded-full flex items-center justify-center\">\n                          <svg className=\"w-3 h-3 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                        </div>\n                      ) : (\n                        <div className=\"w-4 h-4 border-2 border-gray-300 rounded-full\"></div>\n                      )}\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Challenge</span>\n                      {lastSavedKey === 'ideation.challenge' && (\n                        <motion.span initial={{ opacity: 0, scale: 0.95 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.2 }}\n                          className=\"ml-2 inline-flex items-center gap-1 text-[10px] px-1.5 py-0.5 rounded-md bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                          <svg className=\"w-3 h-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                          Saved\n                        </motion.span>\n                      )}\n                      <div className=\"ml-auto flex items-center gap-2\">\n                        <button\n                          onClick={() => {\n                            triggerAskALF('CHALLENGE', 'challenge');\n                            showInfoToast('Here are challenge prompts from ALF');\n                          }}\n                          className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline inline-flex items-center gap-1\"\n                          title=\"Ask ALF for challenge prompts\"\n                        >\n                          <Lightbulb className=\"w-3.5 h-3.5\" /> Ask ALF\n                        </button>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      {projectState.ideation.challenge || 'Authentic task...'}\n                    </p>\n                    <CardActionBar\n                      onAccept={() => handleAcceptIdeation('challenge')}\n                      onRefine={() => handleRefineIdeation('challenge')}\n                      onReplace={() => handleReplaceIdeation('challenge')}\n                      disabled={!projectState.ideation.challenge.trim()}\n                    />\n                  </div>\n                </div>\n                {activeAskALFStage && ['BIG_IDEA','ESSENTIAL_QUESTION','CHALLENGE'].includes(activeAskALFStage) && (\n                  <div className=\"mt-3\">\n                    <StageSpecificSuggestions\n                      stage={activeAskALFStage as string}\n                      context={activeAskALFContext ?? composeAskALFContext()}\n                      onSelectSuggestion={(suggestion) => {\n                        clearAskALFTray();\n                        void handleSend(suggestion);\n                      }}\n                      isVisible={true}\n                      showDismiss\n                      onDismiss={clearAskALFTray}\n                    />\n                  </div>\n                )}\n                \n                {/* Clean Progress Connection */}\n                <div className=\"mt-4 flex justify-center\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"h-0.5 w-6 bg-primary-500 dark:bg-primary-400 rounded-full\"></div>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400 font-medium\">Building your project foundation</span>\n                    <div className=\"h-0.5 w-6 bg-primary-500 dark:bg-primary-400 rounded-full\"></div>\n                  </div>\n                </div>\n\n                {/* Journey & Deliverables Compact Controls */}\n                <div className=\"mt-4 grid gap-3 md:grid-cols-2\">\n                  {/* Journey Plan */}\n                  <div className=\"p-3 rounded-xl border bg-gray-50 dark:bg-gray-800/50 border-gray-200 dark:border-gray-600\">\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <Map className=\"w-4 h-4 text-primary-600 dark:text-primary-400\" />\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Learning Journey</span>\n                      {isJourneyComplete() && (\n                        <span className=\"ml-2 inline-flex items-center gap-1 text-[10px] px-1.5 py-0.5 rounded-md bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                          <svg className=\"w-3 h-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                          Saved\n                        </span>\n                      )}\n                      <div className=\"ml-auto flex items-center gap-2\">\n                        <button\n                          onClick={() => {\n                            triggerAskALF('JOURNEY', 'phases');\n                            showInfoToast('ALF can suggest journey phases to try');\n                          }}\n                          className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline inline-flex items-center gap-1\"\n                          title=\"Ask ALF for journey ideas\"\n                        >\n                          <Lightbulb className=\"w-3.5 h-3.5\" /> Ask ALF\n                        </button>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400\">{getJourneySummary()}</p>\n                    <div className=\"mt-2 flex items-center gap-2\">\n                      <button\n                        data-testid=\"journey-toggle\"\n                        onClick={() => setJourneyExpanded(!journeyExpanded)}\n                        className=\"text-[11px] text-primary-700 dark:text-primary-300 hover:underline\"\n                      >\n                        {journeyExpanded ? 'Hide details' : 'Show details'}\n                      </button>\n                        <button\n                          onClick={() => {\n                            const t = 'journey.supports';\n                            setProjectState(prev => ({ ...prev, stage: 'JOURNEY', awaitingConfirmation: { type: t, value: '' } }));\n                            setSuggestions(getMicrostepSuggestions(t).map((v, i) => ({ id: `js-s-${i}`, text: v })) as any);\n                            clearAskALFTray();\n                            setShowSuggestions(true);\n                            showInfoToast('Editing Roles & Scaffolds');\n                          }}\n                        className=\"text-[11px] text-primary-700 dark:text-primary-300 hover:underline\"\n                      >\n                        Roles/Scaffolds\n                      </button>\n                    </div>\n                    <AnimatePresence initial={false}>\n                      {journeyExpanded && (\n                        <motion.div initial={{ opacity: 0, height: 0 }} animate={{ opacity: 1, height: 'auto' }} exit={{ opacity: 0, height: 0 }} className=\"mt-2 space-y-1\">\n                          {(['analyze','brainstorm','prototype','evaluate'] as const).map((phase) => {\n                            const preview = getJourneyPhasePreview(phase);\n                            const saved = lastSavedKey && lastSavedKey.startsWith('journey.' + phase + '.');\n                          return (\n                              <div\n                                data-testid={`journey-line-${phase}`}\n                                key={phase}\n                                className=\"text-left w-full text-[11px] text-gray-600 dark:text-gray-400\"\n                              >\n                                <div className=\"flex items-center justify-between\">\n                                  <div>\n                                    <span className=\"font-medium capitalize\">{phase}:</span> {truncate(preview)}\n                                  </div>\n                                  <div className=\"flex items-center gap-2\">\n                                    {saved && (\n                                      <span className=\"inline-flex items-center gap-1 text-[10px] px-1.5 py-0.5 rounded-md bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                                        <svg className=\"w-3 h-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                                        Saved\n                                      </span>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                    <CardActionBar\n                      onAccept={handleAcceptJourney}\n                      onRefine={handleRefineJourney}\n                      onReplace={handleReplaceJourney}\n                      disabled={!(getCurrentProjectSnapshot()?.phases?.length)}\n                    />\n                    {activeAskALFStage === 'JOURNEY' && (\n                      <div className=\"mt-3\">\n                        <StageSpecificSuggestions\n                          stage=\"JOURNEY\"\n                          context={activeAskALFContext ?? composeAskALFContext()}\n                          onSelectSuggestion={(suggestion) => {\n                            clearAskALFTray();\n                            void handleSend(suggestion);\n                          }}\n                          isVisible={true}\n                          showDismiss\n                          onDismiss={clearAskALFTray}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Deliverables */}\n                  <div className=\"p-3 rounded-xl border bg-gray-50 dark:bg-gray-800/50 border-gray-200 dark:border-gray-600\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <Target className=\"w-4 h-4 text-purple-600 dark:text-purple-400\" />\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Deliverables</span>\n                      {isDeliverablesComplete() && (\n                        <span className=\"ml-2 inline-flex items-center gap-1 text-[10px] px-1.5 py-0.5 rounded-md bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                          <svg className=\"w-3 h-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                          Saved\n                        </span>\n                      )}\n                      <div className=\"ml-auto flex items-center gap-2\">\n                        <button\n                          onClick={() => {\n                            triggerAskALF('DELIVERABLES', 'deliverables');\n                            showInfoToast('ALF queued deliverable templates to explore');\n                          }}\n                          className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline inline-flex items-center gap-1\"\n                          title=\"Ask ALF for deliverable ideas\"\n                        >\n                          <Lightbulb className=\"w-3.5 h-3.5\" /> Ask ALF\n                        </button>\n                        <button\n                          data-testid=\"deliverables-toggle\"\n                          onClick={() => setDeliverablesExpanded(!deliverablesExpanded)}\n                          className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline\"\n                        >\n                          {deliverablesExpanded ? 'Hide details' : 'Show details'}\n                        </button>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400 mb-2\">{getDeliverablesSummary()}</p>\n                    <AnimatePresence initial={false}>\n                      {deliverablesExpanded && (\n                        <motion.div initial={{ opacity: 0, height: 0 }} animate={{ opacity: 1, height: 'auto' }} exit={{ opacity: 0, height: 0 }} className=\"mb-2 space-y-1\">\n                          {getDeliverablesPreviewLines().map((line, idx) => {\n                            // Map line to section for click target\n                            let section: 'milestones'|'rubric'|'impact' = 'milestones';\n                            if (line.toLowerCase().startsWith('rubric')) section = 'rubric';\n                            if (line.toLowerCase().startsWith('impact')) section = 'impact';\n                            const saved = lastSavedKey && lastSavedKey.startsWith('deliverables.' + (section === 'milestones' ? 'milestones' : section === 'rubric' ? 'rubric' : 'impact'));\n                            return (\n                              <button\n                                data-testid={`deliverables-line-${section}`}\n                                key={idx}\n                                onClick={() => openDeliverablesSection(section)}\n                                className=\"text-left w-full text-[11px] text-gray-600 dark:text-gray-400 hover:underline\"\n                                title={'Edit ' + section}\n                              >\n                                <div className=\"flex items-center justify-between\">\n                                  <div>{truncate(line)}</div>\n                                  <div className=\"flex items-center gap-2\">\n                                    {saved && (\n                                      <span className=\"inline-flex items-center gap-1 text-[10px] px-1.5 py-0.5 rounded-md bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">\n                                        <svg className=\"w-3 h-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"/></svg>\n                                        Saved\n                                      </span>\n                                    )}\n                                  </div>\n                                </div>\n                              </button>\n                            );\n                          })}\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                    {/* Simplified editing interface - Use the main action buttons below */}\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400 mb-2\">\n                      Use \"Refine\" below to modify specific sections\n                    </div>\n                    <CardActionBar\n                      onAccept={handleAcceptDeliverables}\n                      onRefine={handleRefineDeliverables}\n                      onReplace={handleReplaceDeliverables}\n                      disabled={!(getCurrentProjectSnapshot()?.milestones?.length)}\n                    />\n                    {activeAskALFStage === 'DELIVERABLES' && (\n                      <div className=\"mt-3\">\n                        <StageSpecificSuggestions\n                          stage=\"DELIVERABLES\"\n                          context={activeAskALFContext ?? composeAskALFContext()}\n                          onSelectSuggestion={(suggestion) => {\n                            clearAskALFTray();\n                            void handleSend(suggestion);\n                          }}\n                          isVisible={true}\n                          showDismiss\n                          onDismiss={clearAskALFTray}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n                </motion.div>\n              </div>\n            )}\n            \n            {/* Stage Initiator Cards - Show only when appropriate for the stage */}\n            {useStageInitiators && !isTyping && !input.trim() && \n             shouldShowCards(projectState.stage, projectState.messageCountInStage) && (\n              <div className=\"mt-6 mb-6\">\n                <Suspense fallback={null}>\n                  <StageInitiatorCardsLazy\n                    currentStage={projectState.stage}\n                    onCardClick={handleStageInitiatorClick}\n                  />\n                </Suspense>\n              </div>\n            )}\n            \n            {/* Enhanced Thinking Indicator */}\n            {isTyping && (\n              <motion.div\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"flex items-start gap-4\"\n              >\n                {/* Coach Avatar */}\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-10 h-10 bg-white dark:bg-gray-800 rounded-full flex items-center justify-center shadow-md border border-gray-200 dark:border-gray-700\">\n                    <Layers className=\"w-5 h-5 text-primary-600 dark:text-primary-400\" />\n                  </div>\n                </div>\n                \n                {/* Thoughtful Processing Indicator */}\n                <div className=\"flex-1\">\n                  <div className=\"p-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-1.5 h-1.5 bg-primary-400 rounded-full animate-pulse\" />\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        ALF Coach is thinking...\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n            \n            {/* Spacer to ensure last message is visible above input */}\n            <div className=\"h-24\" />\n            <div ref={messagesEndRef} />\n          </div>\n        </div>\n        \n        {/* Chat Input Area - Always visible */}\n        <div className=\"flex-shrink-0 bg-gray-50 dark:bg-gray-900 px-4 py-3 border-t border-gray-200 dark:border-gray-800\">\n          {/* Gradient fade overlay - taller and more opaque */}\n          <div className=\"absolute inset-x-0 -top-20 h-20 pointer-events-none bg-gradient-to-b from-transparent via-gray-50/80 to-gray-50 dark:from-transparent dark:via-gray-900/80 dark:to-gray-900\" />\n          \n          <div className=\"w-full relative\">\n            \n            {/* Vibrant Suggestion Cards with Icons and Colors */}\n            {/* Compact inline recap bar (pill shaped) */}\n            {showInlineRecap && (\n              featureFlags.getValue('inlineRecapAlways') ||\n              lastSavedKey ||\n              projectState.awaitingConfirmation\n            ) && (\n              // Respect minimum message threshold to avoid early noise\n              (messages.length >= (featureFlags.getValue('inlineRecapMinMessages') as number)) &&\n              <CompactRecapBar\n                savedLabel={mapSavedKeyToLabel(lastSavedKey)}\n                savedValue={getSavedValueForKey(lastSavedKey)}\n                nextLabel={getNextLabel()}\n                onNext={() => {\n                  const nl = getNextLabel();\n                  if (!nl) return;\n                  if (nl === 'Essential Question') {\n                    setProjectState(prev => ({ ...prev, stage: 'ESSENTIAL_QUESTION', messageCountInStage: 0 }));\n                    setShowSuggestions(true);\n                  } else if (nl === 'Challenge') {\n                    setProjectState(prev => ({ ...prev, stage: 'CHALLENGE', messageCountInStage: 0 }));\n                    setShowSuggestions(true);\n                  } else if (nl === 'Learning Journey' || nl === 'Continue Journey') {\n                    setProjectState(prev => ({ ...prev, stage: 'JOURNEY', messageCountInStage: 0 }));\n                    setShowSuggestions(true);\n                  } else if (nl === 'Deliverables' || nl === 'Finalize Deliverables') {\n                    setProjectState(prev => ({ ...prev, stage: 'DELIVERABLES', messageCountInStage: 0 }));\n                    setShowSuggestions(true);\n                  } else if (nl === 'Export') {\n                    void handleCopySnapshot();\n                  }\n                }}\n              />\n            )}\n\n            {(showSuggestions || shouldShowAutomaticSuggestions()) && suggestions.length > 0 && (\n              <motion.div \n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: 10 }}\n                className=\"mb-4\"\n              >\n                {/* Add background to prevent transparency issues */}\n                <div className=\"flex flex-col gap-3 bg-white/95 dark:bg-gray-900/95 backdrop-blur-md rounded-2xl p-3\">\n                  {/* Small stage indicator */}\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <Lightbulb className=\"w-3.5 h-3.5 text-gray-400\" />\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Ideas for {projectState.stage.replace(/_/g, ' ').toLowerCase()}\n                    </span>\n                  </div>\n                  {projectState.awaitingConfirmation && (\n                    <div className=\"flex items-center gap-2\">\n                      <EnhancedButton\n                        data-testid=\"accept-continue\"\n                        onClick={acceptAndContinue}\n                        variant=\"filled\"\n                        size=\"sm\"\n                        leftIcon={<Check className=\"w-3.5 h-3.5\" />}\n                      >\n                        Accept & Continue\n                      </EnhancedButton>\n                      <button\n                        onClick={backOneStep}\n                        className=\"inline-flex items-center gap-1 px-2 py-1.5 text-xs text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:underline transition-colors\"\n                      >\n                        <ChevronLeft className=\"w-3.5 h-3.5\" />\n                        Back\n                      </button>\n                      <button\n                        onClick={() => setShowSuggestions(true)}\n                        className=\"text-xs text-primary-600 dark:text-primary-400 hover:underline\"\n                      >\n                        More Options\n                      </button>\n                    </div>\n                  )}\n                  {projectState.awaitingConfirmation && (\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      You can refine any step later. Your progress saves automatically.\n                    </p>\n                  )}\n\n                  {/* Subtle context chips */}\n                  <div className=\"mb-2 flex flex-wrap gap-1 text-[10px] text-gray-500 dark:text-gray-500\">\n                    {(() => { const w = getWizardData(); const chips = [w.subjects?.join(' • ') || '', w.gradeLevel || '', w.projectTopic || '', w.location || ''].filter(Boolean); return chips.map((c,i)=>(<span key={i} className=\"px-1.5 py-0.5 rounded bg-gray-100/50 dark:bg-gray-800/50\">{c}</span>)); })()}\n                  </div>\n\n                  {/* Subtle suggestion cards */}\n                  {suggestions.slice(0, 3).map((suggestion, index) => (\n                    <button\n                      key={suggestion.id || index}\n                      onClick={() => handleSuggestionClick(suggestion)}\n                      className=\"w-full text-left p-3 min-h-[40px] bg-gray-50/60 dark:bg-gray-800/40 border border-gray-200/50 dark:border-gray-700/50 rounded-xl hover:border-gray-300 dark:hover:border-gray-600 hover:bg-gray-100/60 dark:hover:bg-gray-700/60 focus:outline-none focus:ring-1 focus:ring-gray-300/50 dark:focus:ring-gray-600/40 transition-all duration-200 group touch-manipulation\"\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"flex-shrink-0\">\n                          <Sparkles className=\"w-3.5 h-3.5 text-gray-400 dark:text-gray-500 group-hover:text-gray-600 dark:group-hover:text-gray-400\" />\n                        </div>\n                        <p className=\"text-sm text-gray-700 dark:text-gray-300 leading-relaxed\">\n                          {typeof suggestion === 'string' ? suggestion : suggestion.text}\n                        </p>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n            \n            \n            {/* Ultra-Compact ChatGPT-Style Input */}\n            <div className=\"relative\">\n              {/* Single-line input with expanding textarea and inline buttons */}\n              <div className={`relative bg-white/95 dark:bg-gray-800 backdrop-blur-sm border border-gray-200/70 dark:border-gray-600 hover:border-primary-400/80 dark:hover:border-primary-400/80 focus-within:border-primary-500 dark:focus-within:border-primary-300 transition-all duration-200`}\n                style={{\n                  borderRadius: input && input.split('\\n').length > 1 ? '24px' : '9999px'\n                }}>\n                <div className=\"flex items-center px-4 py-2.5 gap-2\">\n                  <textarea\n                    value={input}\n                    onChange={(e) => {\n                      setInput(e.target.value);\n                      // Auto-resize like ChatGPT (starts at 1 line, expands to 3, then scrolls)\n                      const textarea = e.target;\n                      textarea.style.height = '20px';\n                      const scrollHeight = textarea.scrollHeight;\n                      const newHeight = Math.min(scrollHeight, 60); // max 3 lines at 20px each\n                      textarea.style.height = newHeight + 'px';\n                      \n                      // Smooth transition for border radius based on content\n                      const container = textarea.closest('.relative');\n                      if (container) {\n                        const lines = e.target.value.split('\\n').length;\n                        const hasMultipleLines = lines > 1 || scrollHeight > 25;\n                        container.style.borderRadius = hasMultipleLines ? '24px' : '9999px';\n                      }\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        handleSend();\n                      }\n                    }}\n                    placeholder=\"Message ALF Coach...\"\n                    rows={1}\n                    className=\"flex-1 resize-none bg-transparent border-0 outline-none focus:outline-none focus:ring-0 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-300 text-base leading-6\"\n                    style={{ \n                      height: '20px', \n                      minHeight: '20px', \n                      maxHeight: '60px',\n                      scrollbarWidth: 'none',\n                      msOverflowStyle: 'none'\n                    }}\n                  />\n                  \n                  {/* Inline action buttons like ChatGPT */}\n                  <div className=\"flex items-center gap-2 flex-shrink-0\">\n                    {/* Ideas button - Touch optimized with circular hover */}\n                    <button\n                      data-testid=\"ideas-button\"\n                      onClick={() => {\n                        if (!showSuggestions) {\n                          const wizard = getWizardData();\n                          const stageSuggestions = getStageSuggestions(projectState.stage, undefined, {\n                            subject: projectState.context.subject || wizard.subjects?.join(', '),\n                            gradeLevel: projectState.context.gradeLevel || wizard.gradeLevel,\n                            projectTopic: wizard.projectTopic,\n                            bigIdea: projectState.ideation.bigIdea,\n                            essentialQuestion: projectState.ideation.essentialQuestion,\n                            challenge: projectState.ideation.challenge\n                          });\n                          setSuggestions(stageSuggestions);\n                        }\n                        clearAskALFTray();\n                        setShowSuggestions(!showSuggestions);\n                      }}\n                      disabled={isTyping}\n                      className=\"w-10 h-10 flex items-center justify-center rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 active:scale-95 transition-all disabled:opacity-50 touch-manipulation\"\n                      title=\"Get ideas\"\n                    >\n                      <Lightbulb className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\n                    </button>\n                    \n                    {/* Send button - Touch optimized with circular shape */}\n                    <button\n                      onClick={handleSend}\n                      disabled={isTyping || !input.trim()}\n                      className={`w-10 h-10 flex items-center justify-center rounded-full transition-all duration-200 disabled:cursor-not-allowed active:scale-95 touch-manipulation ${\n                        input.trim() \n                          ? 'bg-primary-600 hover:bg-primary-700 active:bg-primary-800 text-white shadow-sm' \n                          : 'text-gray-300 dark:text-gray-600 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      }`}\n                    >\n                      <Send className=\"w-5 h-5\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* aria-live region for assistive feedback */}\n      <div className=\"sr-only\" aria-live=\"polite\">\n        {lastSavedKey ? 'Saved' : ''}\n      </div>\n\n      {/* Contextual Help Panel */}\n      <Suspense fallback={null}>\n      <ContextualHelpLazy\n        stage={projectState.stage}\n        isOpen={showContextualHelp}\n        onClose={() => setShowContextualHelp(false)}\n      />\n      </Suspense>\n\n      <BlueprintPreviewModal open={showPreview} onClose={() => setShowPreview(false)} blueprint={projectData} />\n    </div>\n    </div>\n  );\n};\n\nexport default ChatbotFirstInterfaceFixed;\n","/**\n * SOPTypes.ts - Single source of truth for ALF Coach data types\n * Based on the official SOP document structure\n */\n\n// ============= WIZARD TYPES =============\nexport interface WizardData {\n  vision: string;\n  subject: string;\n  students: string;\n  location?: string;\n  materials?: string;\n  teacherResources?: string;\n  scope: 'lesson' | 'unit' | 'course';\n}\n\n// ============= STAGE DATA TYPES =============\nexport interface IdeationData {\n  bigIdea: string;\n  essentialQuestion: string;\n  challenge: string;\n}\n\nexport interface JourneyPhase {\n  title: string;\n  description: string;\n}\n\nexport interface JourneyData {\n  phases: JourneyPhase[];\n  activities: string[];\n  resources: string[];\n}\n\nexport interface RubricCriteria {\n  criterion: string;\n  description: string;\n  weight: number;\n  levels?: {\n    excellent: string;\n    proficient: string;\n    developing: string;\n    beginning: string;\n  };\n}\n\nexport interface Milestone {\n  id: string;\n  title: string;\n  description: string;\n  phase: 'phase1' | 'phase2' | 'phase3';\n  weekNumber?: number;\n  deliverableType?: 'presentation' | 'document' | 'artifact' | 'performance' | 'other';\n  studentInstructions?: string;\n}\n\nexport interface DeliverablesData {\n  milestones: Milestone[];\n  rubric: {\n    criteria: RubricCriteria[];\n    totalPoints?: number;\n  };\n  impact: {\n    audience: string;\n    method: string;\n    purpose?: string;\n  };\n  timeline?: {\n    totalWeeks: number;\n    phaseDurations: {\n      phase1: number;\n      phase2: number;\n      phase3: number;\n    };\n  };\n  resources?: {\n    materials: string[];\n    technology: string[];\n    external: string[];\n  };\n}\n\n// ============= BLUEPRINT DOCUMENT =============\nexport interface BlueprintDoc {\n  id?: string;\n  name?: string; // Auto-generated project name\n  userId: string;\n  wizard: WizardData;\n  ideation: IdeationData;\n  journey: JourneyData;\n  deliverables: DeliverablesData;\n  timestamps: {\n    created: Date;\n    updated: Date;\n  };\n  schemaVersion: string;\n}\n\n// ============= SOP FLOW TYPES =============\nexport type SOPStage = 'WIZARD' | 'IDEATION' | 'JOURNEY' | 'DELIVERABLES' | 'COMPLETED';\n\nexport type SOPStep = \n  // Wizard steps\n  | 'WIZARD_VISION'\n  | 'WIZARD_SUBJECT' \n  | 'WIZARD_STUDENTS'\n  | 'WIZARD_LOCATION'\n  | 'WIZARD_SCOPE'\n  // Ideation steps\n  | 'IDEATION_INTRO'\n  | 'IDEATION_BIG_IDEA'\n  | 'IDEATION_EQ'\n  | 'IDEATION_CHALLENGE'\n  | 'IDEATION_CLARIFIER'\n  // Journey steps\n  | 'JOURNEY_INTRO'\n  | 'JOURNEY_BUILD'  // New integrated journey builder\n  | 'JOURNEY_PHASES'  // Legacy\n  | 'JOURNEY_ACTIVITIES'  // Legacy\n  | 'JOURNEY_RESOURCES'  // Legacy\n  | 'JOURNEY_CLARIFIER'\n  // Deliverables steps\n  | 'DELIVERABLES_INTRO'\n  | 'DELIVER_MILESTONES'\n  | 'DELIVER_RUBRIC'\n  | 'DELIVER_IMPACT'\n  | 'DELIVERABLES_CLARIFIER'\n  // Final\n  | 'COMPLETED';\n\n// ============= CONVERSATION TYPES =============\nexport type ChipAction = 'ideas' | 'whatif' | 'help' | 'continue' | 'refine' | 'edit' | 'proceed';\n\nexport interface QuickReply {\n  label: string;\n  action: ChipAction;\n}\n\nexport interface SuggestionCard {\n  id: string;\n  text: string;\n  category: 'idea' | 'whatif';\n}\n\nexport interface ChatMessage {\n  id: string;\n  role: 'user' | 'assistant';\n  content: string;\n  suggestions?: SuggestionCard[];\n  quickReplies?: QuickReply[];\n  timestamp: Date;\n}\n\n// ============= STATE MACHINE TYPES =============\nexport interface SOPFlowState {\n  currentStage: SOPStage;\n  currentStep: SOPStep;\n  stageStep?: number;\n  blueprintDoc: BlueprintDoc;\n  conversationHistory: ChatMessage[];\n  messages?: ChatMessage[];\n  allowedActions?: ChipAction[];\n  isTransitioning: boolean;\n  error?: string;\n}\n\n// ============= VALIDATION TYPES =============\nexport interface ValidationResult {\n  isValid: boolean;\n  errors?: string[];\n}\n\n// ============= METADATA =============\nexport const SOP_SCHEMA_VERSION = '1.0';\n\nexport const STAGE_METADATA: Record<SOPStage, { title: string; description: string }> = {\n  WIZARD: { \n    title: 'Project Setup', \n    description: 'Tell us about your learning goals' \n  },\n  IDEATION: { \n    title: 'Ideation', \n    description: 'Shape the big idea and challenge' \n  },\n  JOURNEY: { \n    title: 'Learning Journey', \n    description: 'Design the learning experience' \n  },\n  DELIVERABLES: { \n    title: 'Student Deliverables', \n    description: 'Define outcomes and assessment' \n  },\n  COMPLETED: { \n    title: 'Completed', \n    description: 'Your blueprint is ready!' \n  }\n};","/**\n * FirebaseService.ts - Clean Firebase integration for ALF Coach\n * Handles blueprint persistence with proper error handling\n */\n\nimport { \n  collection, \n  doc, \n  setDoc, \n  getDoc, \n  updateDoc,\n  serverTimestamp,\n  Timestamp\n} from 'firebase/firestore';\nimport { db, isOfflineMode } from '../../firebase/firebase';\nimport { BlueprintDoc } from '../types/SOPTypes';\n\nexport class FirebaseService {\n  private readonly collectionName = 'blueprints';\n  \n  /**\n   * Sanitize data for Firestore (remove undefined values)\n   */\n  private sanitizeForFirestore(obj: any): any {\n    if (obj === null || obj === undefined) {\n      return null;\n    }\n    \n    if (obj instanceof Date) {\n      return Timestamp.fromDate(obj);\n    }\n    \n    if (Array.isArray(obj)) {\n      return obj.map(item => this.sanitizeForFirestore(item));\n    }\n    \n    if (typeof obj === 'object') {\n      const sanitized: any = {};\n      for (const [key, value] of Object.entries(obj)) {\n        if (value !== undefined) {\n          sanitized[key] = this.sanitizeForFirestore(value);\n        }\n      }\n      return sanitized;\n    }\n    \n    return obj;\n  }\n  \n  /**\n   * Save a blueprint to Firebase\n   */\n  async saveBlueprint(blueprintId: string, blueprint: BlueprintDoc): Promise<void> {\n    if (isOfflineMode) {\n      // Fallback to localStorage\n      localStorage.setItem(`blueprint_${blueprintId}`, JSON.stringify(blueprint));\n      console.log('Blueprint saved to localStorage (offline mode)');\n      return;\n    }\n\n    try {\n      const docRef = doc(collection(db, this.collectionName), blueprintId);\n      \n      // Sanitize the blueprint and handle timestamps\n      const sanitizedBlueprint = this.sanitizeForFirestore(blueprint);\n      \n      // Update timestamps\n      const firestoreData = {\n        ...sanitizedBlueprint,\n        timestamps: {\n          created: sanitizedBlueprint.timestamps?.created || serverTimestamp(),\n          updated: serverTimestamp()\n        }\n      };\n      \n      await setDoc(docRef, firestoreData);\n      console.log('Blueprint saved to Firebase:', blueprintId);\n      console.log('Blueprint userId:', firestoreData.userId);\n    } catch (error) {\n      console.error('Error saving blueprint:', error);\n      // Fallback to localStorage\n      localStorage.setItem(`blueprint_${blueprintId}`, JSON.stringify(blueprint));\n      throw error;\n    }\n  }\n\n  /**\n   * Load a blueprint from Firebase\n   */\n  async loadBlueprint(blueprintId: string): Promise<BlueprintDoc | null> {\n    if (isOfflineMode) {\n      // Load from localStorage\n      const localData = localStorage.getItem(`blueprint_${blueprintId}`);\n      if (localData) {\n        const blueprint = JSON.parse(localData);\n        // Convert string dates back to Date objects\n        blueprint.timestamps.created = new Date(blueprint.timestamps.created);\n        blueprint.timestamps.updated = new Date(blueprint.timestamps.updated);\n        return blueprint;\n      }\n      return null;\n    }\n\n    try {\n      const docRef = doc(collection(db, this.collectionName), blueprintId);\n      const docSnap = await getDoc(docRef);\n      \n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        \n        // Convert Firestore timestamps to Dates\n        const blueprint: BlueprintDoc = {\n          ...data,\n          id: blueprintId,\n          timestamps: {\n            created: data.timestamps.created?.toDate() || new Date(),\n            updated: data.timestamps.updated?.toDate() || new Date()\n          }\n        } as BlueprintDoc;\n        \n        return blueprint;\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Error loading blueprint:', error);\n      // Try localStorage as fallback\n      const localData = localStorage.getItem(`blueprint_${blueprintId}`);\n      if (localData) {\n        const blueprint = JSON.parse(localData);\n        blueprint.timestamps.created = new Date(blueprint.timestamps.created);\n        blueprint.timestamps.updated = new Date(blueprint.timestamps.updated);\n        return blueprint;\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Update a blueprint in Firebase\n   */\n  async updateBlueprint(blueprintId: string, updates: Partial<BlueprintDoc>): Promise<void> {\n    if (isOfflineMode) {\n      // Update in localStorage\n      const existing = localStorage.getItem(`blueprint_${blueprintId}`);\n      if (existing) {\n        const blueprint = JSON.parse(existing);\n        const updated = { ...blueprint, ...updates };\n        localStorage.setItem(`blueprint_${blueprintId}`, JSON.stringify(updated));\n      }\n      return;\n    }\n\n    try {\n      const docRef = doc(collection(db, this.collectionName), blueprintId);\n      \n      await updateDoc(docRef, {\n        ...updates,\n        'timestamps.updated': serverTimestamp()\n      });\n      \n      console.log('Blueprint updated:', blueprintId);\n    } catch (error) {\n      console.error('Error updating blueprint:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Generate a new blueprint ID\n   */\n  generateBlueprintId(): string {\n    // More secure ID generation with crypto API\n    const timestamp = Date.now().toString(36);\n    const randomArray = new Uint8Array(16);\n    crypto.getRandomValues(randomArray);\n    const randomStr = Array.from(randomArray, byte => byte.toString(36)).join('').substr(0, 12);\n    return `bp_${timestamp}_${randomStr}`;\n  }\n\n  /**\n   * Auto-save helper - saves with debouncing\n   */\n  private saveTimeout: NodeJS.Timeout | null = null;\n  \n  autoSave(blueprintId: string, blueprint: BlueprintDoc, delayMs: number = 2000): void {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n    \n    this.saveTimeout = setTimeout(() => {\n      this.saveBlueprint(blueprintId, blueprint).catch(error => {\n        console.error('Auto-save failed:', error);\n      });\n    }, delayMs);\n  }\n  \n  /**\n   * Cleanup method to prevent memory leaks\n   */\n  destroy(): void {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n      this.saveTimeout = null;\n    }\n  }\n}\n\n// Export singleton instance\nexport const firebaseService = new FirebaseService();","/**\n * RevisionService.ts - Track changes and maintain history of blueprint edits\n */\n\nimport { BlueprintDoc } from '../types/SOPTypes';\n\nexport interface Revision {\n  id: string;\n  timestamp: Date;\n  blueprintId: string;\n  changes: ChangeRecord[];\n  author?: string;\n  comment?: string;\n  snapshot: BlueprintDoc;\n}\n\nexport interface ChangeRecord {\n  path: string; // e.g., \"ideation.bigIdea\"\n  oldValue: any;\n  newValue: any;\n  action: 'create' | 'update' | 'delete';\n}\n\nexport class RevisionService {\n  private revisions: Map<string, Revision[]> = new Map();\n  private currentRevision: Revision | null = null;\n  private maxRevisions = 50; // Keep last 50 revisions per blueprint\n\n  /**\n   * Start tracking changes for a new revision\n   */\n  startRevision(blueprintId: string, comment?: string): void {\n    this.currentRevision = {\n      id: `rev_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: new Date(),\n      blueprintId,\n      changes: [],\n      comment,\n      snapshot: {} as BlueprintDoc // Will be set when committing\n    };\n  }\n\n  /**\n   * Track a change\n   */\n  trackChange(path: string, oldValue: any, newValue: any): void {\n    if (!this.currentRevision) {\n      console.warn('No active revision to track changes');\n      return;\n    }\n\n    // Don't track if values are the same\n    if (JSON.stringify(oldValue) === JSON.stringify(newValue)) {\n      return;\n    }\n\n    const action = oldValue === undefined ? 'create' : \n                   newValue === undefined ? 'delete' : 'update';\n\n    this.currentRevision.changes.push({\n      path,\n      oldValue,\n      newValue,\n      action\n    });\n  }\n\n  /**\n   * Commit the current revision\n   */\n  commitRevision(currentSnapshot: BlueprintDoc): void {\n    if (!this.currentRevision || this.currentRevision.changes.length === 0) {\n      this.currentRevision = null;\n      return;\n    }\n\n    // Set the snapshot\n    this.currentRevision.snapshot = JSON.parse(JSON.stringify(currentSnapshot));\n\n    // Add to revisions list\n    const blueprintId = this.currentRevision.blueprintId;\n    if (!this.revisions.has(blueprintId)) {\n      this.revisions.set(blueprintId, []);\n    }\n\n    const revisionList = this.revisions.get(blueprintId)!;\n    revisionList.push(this.currentRevision);\n\n    // Limit revisions\n    if (revisionList.length > this.maxRevisions) {\n      revisionList.shift(); // Remove oldest\n    }\n\n    // Clear current revision\n    this.currentRevision = null;\n  }\n\n  /**\n   * Get revision history for a blueprint\n   */\n  getHistory(blueprintId: string): Revision[] {\n    return this.revisions.get(blueprintId) || [];\n  }\n\n  /**\n   * Get a specific revision\n   */\n  getRevision(blueprintId: string, revisionId: string): Revision | undefined {\n    const history = this.getHistory(blueprintId);\n    return history.find(r => r.id === revisionId);\n  }\n\n  /**\n   * Restore blueprint to a specific revision\n   */\n  restoreRevision(revisionId: string, blueprintId: string): BlueprintDoc | null {\n    const revision = this.getRevision(blueprintId, revisionId);\n    if (!revision) {\n      return null;\n    }\n\n    return JSON.parse(JSON.stringify(revision.snapshot));\n  }\n\n  /**\n   * Get change summary for display\n   */\n  getChangeSummary(revision: Revision): string {\n    const summary: string[] = [];\n    \n    revision.changes.forEach(change => {\n      const fieldName = this.getFieldDisplayName(change.path);\n      \n      switch (change.action) {\n        case 'create':\n          summary.push(`Added ${fieldName}`);\n          break;\n        case 'update':\n          summary.push(`Updated ${fieldName}`);\n          break;\n        case 'delete':\n          summary.push(`Removed ${fieldName}`);\n          break;\n      }\n    });\n\n    return summary.join(', ');\n  }\n\n  /**\n   * Get human-readable field name\n   */\n  private getFieldDisplayName(path: string): string {\n    const pathMap: Record<string, string> = {\n      'wizard.vision': 'Project Vision',\n      'wizard.subject': 'Subject',\n      'wizard.students': 'Student Grade Level',\n      'wizard.scope': 'Project Scope',\n      'ideation.bigIdea': 'Big Idea',\n      'ideation.essentialQuestion': 'Essential Question',\n      'ideation.challenge': 'Challenge',\n      'journey.phases': 'Journey Phases',\n      'journey.activities': 'Activities',\n      'journey.resources': 'Resources',\n      'deliverables.milestones': 'Milestones',\n      'deliverables.rubric': 'Assessment Rubric',\n      'deliverables.impact.audience': 'Target Audience',\n      'deliverables.impact.method': 'Presentation Method'\n    };\n\n    return pathMap[path] || path.split('.').pop() || path;\n  }\n\n  /**\n   * Compare two blueprints and generate changes\n   */\n  compareBlueprints(oldBlueprint: BlueprintDoc, newBlueprint: BlueprintDoc): ChangeRecord[] {\n    const changes: ChangeRecord[] = [];\n\n    // Helper to recursively compare objects\n    const compareObjects = (obj1: any, obj2: any, path: string) => {\n      // Get all keys from both objects\n      const allKeys = new Set([\n        ...Object.keys(obj1 || {}),\n        ...Object.keys(obj2 || {})\n      ]);\n\n      allKeys.forEach(key => {\n        const newPath = path ? `${path}.${key}` : key;\n        const val1 = obj1?.[key];\n        const val2 = obj2?.[key];\n\n        if (val1 === val2) return;\n\n        if (typeof val1 === 'object' && typeof val2 === 'object' && \n            val1 !== null && val2 !== null && \n            !Array.isArray(val1) && !Array.isArray(val2)) {\n          // Recursively compare objects\n          compareObjects(val1, val2, newPath);\n        } else if (JSON.stringify(val1) !== JSON.stringify(val2)) {\n          // Values are different\n          const action = val1 === undefined ? 'create' : \n                        val2 === undefined ? 'delete' : 'update';\n          \n          changes.push({\n            path: newPath,\n            oldValue: val1,\n            newValue: val2,\n            action\n          });\n        }\n      });\n    };\n\n    compareObjects(oldBlueprint, newBlueprint, '');\n    return changes;\n  }\n\n  /**\n   * Export revision history (for backup/analysis)\n   */\n  exportHistory(blueprintId: string): string {\n    const history = this.getHistory(blueprintId);\n    return JSON.stringify(history, null, 2);\n  }\n\n  /**\n   * Clear history for a blueprint\n   */\n  clearHistory(blueprintId: string): void {\n    this.revisions.delete(blueprintId);\n  }\n}\n\n// Singleton instance\nexport const revisionService = new RevisionService();","/**\n * AIResponseParser.ts\n * Robust parsing utility for extracting structured data from AI responses\n */\n\nimport { type SuggestionCard } from '../types/SOPTypes';\n\nexport class AIResponseParser {\n  /**\n   * Extract suggestion cards from AI response\n   */\n  static extractSuggestions(response: any): SuggestionCard[] {\n    // If already an array of suggestion cards, return as-is\n    if (Array.isArray(response)) {\n      return response.map((item, index) => ({\n        id: item.id || `suggestion_${index}`,\n        text: typeof item === 'string' ? item : (item.text || ''),\n        category: item.category || 'idea'\n      }));\n    }\n\n    // If response has suggestions property\n    if (response?.suggestions && Array.isArray(response.suggestions)) {\n      return response.suggestions.map((item: any, index: number) => ({\n        id: item.id || `suggestion_${index}`,\n        text: typeof item === 'string' ? item : (item.text || ''),\n        category: item.category || 'idea'\n      }));\n    }\n\n    // Try to extract from message content with numbered format\n    if (typeof response === 'string' || response?.message) {\n      const content = typeof response === 'string' ? response : response.message;\n      const suggestions: SuggestionCard[] = [];\n      \n      // Match numbered suggestions (1. Text, 2. Text, etc.)\n      const numberedPattern = /^\\d+\\.\\s*(.+)$/gm;\n      const matches = content.matchAll(numberedPattern);\n      \n      let index = 0;\n      for (const match of matches) {\n        suggestions.push({\n          id: `suggestion_${index}`,\n          text: match[1].trim(),\n          category: 'idea'\n        });\n        index++;\n      }\n      \n      if (suggestions.length > 0) {\n        return suggestions;\n      }\n\n      // Try bullet points\n      const bulletPattern = /^[•·-]\\s*(.+)$/gm;\n      const bulletMatches = content.matchAll(bulletPattern);\n      \n      index = 0;\n      for (const match of bulletMatches) {\n        suggestions.push({\n          id: `suggestion_${index}`,\n          text: match[1].trim(),\n          category: 'idea'\n        });\n        index++;\n      }\n      \n      return suggestions;\n    }\n\n    return [];\n  }\n\n  /**\n   * Extract list items from AI response (for phases, activities, resources)\n   */\n  static extractListItems(data: any, type: 'activities' | 'resources' | 'phases' | 'milestones'): string[] {\n    // If already an array of strings, return as-is\n    if (Array.isArray(data)) {\n      return data.map(item => {\n        if (typeof item === 'string') return item;\n        if (item?.text) return item.text;\n        if (item?.title) return item.title;\n        if (item?.name) return item.name;\n        return String(item);\n      });\n    }\n\n    // If it's a string, try to parse it\n    if (typeof data === 'string') {\n      const items: string[] = [];\n      \n      // Try numbered list (1. Item, 2. Item)\n      const numberedPattern = /^\\d+\\.\\s*(.+)$/gm;\n      const numberedMatches = data.matchAll(numberedPattern);\n      \n      for (const match of numberedMatches) {\n        items.push(match[1].trim());\n      }\n      \n      if (items.length > 0) return items;\n      \n      // Try bullet points\n      const bulletPattern = /^[•·-]\\s*(.+)$/gm;\n      const bulletMatches = data.matchAll(bulletPattern);\n      \n      for (const match of bulletMatches) {\n        items.push(match[1].trim());\n      }\n      \n      if (items.length > 0) return items;\n      \n      // Try newline separated items\n      const lines = data.split('\\n')\n        .map(line => line.trim())\n        .filter(line => line.length > 0)\n        .filter(line => !line.toLowerCase().includes('here are') && !line.includes(':'));\n      \n      if (lines.length > 0) return lines;\n      \n      // If nothing else works, return the whole string as single item\n      return [data];\n    }\n\n    // Handle object with specific properties\n    if (data && typeof data === 'object') {\n      if (data[type]) {\n        return this.extractListItems(data[type], type);\n      }\n      \n      // Try common property names\n      const possibleProps = ['items', 'list', 'data', 'content'];\n      for (const prop of possibleProps) {\n        if (data[prop]) {\n          return this.extractListItems(data[prop], type);\n        }\n      }\n    }\n\n    return [];\n  }\n\n  /**\n   * Extract structured phase data with titles and descriptions\n   */\n  static extractPhases(data: any): Array<{ title: string; description: string }> {\n    // If already properly structured\n    if (Array.isArray(data)) {\n      return data.map(item => {\n        if (typeof item === 'string') {\n          return { title: item, description: '' };\n        }\n        return {\n          title: item.title || item.name || 'Untitled Phase',\n          description: item.description || item.details || ''\n        };\n      });\n    }\n\n    // Parse from string\n    if (typeof data === 'string') {\n      const phases: Array<{ title: string; description: string }> = [];\n      \n      // Try to match phases with descriptions (Phase: Description format)\n      const phasePattern = /^(?:\\d+\\.\\s*)?([^:]+):\\s*(.+)$/gm;\n      const matches = data.matchAll(phasePattern);\n      \n      for (const match of matches) {\n        phases.push({\n          title: match[1].trim(),\n          description: match[2].trim()\n        });\n      }\n      \n      if (phases.length > 0) return phases;\n      \n      // Fall back to simple list\n      const items = this.extractListItems(data, 'phases');\n      return items.map(item => ({ title: item, description: '' }));\n    }\n\n    return [];\n  }\n\n  /**\n   * Extract rubric criteria\n   */\n  static extractRubricCriteria(data: any): Array<{ \n    criterion: string; \n    description: string; \n    weight?: number \n  }> {\n    if (Array.isArray(data)) {\n      return data.map(item => {\n        if (typeof item === 'string') {\n          return { criterion: item, description: '' };\n        }\n        return {\n          criterion: item.criterion || item.name || item.title || 'Criterion',\n          description: item.description || '',\n          weight: item.weight || item.points\n        };\n      });\n    }\n\n    if (data?.criteria) {\n      return this.extractRubricCriteria(data.criteria);\n    }\n\n    // Parse from string\n    const items = this.extractListItems(data, 'activities');\n    return items.map(item => ({ criterion: item, description: '' }));\n  }\n\n  /**\n   * Extract impact data (audience and method)\n   */\n  static extractImpactData(data: any): { \n    audience: string; \n    method: string; \n    purpose?: string \n  } {\n    // If already properly structured\n    if (data && typeof data === 'object') {\n      if (data.audience && data.method) {\n        return {\n          audience: data.audience,\n          method: data.method,\n          purpose: data.purpose || data.goal || ''\n        };\n      }\n    }\n\n    // Try to parse from string\n    if (typeof data === 'string') {\n      const audienceMatch = data.match(/audience[:\\s]+([^.!?\\n]+)/i);\n      const methodMatch = data.match(/method[:\\s]+([^.!?\\n]+)/i);\n      const shareMatch = data.match(/share[:\\s]+([^.!?\\n]+)/i);\n      \n      return {\n        audience: audienceMatch ? audienceMatch[1].trim() : '',\n        method: methodMatch ? methodMatch[1].trim() : (shareMatch ? shareMatch[1].trim() : ''),\n        purpose: ''\n      };\n    }\n\n    return { audience: '', method: '', purpose: '' };\n  }\n\n  /**\n   * Validate that extracted data meets minimum requirements\n   */\n  static validateExtractedData(data: any, type: string): boolean {\n    switch (type) {\n      case 'IDEATION_BIG_IDEA':\n        return typeof data === 'string' && data.length > 0;\n      \n      case 'JOURNEY_PHASES':\n        return Array.isArray(data) && data.length >= 1;\n      \n      case 'JOURNEY_ACTIVITIES':\n        return Array.isArray(data) && data.length >= 3;\n      \n      case 'JOURNEY_RESOURCES':\n        return Array.isArray(data) && data.length >= 1;\n      \n      case 'DELIVER_MILESTONES':\n        return Array.isArray(data) && data.length >= 2;\n      \n      case 'DELIVER_IMPACT':\n        return data?.audience && data?.method;\n      \n      default:\n        return true;\n    }\n  }\n}","/**\n * SOPFlowManager.ts - Single source of truth for conversation flow\n * Implements exact SOP document specification\n */\n\nimport { \n  type SOPFlowState, \n  type SOPStage, \n  type SOPStep, \n  type ChipAction,\n  type ChatMessage,\n  SuggestionCard,\n  type QuickReply,\n  type BlueprintDoc,\n  SOP_SCHEMA_VERSION\n} from './types/SOPTypes';\n// Avoid importing the full schema\ntype WizardData = any;\nimport { firebaseService } from './services/FirebaseService';\nimport { revisionService } from './services/RevisionService';\nimport { AIResponseParser } from './utils/AIResponseParser';\n// import { contentParsingService } from './services/ContentParsingService'; // Removed - was causing errors\n\nexport class SOPFlowManager {\n  private state: SOPFlowState;\n  private stateChangeListeners: ((state: SOPFlowState) => void)[] = [];\n  private readonly MAX_LISTENERS = 100; // Prevent memory leaks\n  private blueprintId: string;\n  private userId: string;\n  private autoSaveEnabled: boolean = true;\n\n  constructor(existingBlueprint?: BlueprintDoc, blueprintId?: string, userId?: string) {\n    this.blueprintId = blueprintId || firebaseService.generateBlueprintId();\n    this.userId = userId || 'anonymous';\n    this.state = this.initializeState(existingBlueprint);\n    \n    // If new blueprint, save initial state\n    if (!existingBlueprint && this.autoSaveEnabled) {\n      this.saveToFirebase();\n    }\n  }\n\n  // ============= INITIALIZATION =============\n  private initializeState(existingBlueprint?: BlueprintDoc): SOPFlowState {\n    if (existingBlueprint) {\n      // Resume existing blueprint - use saved step if available, otherwise detect\n      const savedStep = (existingBlueprint as any).currentStep;\n      const savedStage = (existingBlueprint as any).currentStage;\n      const savedStageStep = (existingBlueprint as any).stageStep;\n      \n      return {\n        currentStage: savedStage || this.detectCurrentStage(existingBlueprint),\n        currentStep: savedStep || this.detectCurrentStep(existingBlueprint),\n        stageStep: savedStageStep || 1,\n        blueprintDoc: existingBlueprint,\n        conversationHistory: [],\n        isTransitioning: false\n      };\n    }\n\n    // New blueprint\n    return {\n      currentStage: 'WIZARD',\n      currentStep: 'WIZARD_VISION',\n      stageStep: 1,\n      blueprintDoc: this.createEmptyBlueprint(),\n      conversationHistory: [],\n      messages: [],\n      allowedActions: ['continue'],\n      isTransitioning: false\n    };\n  }\n\n  private createEmptyBlueprint(): BlueprintDoc {\n    return {\n      userId: this.userId,\n      wizard: {\n        vision: '',\n        subject: '',\n        students: '',\n        location: '',\n        resources: '',\n        scope: 'unit'\n      },\n      ideation: {\n        bigIdea: '',\n        essentialQuestion: '',\n        challenge: ''\n      },\n      journey: {\n        phases: [],\n        activities: [],\n        resources: []\n      },\n      deliverables: {\n        milestones: [],\n        rubric: { criteria: [] },\n        impact: { audience: '', method: '' }\n      },\n      timestamps: {\n        created: new Date(),\n        updated: new Date()\n      },\n      schemaVersion: SOP_SCHEMA_VERSION\n    };\n  }\n\n  // ============= STATE MANAGEMENT =============\n  getState(): SOPFlowState {\n    return { ...this.state };\n  }\n\n  subscribe(listener: (state: SOPFlowState) => void): () => void {\n    if (this.stateChangeListeners.length >= this.MAX_LISTENERS) {\n      console.warn('Maximum listeners reached. Removing oldest listener.');\n      this.stateChangeListeners.shift(); // Remove oldest listener\n    }\n    this.stateChangeListeners.push(listener);\n    return () => {\n      this.stateChangeListeners = this.stateChangeListeners.filter(l => l !== listener);\n    };\n  }\n\n  private updateState(updates: Partial<SOPFlowState>) {\n    const oldState = { ...this.state };\n    this.state = { ...this.state, ...updates };\n    this.state.blueprintDoc.timestamps.updated = new Date();\n    \n    // Update allowed actions based on current state\n    this.state.allowedActions = this.calculateAllowedActions();\n    \n    // Log state changes\n    console.log('[SOPFlowManager] State updated:', {\n      oldStage: oldState.currentStage,\n      newStage: this.state.currentStage,\n      oldStep: oldState.currentStep,\n      newStep: this.state.currentStep,\n      updates: updates,\n      allowedActions: this.state.allowedActions\n    });\n    \n    // Log current blueprint data for debugging\n    console.log('[SOPFlowManager] Current blueprint data after update:', {\n      ideation: this.state.blueprintDoc.ideation,\n      journey: this.state.blueprintDoc.journey,\n      deliverables: this.state.blueprintDoc.deliverables\n    });\n    \n    this.notifyListeners();\n    \n    // Auto-save to Firebase\n    if (this.autoSaveEnabled) {\n      this.autoSave();\n    }\n  }\n  \n  private calculateAllowedActions(): ChipAction[] {\n    const { currentStep } = this.state;\n    \n    if (currentStep.includes('CLARIFIER')) {\n      return ['continue', 'refine', 'help'];\n    }\n    \n    // Check for actual step names\n    if (currentStep === 'IDEATION_BIG_IDEA' || currentStep === 'IDEATION_EQ' || currentStep === 'IDEATION_CHALLENGE' ||\n        currentStep === 'JOURNEY_PHASES' || currentStep === 'JOURNEY_ACTIVITIES' || currentStep === 'JOURNEY_RESOURCES' ||\n        currentStep === 'DELIVER_MILESTONES' || currentStep === 'DELIVER_RUBRIC' || currentStep === 'DELIVER_IMPACT') {\n      \n      // Base actions always available\n      const baseActions: ChipAction[] = ['ideas', 'whatif', 'help'];\n      \n      // Only add 'continue' if advancement validation passes\n      if (this.canAdvance()) {\n        baseActions.push('continue');\n      }\n      \n      return baseActions;\n    }\n    \n    return ['continue'];\n  }\n\n  private notifyListeners() {\n    this.stateChangeListeners.forEach(listener => listener(this.getState()));\n  }\n\n  // ============= STEP DETECTION =============\n  private detectCurrentStage(blueprint: BlueprintDoc): SOPStage {\n    // CRITICAL FIX: Safe property access with null checks for stage detection\n    const deliverables = blueprint.deliverables || {};\n    const impact = deliverables.impact || {};\n    const milestones = deliverables.milestones || [];\n    const rubricCriteria = deliverables.rubric?.criteria || [];\n    const phases = blueprint.journey?.phases || [];\n    const bigIdea = blueprint.ideation?.bigIdea || '';\n    \n    // Check for completion: all deliverables must be complete\n    if (impact.method && impact.audience && milestones.length >= 3 && rubricCriteria.length > 0) {\n      return 'COMPLETED';\n    }\n    \n    // Check if we're in deliverables stage\n    if (milestones.length > 0 || rubricCriteria.length > 0 || impact.audience || impact.method) {\n      return 'DELIVERABLES';\n    }\n    \n    if (phases.length > 0) {return 'JOURNEY';}\n    if (bigIdea) {return 'IDEATION';}\n    return 'WIZARD';\n  }\n\n  private detectCurrentStep(blueprint: BlueprintDoc): SOPStep {\n    // This would be more sophisticated in production\n    const stage = this.detectCurrentStage(blueprint);\n    switch (stage) {\n      case 'WIZARD':\n        if (!blueprint.wizard.vision) {return 'WIZARD_VISION';}\n        if (!blueprint.wizard.subject) {return 'WIZARD_SUBJECT';}\n        if (!blueprint.wizard.students) {return 'WIZARD_STUDENTS';}\n        return 'WIZARD_SCOPE';\n      case 'IDEATION':\n        if (!blueprint.ideation.bigIdea) {return 'IDEATION_BIG_IDEA';}\n        if (!blueprint.ideation.essentialQuestion) {return 'IDEATION_EQ';}\n        if (!blueprint.ideation.challenge) {return 'IDEATION_CHALLENGE';}\n        return 'IDEATION_CLARIFIER';\n      case 'JOURNEY':\n        // Check for new journey structure (with timeline and detailed phases)\n        if (blueprint.journey?.timeline?.milestones?.length > 0 && \n            blueprint.journey?.phases?.length > 0) {\n          // New structure is complete\n          return 'JOURNEY_CLARIFIER';\n        }\n        // Check for simplified structure (progression string)\n        if (blueprint.journey?.progression && blueprint.journey?.activities && blueprint.journey?.resources) {\n          return 'JOURNEY_CLARIFIER';\n        }\n        // Fallback to old structure check\n        if (blueprint.journey.phases?.length === 0) {return 'JOURNEY_PHASES';}\n        if (blueprint.journey.activities?.length === 0) {return 'JOURNEY_ACTIVITIES';}\n        if (blueprint.journey.resources?.length === 0) {return 'JOURNEY_RESOURCES';}\n        return 'JOURNEY_CLARIFIER';\n      case 'DELIVERABLES':\n        // CRITICAL FIX: Safe property access with null checks\n        const deliverables = blueprint.deliverables || {};\n        const milestones = deliverables.milestones || [];\n        const rubricCriteria = deliverables.rubric?.criteria || [];\n        const impact = deliverables.impact;\n        \n        if (milestones.length === 0) {return 'DELIVER_MILESTONES';}\n        if (rubricCriteria.length === 0) {return 'DELIVER_RUBRIC';}\n        if (!impact?.audience || impact.audience.length === 0) {return 'DELIVER_IMPACT';}\n        return 'DELIVERABLES_CLARIFIER';\n      default:\n        return 'COMPLETED';\n    }\n  }\n\n  // ============= NAVIGATION =============\n  canAdvance(): boolean {\n    // Check if current step has required data\n    const { currentStep, blueprintDoc } = this.state;\n    \n    const result = (() => {\n      switch (currentStep) {\n        case 'WIZARD_VISION':\n          return blueprintDoc.wizard.vision.length > 0;\n        case 'WIZARD_SUBJECT':\n          return blueprintDoc.wizard.subject.length > 0;\n        case 'WIZARD_STUDENTS':\n          return blueprintDoc.wizard.students.length > 0;\n        case 'IDEATION_BIG_IDEA':\n          return blueprintDoc.ideation.bigIdea.length > 0;\n        case 'IDEATION_EQ':\n          return blueprintDoc.ideation.essentialQuestion.length > 0;\n        case 'IDEATION_CHALLENGE':\n          return blueprintDoc.ideation.challenge.length > 0;\n        case 'JOURNEY_PHASES':\n          // Accept at least 1 phase (we can always add more later)\n          return blueprintDoc.journey.phases && blueprintDoc.journey.phases.length >= 1;\n        case 'JOURNEY_ACTIVITIES':\n          // Reduced from 3 to 2 for better UX\n          return blueprintDoc.journey.activities && blueprintDoc.journey.activities.length >= 2;\n        case 'JOURNEY_RESOURCES':\n          // Reduced from 3 to 1 to allow progression with single selection\n          return blueprintDoc.journey.resources && blueprintDoc.journey.resources.length >= 1;\n        case 'DELIVER_MILESTONES':\n          // CRITICAL FIX: Ensure milestones array exists and has sufficient items\n          const milestones = blueprintDoc.deliverables?.milestones || [];\n          console.log('[SOPFlowManager] Validating DELIVER_MILESTONES:', {\n            milestonesLength: milestones.length,\n            milestones: milestones,\n            canAdvance: milestones.length >= 3\n          });\n          return milestones.length >= 3;\n        case 'DELIVER_RUBRIC':\n          // CRITICAL FIX: Ensure rubric criteria array exists\n          const rubricCriteria = blueprintDoc.deliverables?.rubric?.criteria || [];\n          console.log('[SOPFlowManager] Validating DELIVER_RUBRIC:', {\n            criteriaLength: rubricCriteria.length,\n            canAdvance: rubricCriteria.length > 0\n          });\n          return rubricCriteria.length > 0;\n        case 'DELIVER_IMPACT':\n          // CRITICAL FIX: Ensure impact object exists with required fields\n          const impact = blueprintDoc.deliverables?.impact;\n          const hasAudience = impact?.audience && impact.audience.length > 0;\n          const hasMethod = impact?.method && impact.method.length > 0;\n          console.log('[SOPFlowManager] Validating DELIVER_IMPACT:', {\n            impact: impact,\n            hasAudience: hasAudience,\n            hasMethod: hasMethod,\n            canAdvance: hasAudience && hasMethod\n          });\n          return hasAudience && hasMethod;\n        // Clarifier stages always allow advancement\n        case 'IDEATION_CLARIFIER':\n        case 'JOURNEY_CLARIFIER':\n        case 'DELIVERABLES_CLARIFIER':\n          return true;\n        default:\n          return true;\n      }\n    })();\n    \n    return result;\n  }\n\n  advance(): void {\n    if (!this.canAdvance()) {\n      console.error('[SOPFlowManager] Cannot advance - validation failed for step:', {\n        currentStep: this.state.currentStep,\n        blueprintData: {\n          ideation: this.state.blueprintDoc.ideation,\n          journey: this.state.blueprintDoc.journey,\n          deliverables: this.state.blueprintDoc.deliverables\n        }\n      });\n      throw new Error('Cannot advance: current step incomplete');\n    }\n\n    console.log(`[SOPFlowManager] Advancing from ${this.state.currentStep}`, {\n      currentStage: this.state.currentStage,\n      currentStageStep: this.state.stageStep,\n      currentBlueprint: {\n        bigIdea: this.state.blueprintDoc.ideation?.bigIdea,\n        essentialQuestion: this.state.blueprintDoc.ideation?.essentialQuestion,\n        challenge: this.state.blueprintDoc.ideation?.challenge,\n        phases: this.state.blueprintDoc.journey?.phases,\n        activities: this.state.blueprintDoc.journey?.activities,\n        resources: this.state.blueprintDoc.journey?.resources,\n        milestones: this.state.blueprintDoc.deliverables?.milestones,\n        rubricCriteria: this.state.blueprintDoc.deliverables?.rubric?.criteria,\n        impactAudience: this.state.blueprintDoc.deliverables?.impact?.audience,\n        impactMethod: this.state.blueprintDoc.deliverables?.impact?.method\n      }\n    });\n\n    const nextStep = this.getNextStep();\n    if (nextStep) {\n      const nextStage = this.getStageForStep(nextStep);\n      const currentStageStep = this.state.stageStep || 1;\n      \n      // Calculate new stageStep\n      let newStageStep = currentStageStep;\n      if (nextStage === this.state.currentStage) {\n        // Same stage, increment step\n        newStageStep = currentStageStep + 1;\n      } else {\n        // New stage, reset to 1\n        newStageStep = 1;\n      }\n      \n      console.log(`[SOPFlowManager] Advancing to ${nextStep}`, {\n        nextStage: nextStage,\n        newStageStep: newStageStep,\n        stageTransition: nextStage !== this.state.currentStage\n      });\n      \n      this.updateState({\n        currentStep: nextStep,\n        currentStage: nextStage,\n        stageStep: newStageStep\n      });\n      \n      console.log(`[SOPFlowManager] Successfully advanced to ${nextStep}`, {\n        newState: {\n          stage: this.state.currentStage,\n          step: this.state.currentStep,\n          stageStep: this.state.stageStep\n        },\n        preservedBlueprint: {\n          bigIdea: this.state.blueprintDoc.ideation?.bigIdea,\n          essentialQuestion: this.state.blueprintDoc.ideation?.essentialQuestion,\n          challenge: this.state.blueprintDoc.ideation?.challenge\n        }\n      });\n    } else {\n      console.warn('[SOPFlowManager] No next step available, staying at current step');\n    }\n  }\n\n  private getNextStep(): SOPStep | null {\n    const stepOrder: SOPStep[] = [\n      // Wizard steps (if needed)\n      'WIZARD_VISION', 'WIZARD_SUBJECT', 'WIZARD_STUDENTS', \n      'WIZARD_LOCATION', 'WIZARD_SCOPE',\n      // Ideation (3 steps + clarifier)\n      'IDEATION_BIG_IDEA', 'IDEATION_EQ', 'IDEATION_CHALLENGE', 'IDEATION_CLARIFIER',\n      // Journey (3 steps + clarifier)\n      'JOURNEY_PHASES', 'JOURNEY_ACTIVITIES', 'JOURNEY_RESOURCES', 'JOURNEY_CLARIFIER',\n      // Deliverables (3 steps + clarifier)\n      'DELIVER_MILESTONES', 'DELIVER_RUBRIC', 'DELIVER_IMPACT', 'DELIVERABLES_CLARIFIER',\n      // Final\n      'COMPLETED'\n    ];\n\n    const currentIndex = stepOrder.indexOf(this.state.currentStep);\n    if (currentIndex === -1 || currentIndex === stepOrder.length - 1) {\n      return null;\n    }\n    return stepOrder[currentIndex + 1];\n  }\n\n  private getStageForStep(step: SOPStep): SOPStage {\n    if (step.startsWith('WIZARD')) {return 'WIZARD';}\n    if (step.startsWith('IDEATION')) {return 'IDEATION';}\n    if (step.startsWith('JOURNEY')) {return 'JOURNEY';}\n    if (step.startsWith('DELIVER')) {return 'DELIVERABLES';}\n    return 'COMPLETED';\n  }\n\n  // ============= DATA MANAGEMENT =============\n  async updateStepData(data: any): Promise<void> {\n    const { currentStep, blueprintDoc } = this.state;\n    \n    console.log(`[SOPFlowManager] updateStepData called for step: ${currentStep}`, { \n      inputData: data,\n      currentBlueprintState: {\n        ideation: blueprintDoc.ideation,\n        journey: blueprintDoc.journey,\n        deliverables: blueprintDoc.deliverables\n      }\n    });\n    \n    // Start tracking revision\n    revisionService.startRevision(this.blueprintId, `Updated ${currentStep}`);\n    \n    switch (currentStep) {\n      // Wizard steps\n      case 'WIZARD_VISION':\n        blueprintDoc.wizard.vision = data;\n        break;\n      case 'WIZARD_SUBJECT':\n        blueprintDoc.wizard.subject = data;\n        break;\n      case 'WIZARD_STUDENTS':\n        blueprintDoc.wizard.students = data;\n        break;\n      case 'WIZARD_LOCATION':\n        blueprintDoc.wizard.location = data;\n        break;\n      case 'WIZARD_SCOPE':\n        blueprintDoc.wizard.scope = data;\n        break;\n        \n      // Ideation steps\n      case 'IDEATION_BIG_IDEA':\n        // Extract and save Big Idea\n        const bigIdeaData = typeof data === 'string' ? data : (data?.text || data?.bigIdea || String(data));\n        console.log(`[SOPFlowManager] Processing Big Idea:`, {\n          originalData: data,\n          extractedBigIdea: bigIdeaData,\n          beforeSaving: blueprintDoc.ideation.bigIdea\n        });\n        blueprintDoc.ideation.bigIdea = bigIdeaData;\n        \n        // Auto-generate project name from Big Idea\n        if (bigIdeaData && !blueprintDoc.name) {\n          blueprintDoc.name = this.generateProjectName(bigIdeaData, blueprintDoc.wizard.subject);\n          console.log(`[SOPFlowManager] Generated project name:`, blueprintDoc.name);\n        }\n        \n        console.log(`[SOPFlowManager] Successfully saved Big Idea:`, {\n          savedValue: bigIdeaData,\n          fullIdeationSection: blueprintDoc.ideation\n        });\n        break;\n      case 'IDEATION_EQ':\n        // Extract and save Essential Question\n        const eqData = typeof data === 'string' ? data : (data?.text || data?.essentialQuestion || String(data));\n        console.log(`[SOPFlowManager] Processing Essential Question:`, {\n          originalData: data,\n          extractedEQ: eqData,\n          beforeSaving: blueprintDoc.ideation.essentialQuestion\n        });\n        blueprintDoc.ideation.essentialQuestion = eqData;\n        console.log(`[SOPFlowManager] Successfully saved Essential Question:`, {\n          savedValue: eqData,\n          fullIdeationSection: blueprintDoc.ideation\n        });\n        break;\n      case 'IDEATION_CHALLENGE':\n        // Extract and save Challenge\n        const challengeData = typeof data === 'string' ? data : (data?.text || data?.challenge || String(data));\n        console.log(`[SOPFlowManager] Processing Challenge:`, {\n          originalData: data,\n          extractedChallenge: challengeData,\n          beforeSaving: blueprintDoc.ideation.challenge\n        });\n        blueprintDoc.ideation.challenge = challengeData;\n        console.log(`[SOPFlowManager] Successfully saved Challenge:`, {\n          savedValue: challengeData,\n          fullIdeationSection: blueprintDoc.ideation\n        });\n        break;\n        \n      // Journey steps\n      case 'JOURNEY_PHASES':\n        // Parse and save phases with proper structure\n        // Handle both string format and pre-parsed phase format\n        let phases;\n        if (typeof data === 'string' && data.includes('Phase 1:')) {\n          // Multi-select format from JourneyPhaseSelector\n          phases = data.split('\\n').map(line => {\n            const match = line.match(/Phase \\d+: ([^-]+) - (.+)/);\n            if (match) {\n              return { title: match[1].trim(), description: match[2].trim() };\n            }\n            return null;\n          }).filter(Boolean);\n        } else {\n          phases = AIResponseParser.extractPhases(data);\n        }\n        blueprintDoc.journey.phases = phases;\n        break;\n      case 'JOURNEY_ACTIVITIES':\n        // Store as string in new simplified format\n        if (typeof data === 'string') {\n          // Store the raw string for simplified format\n          blueprintDoc.journey.activities = data;\n        } else if (Array.isArray(data)) {\n          // Convert array to string for simplified format\n          blueprintDoc.journey.activities = data.join(', ');\n        } else {\n          // Fallback - parse and convert to string\n          const activities = AIResponseParser.extractListItems(data, 'activities');\n          blueprintDoc.journey.activities = activities.join(', ');\n        }\n        break;\n      case 'JOURNEY_RESOURCES':\n        // Store as string in new simplified format\n        if (typeof data === 'string') {\n          // Store the raw string for simplified format\n          blueprintDoc.journey.resources = data;\n        } else if (Array.isArray(data)) {\n          // Convert array to string for simplified format\n          blueprintDoc.journey.resources = data.join(', ');\n        } else {\n          // Fallback - parse and convert to string\n          const resources = AIResponseParser.extractListItems(data, 'resources');\n          blueprintDoc.journey.resources = resources.join(', ');\n        }\n        break;\n        \n      // Deliverables steps\n      case 'DELIVER_MILESTONES':\n        // CRITICAL FIX: Ensure deliverables object exists and parse milestones properly\n        if (!blueprintDoc.deliverables) {\n          blueprintDoc.deliverables = {\n            milestones: [],\n            rubric: { criteria: [] },\n            impact: { audience: '', method: '' }\n          };\n        }\n        \n        // Parse milestones with better error handling\n        let milestones;\n        try {\n          if (Array.isArray(data)) {\n            // If data is already an array (from MilestoneSelector), use it directly\n            milestones = data.map(m => {\n              if (typeof m === 'string') return m;\n              // If it's an object with title/description, format it\n              return m.title || m.description || m.text || m;\n            });\n          } else if (typeof data === 'string') {\n            // Handle both direct milestone text and AI-processed milestone descriptions\n            if (data.includes('Milestone 1:') || data.includes('1.')) {\n              milestones = AIResponseParser.extractListItems(data, 'milestones');\n            } else {\n              // User provided a single milestone or general description\n              milestones = [data.trim()];\n            }\n          } else {\n            milestones = AIResponseParser.extractListItems(data, 'milestones');\n          }\n        } catch (error) {\n          console.warn('[SOPFlowManager] Error parsing milestones:', error);\n          milestones = typeof data === 'string' ? [data.trim()] : [];\n        }\n        \n        blueprintDoc.deliverables.milestones = milestones || [];\n        console.log('[SOPFlowManager] Saved milestones:', {\n          inputData: data,\n          parsedMilestones: milestones,\n          totalCount: milestones?.length || 0,\n          canAdvance: (milestones?.length || 0) >= 3\n        });\n        break;\n      case 'DELIVER_RUBRIC':\n        // CRITICAL FIX: Ensure deliverables.rubric exists and parse criteria properly\n        if (!blueprintDoc.deliverables) {\n          blueprintDoc.deliverables = {\n            milestones: [],\n            rubric: { criteria: [] },\n            impact: { audience: '', method: '' }\n          };\n        }\n        if (!blueprintDoc.deliverables.rubric) {\n          blueprintDoc.deliverables.rubric = { criteria: [] };\n        }\n        \n        // Parse rubric criteria with better error handling\n        let rubricCriteria;\n        try {\n          rubricCriteria = AIResponseParser.extractRubricCriteria(data);\n        } catch (error) {\n          console.warn('[SOPFlowManager] Error parsing rubric criteria:', error);\n          rubricCriteria = { criteria: [] };\n        }\n        \n        blueprintDoc.deliverables.rubric = rubricCriteria || { criteria: [] };\n        console.log('[SOPFlowManager] Saved rubric criteria:', {\n          inputData: data,\n          parsedCriteria: rubricCriteria,\n          criteriaCount: rubricCriteria?.criteria?.length || 0\n        });\n        break;\n      case 'DELIVER_IMPACT':\n        // CRITICAL FIX: Ensure deliverables.impact exists and parse impact properly\n        if (!blueprintDoc.deliverables) {\n          blueprintDoc.deliverables = {\n            milestones: [],\n            rubric: { criteria: [] },\n            impact: { audience: '', method: '' }\n          };\n        }\n        if (!blueprintDoc.deliverables.impact) {\n          blueprintDoc.deliverables.impact = { audience: '', method: '' };\n        }\n        \n        // Parse impact data with better error handling\n        let impactData;\n        try {\n          impactData = AIResponseParser.extractImpactData(data);\n        } catch (error) {\n          console.warn('[SOPFlowManager] Error parsing impact data:', error);\n          impactData = { audience: '', method: '' };\n        }\n        \n        blueprintDoc.deliverables.impact = impactData || { audience: '', method: '' };\n        console.log('[SOPFlowManager] Saved impact data:', {\n          inputData: data,\n          parsedImpact: impactData,\n          hasAudience: !!(impactData?.audience),\n          hasMethod: !!(impactData?.method)\n        });\n        break;\n        \n      default:\n        console.warn(`No handler for step: ${currentStep}`);\n    }\n\n    this.updateState({ blueprintDoc });\n    \n    // Log final state after all updates\n    console.log(`[SOPFlowManager] Final updateStepData result for ${currentStep}:`, {\n      stepCompleted: currentStep,\n      finalBlueprintState: {\n        ideation: this.state.blueprintDoc.ideation,\n        journey: this.state.blueprintDoc.journey,\n        deliverables: this.state.blueprintDoc.deliverables\n      },\n      canAdvanceAfterUpdate: this.canAdvance()\n    });\n    \n    // Commit the revision\n    revisionService.commitRevision(this.state.blueprintDoc);\n  }\n\n  completeWizard(data: WizardData): void {\n    // Update wizard data in blueprint with new simplified structure\n    this.state.blueprintDoc.wizard = {\n      vision: data.vision || '',\n      subject: data.subject || '',\n      students: data.gradeLevel || '',\n      location: '', // Optional, not collected in simplified wizard\n      resources: data.requiredResources || '', // Optional resources from accordion\n      scope: this.convertDurationToScope(data.duration)\n    };\n    \n    // Transition to first ideation step\n    this.updateState({\n      currentStage: 'IDEATION',\n      currentStep: 'IDEATION_BIG_IDEA',\n      stageStep: 1,\n      blueprintDoc: this.state.blueprintDoc\n    });\n    \n    this.notifyListeners();\n  }\n  \n  // Helper to convert new duration enum to legacy scope\n  private convertDurationToScope(duration: 'short' | 'medium' | 'long' | undefined): 'lesson' | 'unit' | 'course' {\n    switch (duration) {\n      case 'short': return 'lesson';\n      case 'medium': return 'unit';\n      case 'long': return 'course';\n      default: return 'unit';\n    }\n  }\n\n  // ============= CONVERSATION MANAGEMENT =============\n  addMessage(message: ChatMessage): void {\n    const conversationHistory = [...this.state.conversationHistory, message];\n    this.updateState({ conversationHistory });\n  }\n\n  // ============= ACTION VALIDATION =============\n  isActionAllowed(action: ChipAction): boolean {\n    const { currentStep } = this.state;\n    \n    // Stage initiators only allow 'continue'\n    if (currentStep.endsWith('_INTRO')) {\n      return action === 'continue';\n    }\n    \n    // Clarifiers allow continue, refine, help (not edit)\n    if (currentStep.endsWith('_CLARIFIER')) {\n      return ['continue', 'refine', 'help'].includes(action);\n    }\n    \n    // Sub-steps allow ideas, whatif, help, continue\n    return ['ideas', 'whatif', 'help', 'continue'].includes(action);\n  }\n\n  // ============= QUICK REPLY GENERATION =============\n  getQuickReplies(): QuickReply[] {\n    const { currentStep } = this.state;\n    \n    // Stage initiators\n    if (currentStep.endsWith('_INTRO')) {\n      return [{ label: 'Start', action: 'continue' }];\n    }\n    \n    // Clarifiers\n    if (currentStep.endsWith('_CLARIFIER')) {\n      return [\n        { label: 'Continue', action: 'continue' },\n        { label: 'Refine', action: 'refine' },\n        { label: 'Help', action: 'help' }\n      ];\n    }\n    \n    // Sub-steps\n    return [\n      { label: 'Ideas', action: 'ideas' },\n      { label: 'What-If', action: 'whatif' },\n      { label: 'Help', action: 'help' }\n    ];\n  }\n\n  // ============= PROGRESS CALCULATION =============\n  getProgress(): { percentage: number; currentStepNumber: number; totalSteps: number } {\n    // For stage-based progress (3 steps per stage)\n    const { currentStage, stageStep } = this.state;\n    \n    if (currentStage === 'WIZARD') {\n      return { percentage: 0, currentStepNumber: 0, totalSteps: 0 };\n    }\n    \n    if (currentStage === 'COMPLETED') {\n      return { percentage: 100, currentStepNumber: 3, totalSteps: 3 };\n    }\n    \n    // Each stage has 3 steps\n    const stepsPerStage = 3;\n    const currentStep = stageStep || 1;\n    const percentage = Math.round((currentStep / stepsPerStage) * 100);\n    \n    return {\n      percentage,\n      currentStepNumber: currentStep,\n      totalSteps: stepsPerStage\n    };\n  }\n\n  private calculateCompletedSteps(): number {\n    // This would calculate based on current step\n    // Simplified for now\n    const stepOrder: SOPStep[] = [\n      'WIZARD_VISION', 'WIZARD_SUBJECT', 'WIZARD_STUDENTS', \n      'WIZARD_LOCATION', 'WIZARD_SCOPE',\n      'IDEATION_INTRO', 'IDEATION_BIG_IDEA', 'IDEATION_EQ', \n      'IDEATION_CHALLENGE', 'IDEATION_CLARIFIER',\n      'JOURNEY_INTRO', 'JOURNEY_PHASES', 'JOURNEY_ACTIVITIES',\n      'JOURNEY_RESOURCES', 'JOURNEY_CLARIFIER',\n      'DELIVERABLES_INTRO', 'DELIVER_MILESTONES', 'DELIVER_RUBRIC',\n      'DELIVER_IMPACT', 'DELIVERABLES_CLARIFIER'\n    ];\n    \n    const currentIndex = stepOrder.indexOf(this.state.currentStep);\n    return currentIndex === -1 ? 0 : currentIndex;\n  }\n\n  // ============= STAGE RESET =============\n  resetToStageBeginning(): void {\n    const { currentStage } = this.state;\n    if (currentStage === 'WIZARD' || currentStage === 'COMPLETED') {\n      return;\n    }\n    \n    let firstStep: SOPStep;\n    switch (currentStage) {\n      case 'IDEATION':\n        firstStep = 'IDEATION_BIG_IDEA';\n        break;\n      case 'JOURNEY':\n        // For journey, we now use the builder which handles all steps internally\n        firstStep = 'JOURNEY_BUILD';\n        break;\n      case 'DELIVERABLES':\n        firstStep = 'DELIVER_MILESTONES';\n        break;\n      default:\n        return;\n    }\n    \n    this.updateState({\n      currentStep: firstStep,\n      stageStep: 1\n    });\n  }\n\n  // ============= FIREBASE PERSISTENCE =============\n  private saveToFirebase(): void {\n    // Include flow state information in the blueprint for persistence\n    const blueprintWithFlowState = {\n      ...this.state.blueprintDoc,\n      currentStep: this.state.currentStep,\n      currentStage: this.state.currentStage,\n      stageStep: this.state.stageStep\n    };\n    \n    firebaseService.saveBlueprint(this.blueprintId, blueprintWithFlowState)\n      .catch(error => {\n        console.error('Failed to save blueprint:', error);\n      });\n  }\n  \n  private autoSave(): void {\n    // Include flow state information in the blueprint for persistence\n    const blueprintWithFlowState = {\n      ...this.state.blueprintDoc,\n      currentStep: this.state.currentStep,\n      currentStage: this.state.currentStage,\n      stageStep: this.state.stageStep\n    };\n    \n    // Use debounced auto-save to avoid too many writes\n    firebaseService.autoSave(this.blueprintId, blueprintWithFlowState);\n  }\n  \n  async loadFromFirebase(blueprintId: string): Promise<boolean> {\n    try {\n      const blueprint = await firebaseService.loadBlueprint(blueprintId);\n      if (blueprint) {\n        this.blueprintId = blueprintId;\n        this.state = this.initializeState(blueprint);\n        this.notifyListeners();\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Failed to load blueprint:', error);\n      return false;\n    }\n  }\n  \n  getBlueprintId(): string {\n    return this.blueprintId;\n  }\n  \n  setAutoSaveEnabled(enabled: boolean): void {\n    this.autoSaveEnabled = enabled;\n  }\n\n  // ============= CLEANUP =============\n  destroy(): void {\n    // Clear listeners properly\n    this.stateChangeListeners.length = 0; // More efficient than creating new array\n    \n    // Stop auto-save\n    this.autoSaveEnabled = false;\n    \n    // Final save before cleanup\n    if (this.state.blueprintDoc) {\n      this.saveToFirebase();\n    }\n    \n    // Clean up Firebase service\n    firebaseService.destroy();\n  }\n\n  // ============= EXPORT =============\n  exportBlueprint(): BlueprintDoc {\n    return { ...this.state.blueprintDoc };\n  }\n\n  /**\n   * Generate a concise project name from Big Idea and subject\n   */\n  private generateProjectName(bigIdea: string, subject?: string): string {\n    // Extract key concepts from big idea (first 50 chars or first sentence)\n    let shortIdea = bigIdea.split('.')[0].substring(0, 50);\n    \n    // Remove common words\n    const commonWords = ['the', 'a', 'an', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'of', 'with', 'by'];\n    const words = shortIdea.toLowerCase().split(' ').filter(w => !commonWords.includes(w));\n    \n    // Take first 3-4 meaningful words\n    const keyWords = words.slice(0, 3).map(w => \n      w.charAt(0).toUpperCase() + w.slice(1)\n    ).join(' ');\n    \n    // Add subject if provided and not already in name\n    if (subject && !keyWords.toLowerCase().includes(subject.toLowerCase())) {\n      return `${subject}: ${keyWords}`;\n    }\n    \n    return keyWords || 'Untitled Project';\n  }\n\n  /**\n   * Update blueprint with partial data\n   */\n  updateBlueprint(updates: Partial<BlueprintDoc>): void {\n    // Start a new revision\n    revisionService.startRevision(this.blueprintId, 'Manual edit from blueprint viewer');\n    \n    // Track changes before applying them\n    const oldBlueprint = JSON.parse(JSON.stringify(this.state.blueprintDoc));\n    \n    // Deep merge the updates\n    if (updates.wizard) {\n      // Ensure wizard exists before accessing its properties\n      if (!this.blueprintDoc.wizard) {\n        this.blueprintDoc.wizard = {} as WizardData;\n      }\n      Object.keys(updates.wizard).forEach(key => {\n        const path = `wizard.${key}`;\n        revisionService.trackChange(\n          path, \n          this.blueprintDoc.wizard?.[key as keyof WizardData],\n          updates.wizard![key as keyof WizardData]\n        );\n      });\n      this.blueprintDoc.wizard = { ...this.blueprintDoc.wizard, ...updates.wizard };\n    }\n    if (updates.ideation) {\n      Object.keys(updates.ideation).forEach(key => {\n        const path = `ideation.${key}`;\n        revisionService.trackChange(\n          path,\n          this.blueprintDoc.ideation[key as keyof typeof this.blueprintDoc.ideation],\n          updates.ideation![key as keyof typeof updates.ideation]\n        );\n      });\n      this.blueprintDoc.ideation = { ...this.blueprintDoc.ideation, ...updates.ideation };\n    }\n    if (updates.journey) {\n      Object.keys(updates.journey).forEach(key => {\n        const path = `journey.${key}`;\n        revisionService.trackChange(\n          path,\n          this.blueprintDoc.journey[key as keyof typeof this.blueprintDoc.journey],\n          updates.journey![key as keyof typeof updates.journey]\n        );\n      });\n      this.blueprintDoc.journey = { ...this.blueprintDoc.journey, ...updates.journey };\n    }\n    if (updates.deliverables) {\n      Object.keys(updates.deliverables).forEach(key => {\n        const path = `deliverables.${key}`;\n        revisionService.trackChange(\n          path,\n          this.blueprintDoc.deliverables[key as keyof typeof this.blueprintDoc.deliverables],\n          updates.deliverables![key as keyof typeof updates.deliverables]\n        );\n      });\n      this.blueprintDoc.deliverables = { ...this.blueprintDoc.deliverables, ...updates.deliverables };\n    }\n    \n    this.blueprintDoc.timestamps.updated = new Date();\n    this.state.blueprintDoc = this.blueprintDoc;\n    \n    // Commit the revision\n    revisionService.commitRevision(this.state.blueprintDoc);\n    \n    this.notifyListeners();\n    \n    // Save to Firebase\n    this.saveToFirebase();\n  }\n}","// Suppress specific Firebase/Google API errors that are expected when running offline\n// or without proper Firebase configuration\n\n// Store original console methods\nconst originalError = console.error;\nconst originalWarn = console.warn;\n\n// List of error patterns to suppress\nconst suppressedPatterns = [\n  /Failed to load resource.*firestore\\.googleapis\\.com/i,\n  /400.*firestore\\.googleapis\\.com/i,\n  /FirebaseError: Missing or insufficient permissions/i,\n  /permission-denied/i,\n];\n\n// Override console.error\nconsole.error = function(...args) {\n  const message = args.join(' ');\n  \n  // Check if this error should be suppressed\n  const shouldSuppress = suppressedPatterns.some(pattern => pattern.test(message));\n  \n  if (!shouldSuppress) {\n    originalError.apply(console, args);\n  }\n};\n\n// Override console.warn  \nconsole.warn = function(...args) {\n  const message = args.join(' ');\n  \n  // Check if this warning should be suppressed\n  const shouldSuppress = suppressedPatterns.some(pattern => pattern.test(message));\n  \n  if (!shouldSuppress) {\n    originalWarn.apply(console, args);\n  }\n};\n\n// Intercept network errors for Firebase URLs\nif (typeof window !== 'undefined') {\n  const originalFetch = window.fetch;\n  \n  window.fetch = function(...args) {\n    const url = args[0];\n    \n    // Check if this is a Firebase/Google API URL\n    if (typeof url === 'string' && url.includes('firestore.googleapis.com')) {\n      // Return a rejected promise without logging\n      return Promise.reject(new Error('Firebase offline mode'));\n    }\n    \n    return originalFetch.apply(this, args);\n  };\n}\n\nexport function enableFirebaseErrorSuppression() {\n  // This function exists just to ensure the module is imported\n  console.log('Firebase error suppression enabled for offline mode');\n}","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useBlueprintDoc } from '../../hooks/useBlueprintDoc';\nimport { FSMProviderV2 } from '../../context/FSMContextV2';\nimport { ChatbotFirstInterfaceFixed } from '../../components/chat/ChatbotFirstInterfaceFixed';\nimport { featureFlags } from '../../utils/featureFlags';\nimport { SOPFlowManager } from '../../core/SOPFlowManager';\nimport { GeminiService } from '../../services/GeminiService';\nimport { ChatErrorBoundary } from '../../components/ErrorBoundary/ChatErrorBoundary';\nimport { auth } from '../../firebase/firebase';\nimport { signInAnonymously } from 'firebase/auth';\nimport '../../utils/suppressFirebaseErrors';\nimport type { WizardDataV3 } from '../wizard/wizardSchema';\nimport type { ProjectV3 } from '../../types/alf';\nimport { saveProjectDraft } from '../../services/projectPersistence';\nimport { mergeCapturedData, mergeProjectData, mergeWizardData } from '../../utils/draftMerge';\n\ntype DraftSnapshotPayload = {\n  wizardData?: Partial<WizardDataV3> | null;\n  capturedData?: Record<string, unknown> | null;\n  projectData?: Partial<ProjectV3> | null;\n  stage?: string;\n  source?: 'wizard' | 'chat' | 'import';\n};\n\nfunction combineSnapshots(\n  current: DraftSnapshotPayload | null,\n  next: DraftSnapshotPayload\n): DraftSnapshotPayload {\n  if (!current) {\n    return {\n      ...next,\n      wizardData: next.wizardData ?? null,\n      capturedData: next.capturedData ?? null,\n      projectData: next.projectData ?? null\n    };\n  }\n\n  const wizardData = mergeWizardData(current.wizardData ?? null, next.wizardData ?? null);\n  const projectData = mergeProjectData(current.projectData ?? null, next.projectData ?? null);\n  const capturedData = mergeCapturedData(current.capturedData ?? null, next.capturedData ?? null);\n\n  return {\n    ...current,\n    ...next,\n    wizardData,\n    capturedData,\n    projectData,\n    stage: next.stage ?? current.stage,\n    source: next.source ?? current.source\n  };\n}\n\nconst AUTOSAVE_INTERVAL_MS = 2500;\n\nconst LoadingSkeleton = () => {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 flex items-center justify-center p-6\">\n      <div className=\"text-center space-y-4\">\n        {/* Simple, elegant loading indicator */}\n        <div className=\"relative w-16 h-16 mx-auto\">\n          <div className=\"absolute inset-0 border-4 border-slate-200 rounded-full\" />\n          <div className=\"absolute inset-0 border-4 border-blue-600 rounded-full border-t-transparent animate-spin\" />\n        </div>\n        \n        <div className=\"space-y-2\">\n          <h2 className=\"text-lg font-medium text-slate-700\">Preparing your workspace</h2>\n          <p className=\"text-sm text-slate-500\">Just a moment...</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ErrorDisplay = ({ error, onRetry }: { error: Error; onRetry: () => void }) => {\n  const navigate = useNavigate();\n  \n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-6\">\n      <div className=\"max-w-2xl mx-auto\">\n        <div className=\"bg-white rounded-xl shadow-soft p-8\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto\">\n              <span className=\"text-2xl\">⚠️</span>\n            </div>\n            <h2 className=\"text-2xl font-bold text-slate-800\">Unable to Load Blueprint</h2>\n            <p className=\"text-slate-600\">{error.message}</p>\n            <div className=\"flex gap-3 justify-center pt-4\">\n              <button\n                onClick={onRetry}\n                className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\n              >\n                Try Again\n              </button>\n              <button\n                onClick={() => navigate('/app/dashboard')}\n                className=\"px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n              >\n                Back to Dashboard\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport function ChatLoader() {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // Generate the actual ID immediately if it's a new blueprint\n  const [actualId, setActualId] = useState(() => {\n    if (id?.startsWith('new-')) {\n      const newBlueprintId = `bp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      console.log('Created new blueprint ID:', newBlueprintId);\n      \n      // Create and save blueprint immediately for new blueprints\n      // Include ALL fields that ChatLoader expects\n      const newBlueprint = {\n        id: newBlueprintId,\n        wizardData: {\n          // V2 fields from wizardSchema.ts\n          entryPoint: 'learning_goal',\n          projectTopic: '',\n          learningGoals: '',\n          subjects: [],\n          primarySubject: '',\n          gradeLevel: '',\n          duration: 'medium',\n          pblExperience: 'some',\n          // Legacy fields that ChatLoader still expects\n          vision: 'balanced',\n          subject: '',\n          ageGroup: '',\n          students: '',\n          location: '',\n          materials: '',\n          resources: '',\n          scope: 'unit',\n          // Metadata\n          metadata: {\n            createdAt: new Date(),\n            lastModified: new Date(),\n            version: '2.0',\n            wizardCompleted: false,\n            skippedFields: []\n          },\n          conversationState: {\n            phase: 'wizard',\n            contextCompleteness: { core: 0, context: 0, progressive: 0 }\n          }\n        },\n        // Empty structures ChatLoader expects\n        ideation: {\n          bigIdea: '',\n          essentialQuestion: '',\n          challenge: ''\n        },\n        journey: {\n          phases: [],\n          activities: [],\n          resources: []\n        },\n        deliverables: {\n          milestones: [],\n          rubric: { criteria: [] },\n          impact: { audience: '', method: '' }\n        },\n        capturedData: {},\n        // V3 project data (will be populated by new wizard)\n        projectData: null,\n        // Timestamps\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        userId: auth.currentUser?.isAnonymous ? 'anonymous' : (auth.currentUser?.uid || 'anonymous'),\n        chatHistory: []\n      };\n      \n      // Save immediately to localStorage\n      const storageKey = `blueprint_${newBlueprintId}`;\n      console.log('Immediately saving new blueprint to localStorage with key:', storageKey);\n      localStorage.setItem(storageKey, JSON.stringify(newBlueprint));\n      \n      return newBlueprintId;\n    }\n    return id;\n  });\n  \n  const [flowManager, setFlowManager] = useState<SOPFlowManager | null>(null);\n  const [geminiService, setGeminiService] = useState<GeminiService | null>(null);\n  \n  console.log('ChatLoader initializing with id:', id, 'actualId:', actualId);\n  \n  // Update URL for new blueprints using React Router\n  useEffect(() => {\n    if (id?.startsWith('new-') && actualId?.startsWith('bp_')) {\n      // Preserve query params (e.g., ?skip=true) across redirect so chat can skip onboarding when requested\n      const search = location?.search || window.location.search || '';\n      navigate(`/app/blueprint/${actualId}${search}`, { replace: true });\n    }\n  }, [id, actualId, navigate, location]);\n  \n  // PRIORITY: Ensure authentication is ready before any save operations\n  const [authReady, setAuthReady] = useState(false);\n\n  useEffect(() => {\n    async function ensureAuthentication() {\n      try {\n        if (!auth.currentUser) {\n          console.log('[ChatLoader] No user authenticated, signing in anonymously...');\n          await signInAnonymously(auth);\n          console.log('[ChatLoader] Anonymous sign-in successful');\n        }\n        setAuthReady(true);\n      } catch (error) {\n        console.error('[ChatLoader] Anonymous sign-in failed:', error);\n        // Still mark as ready to continue with localStorage fallback\n        setAuthReady(true);\n      }\n    }\n\n    // Start authentication immediately on component mount\n    ensureAuthentication();\n  }, []);\n  \n  const { blueprint, loading, error, updateBlueprint, addMessage } = useBlueprintDoc(actualId || '');\n\n  const blueprintRef = useRef(blueprint);\n  useEffect(() => {\n    blueprintRef.current = blueprint;\n  }, [blueprint]);\n\n  const pendingSnapshotRef = useRef<DraftSnapshotPayload | null>(null);\n  const pendingResolversRef = useRef<Array<() => void>>([]);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n  const isPersistingRef = useRef(false);\n  const lastPersistTimeRef = useRef(0);\n\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      // Resolve any dangling promises to avoid hanging awaits on unmount\n      pendingResolversRef.current.splice(0).forEach(resolve => resolve());\n    };\n  }, []);\n\n  const flushSnapshot = useCallback(async () => {\n    const snapshot = pendingSnapshotRef.current;\n    const resolvers = pendingResolversRef.current.splice(0);\n    pendingSnapshotRef.current = null;\n\n    if (!snapshot) {\n      resolvers.forEach(resolve => resolve());\n      return;\n    }\n\n    const currentBlueprint = blueprintRef.current as any;\n    const mergedWizardData = mergeWizardData(currentBlueprint?.wizardData ?? null, snapshot.wizardData ?? null);\n    const mergedProjectData = mergeProjectData(currentBlueprint?.projectData ?? null, snapshot.projectData ?? null);\n    const mergedCapturedData = mergeCapturedData(currentBlueprint?.capturedData ?? null, snapshot.capturedData ?? null);\n    const currentUser = auth.currentUser;\n    const userId = currentUser?.isAnonymous ? 'anonymous' : currentUser?.uid;\n\n    if (!actualId || !userId) {\n      resolvers.forEach(resolve => resolve());\n      return;\n    }\n\n    isPersistingRef.current = true;\n\n    try {\n      await saveProjectDraft(\n        userId,\n        {\n          wizardData: mergedWizardData,\n          project: mergedProjectData,\n          capturedData: mergedCapturedData\n        },\n        {\n          draftId: actualId,\n          source: snapshot.source ?? 'chat',\n          metadata: {\n            stage: snapshot.stage,\n            title:\n              mergedWizardData?.projectTopic ||\n              mergedProjectData?.title ||\n              currentBlueprint?.wizardData?.projectTopic ||\n              currentBlueprint?.projectData?.title\n          }\n        }\n      );\n    } catch (err) {\n      console.error('[ChatLoader] Failed to persist project draft', err);\n    } finally {\n      lastPersistTimeRef.current = Date.now();\n      isPersistingRef.current = false;\n      resolvers.forEach(resolve => resolve());\n\n      if (pendingSnapshotRef.current && !timeoutRef.current) {\n        const elapsed = Date.now() - lastPersistTimeRef.current;\n        const delay = elapsed >= AUTOSAVE_INTERVAL_MS ? 0 : AUTOSAVE_INTERVAL_MS - elapsed;\n\n        timeoutRef.current = setTimeout(() => {\n          timeoutRef.current = null;\n          void flushSnapshot();\n        }, delay);\n      }\n    }\n  }, [actualId]);\n\n  const persistDraftSnapshot = useCallback(\n    (snapshot: DraftSnapshotPayload): Promise<void> => {\n      if (!actualId || !authReady) {\n        console.log('[ChatLoader] Skipping draft snapshot - auth not ready:', { actualId: !!actualId, authReady });\n        return Promise.resolve();\n      }\n\n      pendingSnapshotRef.current = combineSnapshots(pendingSnapshotRef.current, snapshot);\n\n      return new Promise<void>(resolve => {\n        pendingResolversRef.current.push(resolve);\n\n        if (isPersistingRef.current || timeoutRef.current) {\n          return;\n        }\n\n        const elapsed = Date.now() - lastPersistTimeRef.current;\n        const delay = elapsed >= AUTOSAVE_INTERVAL_MS ? 0 : AUTOSAVE_INTERVAL_MS - elapsed;\n\n        timeoutRef.current = setTimeout(() => {\n          timeoutRef.current = null;\n          void flushSnapshot();\n        }, delay);\n      });\n    },\n    [actualId, authReady, flushSnapshot]\n  );\n\n  // Initialize SOPFlowManager and GeminiService when blueprint is ready\n  useEffect(() => {\n    if (blueprint && !flowManager) {\n      console.log('Initializing SOPFlowManager and GeminiService with existing blueprint...');\n      \n      // CRITICAL FIX: Sync blueprint capturedData to chat service localStorage format\n      if (blueprint.capturedData) {\n        const chatServiceKey = `journey-v5-${actualId}`;\n        try {\n          localStorage.setItem(chatServiceKey, JSON.stringify(blueprint.capturedData));\n          console.log('[ChatLoader] Blueprint capturedData synced to chat service:', blueprint.capturedData);\n        } catch (error) {\n          console.error('[ChatLoader] Failed to sync blueprint capturedData to chat service:', error);\n        }\n      }\n      \n      // Convert blueprint data to SOPTypes.BlueprintDoc format\n      const sopBlueprintDoc = {\n        userId: blueprint.userId || 'anonymous',\n        wizard: {\n          vision: blueprint.wizardData?.vision || '',\n          subject: blueprint.wizardData?.subject || '',\n          students: blueprint.wizardData?.ageGroup || blueprint.wizardData?.students || '',\n          location: blueprint.wizardData?.location || '',\n          resources: blueprint.wizardData?.materials || blueprint.wizardData?.resources || '',\n          scope: blueprint.wizardData?.scope || 'unit'\n        },\n        ideation: blueprint.ideation || {\n          bigIdea: '',\n          essentialQuestion: '',\n          challenge: ''\n        },\n        journey: blueprint.journey || {\n          phases: [],\n          activities: [],\n          resources: []\n        },\n        deliverables: blueprint.deliverables || {\n          milestones: [],\n          rubric: { criteria: [] },\n          impact: { audience: '', method: '' }\n        },\n        timestamps: {\n          created: blueprint.createdAt || new Date(),\n          updated: blueprint.updatedAt || new Date()\n        },\n        schemaVersion: '1.0.0',\n        // Preserve saved flow state if available\n        currentStep: (blueprint as any).currentStep,\n        currentStage: (blueprint as any).currentStage,\n        stageStep: (blueprint as any).stageStep\n      };\n      \n      // Pass the existing blueprint to SOPFlowManager so it can detect the current step\n      const fm = new SOPFlowManager(sopBlueprintDoc, actualId, blueprint.userId);\n      const gs = new GeminiService();\n      setFlowManager(fm);\n      setGeminiService(gs);\n      \n      console.log('SOPFlowManager initialized with current step:', fm.getState().currentStep);\n    }\n  }, [blueprint, actualId]);\n\n  // Synchronize SOPFlowManager state changes with useBlueprintDoc persistence\n  useEffect(() => {\n    if (!flowManager) return;\n    \n    const handleFlowStateChange = async (flowState: any) => {\n      try {\n        // Convert SOPFlowManager blueprint format back to useBlueprintDoc format\n        const updatedBlueprint = {\n          ...blueprint,\n          // Update wizard data if it exists\n          wizardData: flowState.blueprintDoc?.wizard ? {\n            vision: flowState.blueprintDoc.wizard.vision || blueprint?.wizardData?.vision || '',\n            subject: flowState.blueprintDoc.wizard.subject || blueprint?.wizardData?.subject || '',\n            ageGroup: flowState.blueprintDoc.wizard.students || blueprint?.wizardData?.ageGroup || '',\n            location: flowState.blueprintDoc.wizard.location || blueprint?.wizardData?.location || '',\n            materials: flowState.blueprintDoc.wizard.resources || blueprint?.wizardData?.materials || '',\n            scope: flowState.blueprintDoc.wizard.scope || blueprint?.wizardData?.scope || 'unit'\n          } : blueprint?.wizardData,\n          // Copy over the structured blueprint data\n          ideation: flowState.blueprintDoc?.ideation,\n          journey: flowState.blueprintDoc?.journey,\n          deliverables: flowState.blueprintDoc?.deliverables,\n          // Preserve flow state for resuming\n          currentStep: flowState.currentStep,\n          currentStage: flowState.currentStage,\n          stageStep: flowState.stageStep,\n          updatedAt: new Date()\n        };\n        \n        // Update via useBlueprintDoc hook to ensure proper persistence\n        await updateBlueprint(updatedBlueprint);\n        console.log('Blueprint state synchronized with SOPFlowManager changes');\n      } catch (error) {\n        console.error('Failed to synchronize blueprint state:', error);\n      }\n    };\n\n    // Subscribe to SOPFlowManager state changes\n    const unsubscribe = flowManager.subscribe(handleFlowStateChange);\n    \n    return unsubscribe;\n  }, [flowManager, blueprint, updateBlueprint]);\n\n  console.log('Blueprint loading state:', { loading, error: error?.message, hasBlueprint: !!blueprint });\n\n  if (loading) {\n    return <LoadingSkeleton />;\n  }\n\n  if (error) {\n    console.error('Blueprint error:', error);\n    return (\n      <ErrorDisplay \n        error={error} \n        onRetry={() => { window.location.reload(); }}\n      />\n    );\n  }\n\n  // For new blueprints or missing data, render the chat interface anyway\n  // The onboarding wizard will handle the initial setup\n  if (!blueprint) {\n    console.log('No blueprint found, will show onboarding wizard');\n  }\n\n  console.log('Rendering chat with blueprint:', blueprint?.wizardData || 'No wizard data yet');\n\n  // Normalize wizard data to v2 shape before passing to chat UI\n  const chatBlueprint = blueprint ? { ...blueprint } : undefined;\n\n  return (\n    <ChatErrorBoundary \n      blueprintId={actualId}\n      onReset={() => window.location.reload()}\n    >\n      <div className=\"relative h-full w-full\">\n        <FSMProviderV2>\n          {/* Use FIXED interface with normalized wizard data */}\n          <ChatbotFirstInterfaceFixed\n          projectId={actualId}\n          projectData={chatBlueprint}\n          onStageComplete={async (stage, data) => {\n            console.log('[ChatLoader] Stage complete:', stage, data);\n            // Update blueprint with stage data\n          if (stage === 'onboarding') {\n            const wizardData = data?.wizardData as Partial<WizardDataV3> | undefined;\n            const projectSnapshot = data?.project as ProjectV3 | undefined;\n            const draftId = data?.draftId as string | undefined;\n\n            console.log('[ChatLoader] Saving wizard onboarding payload:', {\n              hasWizardData: Boolean(wizardData),\n              hasProject: Boolean(projectSnapshot),\n              draftId\n            });\n\n            const baseBlueprint = blueprint || {\n              id: actualId || '',\n              createdAt: new Date(),\n              userId: auth.currentUser?.isAnonymous ? 'anonymous' : (auth.currentUser?.uid || 'anonymous'),\n              chatHistory: [],\n              capturedData: {}\n            };\n\n            await updateBlueprint({\n              ...baseBlueprint,\n              wizardData: wizardData ?? baseBlueprint.wizardData ?? {},\n              projectData: projectSnapshot ?? (baseBlueprint as any).projectData ?? null,\n              draftId: draftId || (baseBlueprint as any).draftId,\n              updatedAt: new Date()\n            });\n\n            await persistDraftSnapshot({\n              wizardData: wizardData ?? baseBlueprint.wizardData ?? null,\n              projectData: projectSnapshot ?? (baseBlueprint as any).projectData ?? null,\n              capturedData: baseBlueprint.capturedData || null,\n              stage: stage,\n              source: 'wizard'\n            });\n            return;\n          } else if (['bigIdea', 'essentialQuestion', 'challenge', 'phases', 'activities', 'resources', 'milestones', 'rubric', 'deliverables'].includes(stage)) {\n            // Handle individual step completions - save to capturedData format\n            console.log('[ChatLoader] Saving individual step data:', { stage, data });\n            \n          // Create or update blueprint with captured data\n          const baseBlueprint = blueprint || {\n            id: actualId || '',\n            createdAt: new Date(),\n            userId: auth.currentUser?.isAnonymous ? 'anonymous' : (auth.currentUser?.uid || 'anonymous'),\n            chatHistory: [],\n            capturedData: {}\n          };\n          \n          // Ensure capturedData exists and merge new data\n          const currentCapturedData = baseBlueprint.capturedData || {};\n          const newCapturedData = { ...currentCapturedData };\n          const projectPatch = (data?.projectData as Partial<ProjectV3> | undefined) ?? undefined;\n              \n              // Save in the format expected by chat-service.ts\n          if (data.value) {\n            // Only map shorthand 'value' for known stages; otherwise rely on explicit dot-keys\n            const mapAllowed = ['bigIdea','essentialQuestion','challenge','phases','activities','resources','milestones','rubric','deliverables'].includes(stage);\n            Object.keys(data).forEach(key => {\n              if (key.includes('.')) {\n                newCapturedData[key] = data[key];\n              }\n            });\n            if (mapAllowed) {\n              const mappedKey = stage === 'bigIdea' || stage === 'essentialQuestion' || stage === 'challenge'\n                ? `ideation.${stage}`\n                : stage === 'phases' || stage === 'activities' || stage === 'resources'\n                ? `journey.${stage}`\n                : stage === 'milestones' || stage === 'rubric' || stage === 'deliverables'\n                ? `deliverables.${stage}`\n                : stage;\n              newCapturedData[mappedKey] = data.value;\n            }\n          }\n              \n              // Also save to structured format for compatibility\n              const updatedBlueprint = {\n                ...baseBlueprint,\n                capturedData: newCapturedData,\n                updatedAt: new Date()\n              };\n              \n              if (projectPatch && Object.keys(projectPatch).length > 0) {\n                const mergedProjectData = mergeProjectData((baseBlueprint as any).projectData ?? null, projectPatch);\n                if (mergedProjectData) {\n                  (updatedBlueprint as any).projectData = mergedProjectData;\n                }\n              }\n              \n              // Update ideation section for compatibility\n              if (['bigIdea', 'essentialQuestion', 'challenge'].includes(stage)) {\n                updatedBlueprint.ideation = {\n                  ...baseBlueprint.ideation,\n                  [stage]: data.value || data[stage] || ''\n                };\n              }\n              \n              // Update journey section for other stages\n              if (['phases', 'activities', 'resources'].includes(stage)) {\n                updatedBlueprint.journey = {\n                  ...baseBlueprint.journey,\n                  [stage]: data.value || data[stage] || ''\n                };\n              }\n              \n              // Update deliverables section\n              if (['milestones', 'rubric', 'deliverables'].includes(stage)) {\n                updatedBlueprint.deliverables = {\n                  ...baseBlueprint.deliverables,\n                  [stage]: data.value || data[stage] || ''\n                };\n            }\n            \n            await updateBlueprint(updatedBlueprint);\n            console.log('[ChatLoader] Individual step data saved to capturedData:', newCapturedData);\n\n            // CRITICAL: Also sync with chat-service localStorage format\n            const chatServiceKey = `journey-v5-${actualId}`;\n            try {\n              localStorage.setItem(chatServiceKey, JSON.stringify(newCapturedData));\n              console.log('[ChatLoader] Data also synced to chat service localStorage key:', chatServiceKey);\n            } catch (error) {\n              console.error('[ChatLoader] Failed to sync with chat service storage:', error);\n            }\n            await persistDraftSnapshot({\n              wizardData: baseBlueprint.wizardData || blueprint?.wizardData,\n              capturedData: newCapturedData,\n              projectData: projectPatch ?? null,\n              stage,\n              source: 'chat'\n            });\n\n          } else {\n            // For other stages, update normally with null safety\n            if (blueprint) {\n              const dotCaptured: Record<string, any> = {};\n              Object.keys(data || {}).forEach(key => {\n                if (key.includes('.')) {\n                  dotCaptured[key] = (data as any)[key];\n                }\n              });\n              const mergedCaptured = Object.keys(dotCaptured).length\n                ? {\n                    ...((blueprint as any)?.capturedData || {}),\n                    ...dotCaptured\n                  }\n                : (blueprint as any)?.capturedData;\n\n              await updateBlueprint({\n                ...blueprint,\n                ...data,\n                capturedData: mergedCaptured,\n                updatedAt: new Date()\n              });\n\n              await persistDraftSnapshot({\n                wizardData: (data as any).wizardData || blueprint.wizardData,\n                capturedData: mergedCaptured || null,\n                projectData: (blueprint as any)?.projectData || null,\n                stage,\n                source: 'chat'\n              });\n            } else {\n              console.warn('[ChatLoader] Cannot update - blueprint is null');\n              await persistDraftSnapshot({\n                wizardData: (data as any).wizardData || null,\n                capturedData: null,\n                projectData: null,\n                stage,\n                source: 'chat'\n              });\n            }\n          }\n          }}\n          onNavigate={(view, projectId) => {\n            console.log('[ChatLoader] Navigate:', view, projectId);\n            if (view === 'dashboard') {\n              navigate('/app/dashboard');\n            }\n          }}\n          />\n        </FSMProviderV2>\n      </div>\n    </ChatErrorBoundary>\n  );\n}\n\n// Default export for lazy loading\nexport default ChatLoader;\n","/**\n * ProgressSidebar.tsx\n * Slim, collapsible progress sidebar for tracking journey stages\n */\n\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ChevronRight, Check, Circle, Clock, FileText, Lightbulb, Map, Target, Download } from 'lucide-react';\n\nexport interface Stage {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  status: 'pending' | 'in-progress' | 'completed';\n  substeps?: {\n    id: string;\n    label: string;\n    completed: boolean;\n  }[];\n}\n\ninterface ProgressSidebarProps {\n  stages: Stage[];\n  currentStageId: string;\n  isCollapsed?: boolean;\n  onToggleCollapse?: () => void;\n  onStageClick?: (stageId: string) => void;\n  onEditStage?: (stageId: string) => void;\n  className?: string;\n}\n\nexport const ProgressSidebar: React.FC<ProgressSidebarProps> = ({\n  stages,\n  currentStageId,\n  isCollapsed = false,\n  onToggleCollapse,\n  onStageClick,\n  onEditStage,\n  className = ''\n}) => {\n  const [hoveredStage, setHoveredStage] = useState<string | null>(null);\n  const [hoveredPosition, setHoveredPosition] = useState<number>(0);\n  \n  // Check if this is being used in mobile mode (no shadow/border styling)\n  const isMobileMode = className.includes('border-none shadow-none');\n\n  const getStageIcon = (stage: Stage) => {\n    if (stage.status === 'completed') {\n      return <Check className=\"w-5 h-5 text-green-600 dark:text-green-400\" />;\n    }\n    if (stage.id === currentStageId) {\n      return <Clock className=\"w-5 h-5 text-primary-600 dark:text-primary-400 animate-pulse\" />;\n    }\n    return <Circle className=\"w-5 h-5 text-gray-400 dark:text-gray-500\" />;\n  };\n\n  const getStageProgress = (stage: Stage): number => {\n    if (!stage.substeps || stage.substeps.length === 0) return 0;\n    const completed = stage.substeps.filter(s => s.completed).length;\n    return (completed / stage.substeps.length) * 100;\n  };\n\n  return (\n    <motion.aside\n      className={`bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm transition-all duration-300 ${\n        isMobileMode\n          ? 'w-full h-full'\n          : 'shadow-sm border border-gray-200/50 dark:border-gray-700/50 flex flex-col'\n      } ${className}`}\n      initial={false}\n      animate={isMobileMode ? {} : {\n        width: isCollapsed ? 48 : 240,\n        borderRadius: isCollapsed ? '24px' : '16px'\n      }}\n      style={isMobileMode ? {} : {\n        height: '100%',\n        marginLeft: '6px',\n        marginTop: '6px',\n        marginBottom: '6px'\n      }}\n    >\n      {/* Toggle Button - Hide in mobile mode */}\n      {!isMobileMode && (\n        <div className=\"p-2\">\n          <button\n            onClick={onToggleCollapse}\n            className={`p-1.5 hover:bg-gray-100 dark:hover:bg-gray-700/50 transition-colors w-full flex justify-center ${\n              isCollapsed ? 'rounded-full' : 'rounded-lg'\n            }`}\n            aria-label={isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n          >\n            <ChevronRight\n              className={`w-4 h-4 text-gray-500 dark:text-gray-400 transition-transform ${\n                isCollapsed ? '' : 'rotate-180'\n              }`}\n            />\n          </button>\n        </div>\n      )}\n\n      {/* Progress Stages - Mobile-optimized container */}\n      <div className={`py-2 ${isMobileMode ? 'px-2' : isCollapsed ? 'px-1' : 'px-0'}`}>\n        {stages.map((stage, index) => {\n          const isActive = stage.id === currentStageId;\n          const progress = getStageProgress(stage);\n          \n          return (\n            <div key={stage.id}>\n              {/* Stage Item - Mobile-optimized */}\n              <motion.div\n                className={`relative flex items-center cursor-pointer transition-all touch-manipulation ${\n                  isActive\n                    ? 'bg-gray-100 dark:bg-gray-700/50 border-l-2 border-gray-400 dark:border-gray-500'\n                    : 'hover:bg-gray-50 dark:hover:bg-gray-700/30'\n                } ${\n                  isMobileMode\n                    ? 'rounded-lg my-0.5 mx-1 px-2 py-2'\n                    : isCollapsed\n                      ? 'rounded-full my-0.5 mx-auto w-8 h-8 justify-center'\n                      : 'rounded-lg my-0.5 mx-1 px-2 py-2'\n                }`}\n                onClick={() => onStageClick?.(stage.id)}\n                onMouseEnter={(e) => {\n                  setHoveredStage(stage.id);\n                  const rect = e.currentTarget.getBoundingClientRect();\n                  setHoveredPosition(rect.top + rect.height / 2);\n                }}\n                onMouseLeave={() => setHoveredStage(null)}\n                whileHover={{ scale: 1.01 }}\n                style={isMobileMode ? {} : {\n                  border: isActive ? '1px solid rgb(156 163 175)' : '1px solid transparent'\n                }}\n              >\n                {/* Icon Section */}\n                <div className=\"flex items-center justify-center w-6 h-6\">\n                  {isCollapsed ? (\n                    <div className=\"relative\">\n                      {getStageIcon(stage)}\n                      {/* Progress indicator for collapsed state */}\n                      {progress > 0 && progress < 100 && (\n                        <div\n                          className=\"absolute -bottom-0.5 left-0 right-0 h-0.5 bg-gray-200 dark:bg-gray-600 rounded-full overflow-hidden\"\n                        >\n                          <div\n                            className=\"h-full bg-gray-500 dark:bg-gray-400 transition-all\"\n                            style={{ width: `${progress}%` }}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"text-gray-500 dark:text-gray-400\">{stage.icon}</div>\n                  )}\n                </div>\n\n                {/* Expanded Content */}\n                <AnimatePresence>\n                  {!isCollapsed && (\n                    <motion.div\n                      initial={{ opacity: 0, x: -10 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      exit={{ opacity: 0, x: -10 }}\n                      className=\"ml-3 flex-1\"\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span className={`font-medium text-xs ${\n                          isActive ? 'text-gray-900 dark:text-gray-100' : 'text-gray-600 dark:text-gray-400'\n                        }`}>\n                          {stage.label}\n                        </span>\n                        <div className=\"flex items-center gap-1\">\n                          {getStageIcon(stage)}\n                        </div>\n                      </div>\n                      \n                      {/* Progress Bar - Simplified style */}\n                      {progress > 0 && (\n                        <div className=\"mt-1 h-1 bg-gray-200 dark:bg-gray-600 rounded-full overflow-hidden\">\n                          <motion.div\n                            className=\"h-full bg-gray-500 dark:bg-gray-400 rounded-full\"\n                            initial={{ width: 0 }}\n                            animate={{ width: `${progress}%` }}\n                            transition={{ duration: 0.3, ease: \"easeOut\" }}\n                          />\n                        </div>\n                      )}\n                      \n                      {/* Substeps (show on hover) */}\n                      {hoveredStage === stage.id && stage.substeps && stage.substeps.length > 0 && (\n                        <motion.div\n                          initial={{ height: 0, opacity: 0 }}\n                          animate={{ height: 'auto', opacity: 1 }}\n                          exit={{ height: 0, opacity: 0 }}\n                          className=\"mt-2 ml-2 space-y-1\"\n                        >\n                          {stage.substeps.map(substep => (\n                            <div \n                              key={substep.id}\n                              className=\"flex items-center gap-2 text-xs text-gray-600 dark:text-gray-400\"\n                            >\n                              <div className={`w-1.5 h-1.5 rounded-full ${\n                                substep.completed ? 'bg-green-500 dark:bg-green-400' : 'bg-gray-300 dark:bg-gray-600'\n                              }`} />\n                              <span className={substep.completed ? 'line-through' : ''}>\n                                {substep.label}\n                              </span>\n                            </div>\n                          ))}\n                        </motion.div>\n                      )}\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </motion.div>\n\n              {/* Connector Line - Minimal style */}\n              {index < stages.length - 1 && !isCollapsed && (\n                <div className=\"flex justify-center\">\n                  <div className={`h-2 w-px ${\n                    stage.status === 'completed' ? 'bg-gray-300 dark:bg-gray-600' : 'bg-gray-200 dark:bg-gray-700'\n                  }`} />\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Collapsed State Tooltip - Fixed alignment and light mode colors */}\n      {isCollapsed && hoveredStage && (\n        <motion.div\n          initial={{ opacity: 0, x: -10 }}\n          animate={{ opacity: 1, x: 0 }}\n          className=\"fixed left-16 z-50 bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-4 py-2 rounded-full text-sm shadow-lg border border-gray-200 dark:border-gray-700\"\n          style={{\n            // Use the captured position for perfect alignment\n            top: hoveredPosition - 16, // Offset by half the tooltip height\n            transform: 'translateY(-50%)'\n          }}\n        >\n          {stages.find(s => s.id === hoveredStage)?.label}\n          {/* Arrow pointer - update colors for light/dark mode */}\n          <div className=\"absolute right-full top-1/2 -translate-y-1/2 w-0 h-0 border-t-4 border-b-4 border-r-4 border-transparent border-r-white dark:border-r-gray-800\" />\n        </motion.div>\n      )}\n    </motion.aside>\n  );\n};\n\nexport default ProgressSidebar;\n","/**\n * useIdleDetection.ts\n * Custom hook for detecting user idle state in chat interface\n */\n\nimport { useState, useEffect, useCallback } from 'react';\n\ninterface UseIdleDetectionOptions {\n  threshold?: number; // milliseconds before considered idle\n  onIdle?: () => void;\n  onActive?: () => void;\n  disabled?: boolean;\n}\n\nexport const useIdleDetection = (\n  lastInteractionTime: number,\n  options: UseIdleDetectionOptions = {}\n) => {\n  const {\n    threshold = 15000, // 15 seconds default\n    onIdle,\n    onActive,\n    disabled = false\n  } = options;\n\n  const [isIdle, setIsIdle] = useState(false);\n  const [idleTime, setIdleTime] = useState(0);\n\n  useEffect(() => {\n    if (disabled) {\n      setIsIdle(false);\n      setIdleTime(0);\n      return;\n    }\n\n    let intervalId: NodeJS.Timeout;\n\n    const checkIdleState = () => {\n      const now = Date.now();\n      const timeSinceLastInteraction = now - lastInteractionTime;\n      \n      setIdleTime(timeSinceLastInteraction);\n      \n      const wasIdle = isIdle;\n      const nowIdle = timeSinceLastInteraction > threshold;\n      \n      if (nowIdle !== wasIdle) {\n        setIsIdle(nowIdle);\n        \n        if (nowIdle && onIdle) {\n          onIdle();\n        } else if (!nowIdle && onActive) {\n          onActive();\n        }\n      }\n    };\n\n    // Initial check\n    checkIdleState();\n\n    // Set up interval for continuous checking\n    intervalId = setInterval(checkIdleState, 1000);\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [lastInteractionTime, threshold, disabled, isIdle, onIdle, onActive]);\n\n  const resetIdle = useCallback(() => {\n    setIsIdle(false);\n    setIdleTime(0);\n  }, []);\n\n  return {\n    isIdle,\n    idleTime,\n    idleSeconds: Math.floor(idleTime / 1000),\n    resetIdle\n  };\n};\n\nexport default useIdleDetection;","/**\n * UIGuidanceSystemV2.tsx\n * Improved UI guidance with inline contextual buttons instead of floating buttons\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Lightbulb, HelpCircle, X, ChevronRight, Sparkles } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useIdleDetection } from '../../hooks/useIdleDetection';\nimport { getHelpContent, getContextualHelp } from '../../utils/helpContent';\nimport { getStageSuggestions, getRandomSuggestions } from '../../utils/suggestionContent';\n\ninterface Suggestion {\n  id: string;\n  text: string;\n  category: 'idea' | 'whatif' | 'resource';\n}\n\ninterface UIGuidanceSystemV2Props {\n  currentStage: string;\n  currentStep?: string;\n  userContext?: {\n    subject?: string;\n    ageGroup?: string;\n    location?: string;\n    educatorPerspective?: string;\n  };\n  onSuggestionSelect: (suggestion: string) => void;\n  inputValue?: string;\n  lastInteractionTime?: number;\n  isWaiting?: boolean;\n  messageId?: string; // To associate with specific message\n  messageContent?: string; // For contextual help\n}\n\n// Inline button component for chat messages\nexport const InlineActionButton: React.FC<{\n  type: 'ideas' | 'help';\n  onClick: () => void;\n  label?: string;\n}> = ({ type, onClick, label }) => {\n  const Icon = type === 'ideas' ? Lightbulb : HelpCircle;\n  const defaultLabel = type === 'ideas' ? 'Get Ideas' : 'Learn More';\n  \n  return (\n    <motion.button\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n      onClick={onClick}\n      className={`inline-flex items-center gap-1.5 px-3 py-1.5 text-sm font-medium rounded-lg transition-all ${\n        type === 'ideas' \n          ? 'bg-gradient-to-r from-purple-50 to-pink-50 text-purple-700 hover:from-purple-100 hover:to-pink-100 border border-purple-200'\n          : 'bg-gradient-to-r from-blue-50 to-indigo-50 text-primary-700 hover:from-blue-100 hover:to-indigo-100 border border-primary-200'\n      }`}\n    >\n      <Icon className=\"w-4 h-4\" />\n      <span>{label || defaultLabel}</span>\n    </motion.button>\n  );\n};\n\n// Suggestion card component for inline display\nexport const InlineSuggestionCards: React.FC<{\n  suggestions: Suggestion[];\n  onSelect: (suggestion: Suggestion) => void;\n  onDismiss: () => void;\n}> = ({ suggestions, onSelect, onDismiss }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: -10, height: 0 }}\n      animate={{ opacity: 1, y: 0, height: 'auto' }}\n      exit={{ opacity: 0, y: -10, height: 0 }}\n      className=\"mt-3 p-4 bg-gradient-to-br from-gray-50 to-white rounded-xl border border-gray-200 shadow-sm\"\n    >\n      <div className=\"flex items-center justify-between mb-3\">\n        <div className=\"flex items-center gap-2\">\n          <Sparkles className=\"w-4 h-4 text-purple-600\" />\n          <span className=\"text-sm font-semibold text-gray-700\">Suggestions</span>\n        </div>\n        <button\n          onClick={onDismiss}\n          className=\"p-1 hover:bg-gray-100 rounded-lg transition-colors\"\n          aria-label=\"Dismiss suggestions\"\n        >\n          <X className=\"w-4 h-4 text-gray-500\" />\n        </button>\n      </div>\n      \n      <div className=\"grid gap-2\">\n        {suggestions.map((suggestion) => (\n          <motion.button\n            key={suggestion.id}\n            whileHover={{ x: 4 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => onSelect(suggestion)}\n            className={`text-left p-3 rounded-lg border transition-all ${\n              suggestion.category === 'idea'\n                ? 'bg-gradient-to-r from-purple-50 to-pink-50 border-purple-200 hover:border-purple-400'\n                : suggestion.category === 'whatif'\n                ? 'bg-gradient-to-r from-orange-50 to-yellow-50 border-orange-200 hover:border-orange-400'\n                : 'bg-gradient-to-r from-blue-50 to-indigo-50 border-primary-200 hover:border-primary-400'\n            }`}\n          >\n            <div className=\"flex items-start gap-2\">\n              <ChevronRight className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-700\">{suggestion.text}</span>\n            </div>\n          </motion.button>\n        ))}\n      </div>\n    </motion.div>\n  );\n};\n\n// Help content component for inline display\nexport const InlineHelpContent: React.FC<{\n  title: string;\n  content: string;\n  tips?: string[];\n  examples?: string[];\n  onDismiss: () => void;\n}> = ({ title, content, tips, examples, onDismiss }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: -10, height: 0 }}\n      animate={{ opacity: 1, y: 0, height: 'auto' }}\n      exit={{ opacity: 0, y: -10, height: 0 }}\n      className=\"mt-3 p-4 bg-gradient-to-br from-blue-50 to-white rounded-xl border border-primary-200 shadow-sm\"\n    >\n      <div className=\"flex items-start justify-between mb-2\">\n        <div className=\"flex items-center gap-2\">\n          <HelpCircle className=\"w-4 h-4 text-primary-600\" />\n          <h4 className=\"text-sm font-semibold text-gray-800\">{title}</h4>\n        </div>\n        <button\n          onClick={onDismiss}\n          className=\"p-1 hover:bg-primary-100 rounded-lg transition-colors\"\n          aria-label=\"Dismiss help\"\n        >\n          <X className=\"w-4 h-4 text-gray-500\" />\n        </button>\n      </div>\n      \n      <p className=\"text-sm text-gray-600 mb-3\">{content}</p>\n      \n      {tips && tips.length > 0 && (\n        <div className=\"space-y-1 mb-3\">\n          <span className=\"text-xs font-semibold text-gray-700 uppercase tracking-wider\">Tips:</span>\n          {tips.map((tip, index) => (\n            <div key={index} className=\"flex items-start gap-2\">\n              <span className=\"text-primary-500 mt-0.5\">•</span>\n              <span className=\"text-sm text-gray-600\">{tip}</span>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {examples && examples.length > 0 && (\n        <div className=\"space-y-1 pt-2 border-t border-primary-100\">\n          <span className=\"text-xs font-semibold text-gray-700 uppercase tracking-wider\">Examples:</span>\n          {examples.map((example, index) => (\n            <div key={index} className=\"flex items-start gap-2\">\n              <ChevronRight className=\"w-3 h-3 text-primary-400 mt-0.5 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600 italic\">{example}</span>\n            </div>\n          ))}\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\n// Main UI Guidance System component\nexport const UIGuidanceSystemV2: React.FC<UIGuidanceSystemV2Props> = ({\n  currentStage,\n  currentStep,\n  userContext,\n  onSuggestionSelect,\n  inputValue = '',\n  lastInteractionTime = Date.now(),\n  isWaiting = false,\n  messageId,\n  messageContent\n}) => {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n  \n  // Use the custom idle detection hook\n  const { isIdle, idleSeconds } = useIdleDetection(lastInteractionTime, {\n    threshold: 15000,\n    onIdle: () => {\n      // Auto-show suggestions when idle (if not already showing something)\n      if (!showHelp && !showSuggestions && !inputValue && !isWaiting) {\n        setShowSuggestions(true);\n      }\n    },\n    disabled: isWaiting || inputValue.length > 0\n  });\n  \n  // Generate contextual suggestions\n  const generateSuggestions = useCallback((): Suggestion[] => {\n    // Use the improved suggestion system\n    const suggestions = getStageSuggestions(currentStage, currentStep);\n    \n    // If no suggestions found, get random ones for the stage\n    if (suggestions.length === 0) {\n      return getRandomSuggestions(currentStage, 6);\n    }\n    \n    // Personalize based on context if needed\n    if (userContext?.subject) {\n      // Future enhancement: filter or modify suggestions based on subject\n      // For now, return suggestions as is\n    }\n    \n    return suggestions;\n  }, [currentStage, currentStep, userContext]);\n  \n  // Generate help content using the context-aware system\n  const getHelpContentForDisplay = useCallback(() => {\n    // Use the context-aware help system\n    if (messageContent) {\n      return getContextualHelp(messageContent, currentStage);\n    }\n    return getHelpContent(currentStage, currentStep);\n  }, [currentStage, currentStep, messageContent]);\n  \n  const suggestions = generateSuggestions();\n  const helpContent = getHelpContentForDisplay();\n  \n  // Hide suggestions when user types\n  useEffect(() => {\n    if (inputValue.length > 0) {\n      setShowSuggestions(false);\n      setShowHelp(false);\n    }\n  }, [inputValue]);\n  \n  // This component returns the inline elements to be rendered within chat messages\n  return (\n    <div className=\"space-y-2\">\n      {/* Action buttons row */}\n      <div className=\"flex gap-2 mt-2\">\n        <InlineActionButton\n          type=\"ideas\"\n          onClick={() => {\n            setShowSuggestions(!showSuggestions);\n            setShowHelp(false);\n          }}\n        />\n        <InlineActionButton\n          type=\"help\"\n          onClick={() => {\n            setShowHelp(!showHelp);\n            setShowSuggestions(false);\n          }}\n        />\n        \n        {/* Show idle indicator */}\n        {isIdle && !showSuggestions && !showHelp && (\n          <motion.span\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"ml-2 text-xs text-gray-500 italic\"\n          >\n            Need help? Click a button above\n          </motion.span>\n        )}\n      </div>\n      \n      {/* Suggestions display */}\n      <AnimatePresence>\n        {showSuggestions && suggestions.length > 0 && (\n          <InlineSuggestionCards\n            suggestions={suggestions}\n            onSelect={(suggestion) => {\n              onSuggestionSelect(suggestion.text);\n              setShowSuggestions(false);\n            }}\n            onDismiss={() => setShowSuggestions(false)}\n          />\n        )}\n      </AnimatePresence>\n      \n      {/* Help display */}\n      <AnimatePresence>\n        {showHelp && (\n          <InlineHelpContent\n            title={helpContent.title}\n            content={helpContent.description}\n            tips={helpContent.tips}\n            examples={helpContent.examples}\n            onDismiss={() => setShowHelp(false)}\n          />\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default UIGuidanceSystemV2;","/**\n * StageInitiatorCards.tsx\n * Stage initiator cards that help users start each major stage of the curriculum design process\n * \n * Features:\n * - Color-coded cards by type (blue for ideation, orange for what-if, purple for resources)\n * - Contextual cards based on current stage (WELCOME, IDEATION, JOURNEY, DELIVERABLES)\n * - Click to populate chat input with starter prompts\n * - Smooth animations with framer-motion\n * - Responsive grid layout\n * - Integration with feature flag 'stageInitiatorCards'\n * \n * Usage:\n * - Shows automatically in ChatbotFirstInterfaceFixed when conditions are met\n * - Cards appear when user needs guidance (few messages, no typing, appropriate stage)\n * - Replaces placeholder values like [subject] and [duration] with actual context data\n */\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Lightbulb, \n  HelpCircle, \n  Target, \n  Clock,\n  ChevronRight,\n  Sparkles\n} from 'lucide-react';\n\ninterface StageInitiatorCard {\n  id: string;\n  title: string;\n  description: string;\n  example: string;\n  icon: React.ReactNode;\n  color: 'blue' | 'orange' | 'purple';\n  starterPrompt: string;\n}\n\ninterface StageInitiatorCardsProps {\n  currentStage: string;\n  onCardClick: (prompt: string) => void;\n  className?: string;\n}\n\nconst STAGE_CARDS: Record<string, StageInitiatorCard[]> = {\n  WELCOME: [\n    {\n      id: 'big-idea-starter',\n      title: 'Big Idea Starter',\n      description: 'Begin with a compelling theme or concept that will anchor your entire learning experience',\n      example: 'e.g., \"Climate change impacts on our local community\"',\n      icon: <Lightbulb className=\"w-5 h-5\" />,\n      color: 'blue',\n      starterPrompt: 'I want to explore a big idea around [topic]. Could you help me develop a compelling theme that will engage my students and connect to real-world issues?'\n    },\n    {\n      id: 'essential-question-builder',\n      title: 'Essential Question Builder',\n      description: 'Craft an open-ended question that drives inquiry and critical thinking throughout the project',\n      example: 'e.g., \"How might we reduce our school\\'s environmental impact?\"',\n      icon: <HelpCircle className=\"w-5 h-5\" />,\n      color: 'orange',\n      starterPrompt: 'I need help creating an essential question that will drive student inquiry. My subject is [subject] and I want students to explore [topic/theme].'\n    }\n  ],\n  IDEATION: [\n    {\n      id: 'big-idea-starter',\n      title: 'Big Idea Starter',\n      description: 'Begin with a compelling theme or concept that will anchor your entire learning experience',\n      example: 'e.g., \"Climate change impacts on our local community\"',\n      icon: <Lightbulb className=\"w-5 h-5\" />,\n      color: 'blue',\n      starterPrompt: 'I want to explore a big idea around [topic]. Could you help me develop a compelling theme that will engage my students and connect to real-world issues?'\n    },\n    {\n      id: 'essential-question-builder',\n      title: 'Essential Question Builder',\n      description: 'Craft an open-ended question that drives inquiry and critical thinking throughout the project',\n      example: 'e.g., \"How might we reduce our school\\'s environmental impact?\"',\n      icon: <HelpCircle className=\"w-5 h-5\" />,\n      color: 'orange',\n      starterPrompt: 'I need help creating an essential question that will drive student inquiry. My subject is [subject] and I want students to explore [topic/theme].'\n    },\n    {\n      id: 'challenge-designer',\n      title: 'Challenge Designer',\n      description: 'Define an authentic problem or challenge that students will work to solve',\n      example: 'e.g., \"Design a solution to reduce food waste in our cafeteria\"',\n      icon: <Target className=\"w-5 h-5\" />,\n      color: 'purple',\n      starterPrompt: 'I want to create an authentic challenge for my students to solve. The challenge should connect to [topic/theme] and allow them to make a real impact.'\n    }\n  ],\n  JOURNEY: [\n    {\n      id: 'phase-timeline-creator',\n      title: 'Phase Timeline Creator',\n      description: 'Structure how students will move through the creative process phases',\n      example: 'e.g., \"Week 1-2: Analyze, Week 3: Brainstorm, Week 4-5: Prototype\"',\n      icon: <Clock className=\"w-5 h-5\" />,\n      color: 'blue',\n      starterPrompt: 'I need help structuring the learning journey phases for my project. My project duration is [duration] and I want students to progress through Analyze, Brainstorm, Prototype, and Evaluate phases.'\n    },\n    {\n      id: 'challenge-designer',\n      title: 'Challenge Designer',\n      description: 'Define an authentic problem or challenge that students will work to solve',\n      example: 'e.g., \"Design a solution to reduce food waste in our cafeteria\"',\n      icon: <Target className=\"w-5 h-5\" />,\n      color: 'purple',\n      starterPrompt: 'I want to create an authentic challenge for my students to solve. The challenge should connect to [topic/theme] and allow them to make a real impact.'\n    }\n  ],\n  DELIVERABLES: [\n    {\n      id: 'phase-timeline-creator',\n      title: 'Phase Timeline Creator',\n      description: 'Structure how students will move through the creative process phases',\n      example: 'e.g., \"Week 1-2: Analyze, Week 3: Brainstorm, Week 4-5: Prototype\"',\n      icon: <Clock className=\"w-5 h-5\" />,\n      color: 'blue',\n      starterPrompt: 'I need help structuring the learning journey phases for my project. My project duration is [duration] and I want students to progress through Analyze, Brainstorm, Prototype, and Evaluate phases.'\n    }\n  ]\n};\n\nconst getColorClasses = (color: 'blue' | 'orange' | 'purple') => {\n  switch (color) {\n    case 'blue':\n      return {\n        bg: 'bg-gradient-to-br from-primary-50 to-primary-100 dark:from-primary-900/20 dark:to-primary-800/20',\n        border: 'border-primary-200 dark:border-primary-700',\n        hoverBorder: 'hover:border-primary-400 dark:hover:border-primary-600',\n        icon: 'text-primary-600 dark:text-primary-400',\n        title: 'text-primary-900 dark:text-primary-100',\n        shadow: 'hover:shadow-primary/20'\n      };\n    case 'orange':\n      return {\n        bg: 'bg-gradient-to-br from-coral-50 to-coral-100 dark:from-coral-900/20 dark:to-coral-800/20',\n        border: 'border-coral-200 dark:border-coral-700',\n        hoverBorder: 'hover:border-coral-400 dark:hover:border-coral-600',\n        icon: 'text-coral-600 dark:text-coral-400',\n        title: 'text-coral-900 dark:text-coral-100',\n        shadow: 'hover:shadow-coral/20'\n      };\n    case 'purple':\n      return {\n        bg: 'bg-gradient-to-br from-ai-50 to-ai-100 dark:from-ai-900/20 dark:to-ai-800/20',\n        border: 'border-ai-200 dark:border-ai-700',\n        hoverBorder: 'hover:border-ai-400 dark:hover:border-ai-600',\n        icon: 'text-ai-600 dark:text-ai-400',\n        title: 'text-ai-900 dark:text-ai-100',\n        shadow: 'hover:shadow-ai/20'\n      };\n    default:\n      return {\n        bg: 'bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900/20 dark:to-gray-800/20',\n        border: 'border-gray-200 dark:border-gray-700',\n        hoverBorder: 'hover:border-gray-400 dark:hover:border-gray-600',\n        icon: 'text-gray-600 dark:text-gray-400',\n        title: 'text-gray-900 dark:text-gray-100',\n        shadow: 'hover:shadow-gray/20'\n      };\n  }\n};\n\nexport const StageInitiatorCards: React.FC<StageInitiatorCardsProps> = ({\n  currentStage,\n  onCardClick,\n  className = ''\n}) => {\n  const cards = STAGE_CARDS[currentStage] || [];\n\n  if (cards.length === 0) {\n    return null;\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className={`space-y-4 ${className}`}\n    >\n      {/* Header */}\n      <div className=\"flex items-center gap-2 mb-4\">\n        <Sparkles className=\"w-5 h-5 text-ai-600 dark:text-ai-400\" />\n        <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Get Started</h3>\n        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n          Choose a starting point for your curriculum design\n        </span>\n      </div>\n\n      {/* Cards Grid */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {cards.map((card, index) => {\n          const colorClasses = getColorClasses(card.color);\n          \n          return (\n            <motion.button\n              key={card.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: index * 0.1 }}\n              whileHover={{ scale: 1.02, y: -2 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={() => onCardClick(card.starterPrompt)}\n              className={`\n                text-left p-6 rounded-2xl border-2 transition-all duration-300\n                ${colorClasses.bg} ${colorClasses.border} ${colorClasses.hoverBorder}\n                hover:shadow-elevation-2 ${colorClasses.shadow}\n                focus:outline-none focus:ring-2 focus:ring-ai-500 focus:ring-offset-2\n                backdrop-blur-sm\n              `}\n            >\n              {/* Icon and Title */}\n              <div className=\"flex items-start gap-3 mb-3\">\n                <div className={`p-2 rounded-lg bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm shadow-sm ${colorClasses.icon}`}>\n                  {card.icon}\n                </div>\n                <div className=\"flex-1\">\n                  <h4 className={`font-semibold text-sm ${colorClasses.title}`}>\n                    {card.title}\n                  </h4>\n                </div>\n                <ChevronRight className=\"w-4 h-4 text-gray-400 dark:text-gray-500 opacity-0 group-hover:opacity-100 transition-opacity\" />\n              </div>\n\n              {/* Description */}\n              <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-3 leading-relaxed\">\n                {card.description}\n              </p>\n\n              {/* Example */}\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 italic\">\n                {card.example}\n              </div>\n\n              {/* Hover indicator */}\n              <div className=\"flex items-center justify-between mt-4 pt-3 border-t border-gray-200/50 dark:border-gray-700/50\">\n                <span className=\"text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  Click to start\n                </span>\n                <motion.div\n                  initial={{ x: -5, opacity: 0 }}\n                  whileHover={{ x: 0, opacity: 1 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"group\"\n                >\n                  <ChevronRight className=\"w-4 h-4 text-gray-400 dark:text-gray-500 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n                </motion.div>\n              </div>\n            </motion.button>\n          );\n        })}\n      </div>\n\n      {/* Help Text */}\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 0.4 }}\n        className=\"text-center mt-6\"\n      >\n        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n          These prompts will help you get started. You can always customize them or start with your own approach.\n        </p>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default StageInitiatorCards;","/**\n * MessageRenderer.tsx\n * \n * Rich text rendering for chat messages with markdown support\n * Implements comprehensive security, performance optimization, and accessibility\n */\n\nimport React, { useMemo } from 'react';\nimport { StreamingText } from '../ui/TypewriterText';\n\n// Security configuration for rehype-sanitize\nconst sanitizeSchema = {\n  protocols: {\n    href: ['http', 'https', 'mailto'],\n    src: ['http', 'https']\n  },\n  tagNames: [\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n    'p', 'br', 'strong', 'em', 'u', 'del', 'ins',\n    'ul', 'ol', 'li', 'dl', 'dt', 'dd',\n    'blockquote', 'pre', 'code',\n    'table', 'thead', 'tbody', 'tr', 'th', 'td',\n    'a', 'img', 'hr'\n  ],\n  attributes: {\n    '*': ['className', 'id'],\n    'a': ['href', 'title', 'target', 'rel'],\n    'img': ['src', 'alt', 'title', 'width', 'height'],\n    'pre': ['className'],\n    'code': ['className']\n  },\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id']\n};\n\ninterface MessageRendererProps {\n  content: string;\n  role: 'user' | 'assistant' | 'system';\n  maxLength?: number; // Security: Limit content length\n}\n\n// Content length limits for DoS prevention\nconst MAX_CONTENT_LENGTH = 50000; // 50KB max\nconst MAX_CODE_BLOCK_LENGTH = 10000; // 10KB max for code blocks\n\n// Utility function to truncate content safely\nconst truncateContent = (content: string, maxLength: number = MAX_CONTENT_LENGTH): string => {\n  if (content.length <= maxLength) return content;\n  \n  // Find a safe truncation point (end of sentence or paragraph)\n  const truncated = content.substring(0, maxLength);\n  const lastSentence = truncated.lastIndexOf('.');\n  const lastParagraph = truncated.lastIndexOf('\\n\\n');\n  \n  const cutoff = Math.max(lastSentence, lastParagraph);\n  if (cutoff > maxLength * 0.8) { // Only use if we're not cutting too much\n    return truncated.substring(0, cutoff + 1) + '\\n\\n*[Content truncated for length]*';\n  }\n  \n  return truncated + '\\n\\n*[Content truncated for length]*';\n};\n\n// Validate and sanitize URLs\nconst isValidUrl = (url: string): boolean => {\n  try {\n    const urlObj = new URL(url);\n    return ['http:', 'https:', 'mailto:'].includes(urlObj.protocol);\n  } catch {\n    return false;\n  }\n};\n\nexport const MessageRenderer: React.FC<MessageRendererProps> = ({ \n  content, \n  role, \n  maxLength = MAX_CONTENT_LENGTH \n}) => {\n  const isAssistant = role === 'assistant';\n  \n  // Detect if content needs markdown processing\n  const hasMarkdown = useMemo(() => {\n    if (!content || role !== 'assistant') return false;\n    return /[#*`_\\[\\]]/g.test(content) || content.includes('```') || content.includes('\\n-') || content.includes('\\n1.');\n  }, [content, role]);\n\n  // Memoize processed content for performance\n  const processedContent = useMemo(() => {\n    if (!content) return '';\n    return truncateContent(content.trim(), maxLength);\n  }, [content, maxLength]);\n  \n  // Early return for empty content\n  if (!processedContent) {\n    return <div className=\"text-gray-400 italic\">No content</div>;\n  }\n  \n  return (\n    <div \n      className=\"message-content\"\n      role=\"region\"\n      aria-label={`${role} message`}\n    >\n      {isAssistant ? (\n        <StreamingText\n          content={processedContent}\n          isMarkdown={true}\n          sanitizeSchema={sanitizeSchema}\n          className=\"prose prose-sm max-w-none prose-gray dark:prose-invert text-gray-800 dark:text-gray-100\"\n        />\n      ) : (\n        <div className=\"text-gray-800 dark:text-gray-200\">{processedContent}</div>\n      )}\n    </div>\n  );\n};\n","/**\n * ContextualHelp.tsx\n * \n * Context-aware help panel that provides relevant guidance\n */\n\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  HelpCircle, \n  X, \n  Lightbulb, \n  BookOpen, \n  ChevronRight,\n  ExternalLink \n} from 'lucide-react';\nimport { getHelpContent } from '../../utils/helpContent';\n\ninterface ContextualHelpProps {\n  stage: string;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const ContextualHelp: React.FC<ContextualHelpProps> = ({\n  stage,\n  isOpen,\n  onClose\n}) => {\n  const [expandedSection, setExpandedSection] = useState<string | null>('tips');\n  const helpContent = getHelpContent(stage);\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0, x: 300 }}\n        animate={{ opacity: 1, x: 0 }}\n        exit={{ opacity: 0, x: 300 }}\n        className=\"fixed right-4 bottom-24 w-80 bg-white dark:bg-gray-900 rounded-2xl shadow-elevation-3 \n                   border border-gray-200 dark:border-gray-700 overflow-hidden z-40\"\n      >\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-primary-50 to-primary-100 dark:from-primary-900/20 dark:to-primary-800/20 px-4 py-3 \n                        flex items-center justify-between border-b border-primary-200 dark:border-primary-700\">\n          <div className=\"flex items-center gap-2\">\n            <HelpCircle className=\"w-5 h-5 text-primary-600 dark:text-primary-400\" />\n            <h3 className=\"font-semibold text-primary-900 dark:text-primary-100\">{helpContent.title}</h3>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-1 hover:bg-primary-200 dark:hover:bg-primary-800 rounded-lg transition-colors\"\n          >\n            <X className=\"w-4 h-4 text-primary-600 dark:text-primary-400\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"max-h-96 overflow-y-auto\">\n          {/* Tips Section */}\n          <div className=\"border-b border-gray-100 dark:border-gray-800\">\n            <button\n              onClick={() => setExpandedSection(expandedSection === 'tips' ? null : 'tips')}\n              className=\"w-full px-4 py-3 flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-800 \n                       transition-colors text-left\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Lightbulb className=\"w-4 h-4 text-warning-600 dark:text-warning-400\" />\n                <span className=\"font-medium text-gray-900 dark:text-gray-100\">Tips</span>\n              </div>\n              <ChevronRight \n                className={`w-4 h-4 text-gray-400 dark:text-gray-500 transition-transform ${\n                  expandedSection === 'tips' ? 'rotate-90' : ''\n                }`} \n              />\n            </button>\n            <AnimatePresence>\n              {expandedSection === 'tips' && (\n                <motion.div\n                  initial={{ height: 0 }}\n                  animate={{ height: 'auto' }}\n                  exit={{ height: 0 }}\n                  className=\"overflow-hidden\"\n                >\n                  <div className=\"px-4 pb-3 space-y-2\">\n                    {helpContent.tips.map((tip, index) => (\n                      <div key={index} className=\"flex items-start gap-2\">\n                        <div className=\"w-1.5 h-1.5 rounded-full bg-primary-400 dark:bg-primary-500 mt-1.5 flex-shrink-0\" />\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300\">{tip}</p>\n                      </div>\n                    ))}\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Examples Section */}\n          {helpContent.examples && helpContent.examples.length > 0 && (\n            <div className=\"border-b border-gray-100 dark:border-gray-800\">\n              <button\n                onClick={() => setExpandedSection(expandedSection === 'examples' ? null : 'examples')}\n                className=\"w-full px-4 py-3 flex items-center justify-between hover:bg-gray-50 \n                         transition-colors text-left\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <BookOpen className=\"w-4 h-4 text-success-600 dark:text-success-400\" />\n                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">Examples</span>\n                </div>\n                <ChevronRight \n                  className={`w-4 h-4 text-gray-400 dark:text-gray-500 transition-transform ${\n                    expandedSection === 'examples' ? 'rotate-90' : ''\n                  }`} \n                />\n              </button>\n              <AnimatePresence>\n                {expandedSection === 'examples' && (\n                  <motion.div\n                    initial={{ height: 0 }}\n                    animate={{ height: 'auto' }}\n                    exit={{ height: 0 }}\n                    className=\"overflow-hidden\"\n                  >\n                    <div className=\"px-4 pb-3 space-y-2\">\n                      {helpContent.examples.map((example, index) => (\n                        <div \n                          key={index} \n                          className=\"p-2 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\"\n                        >\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300 italic\">\"{example}\"</p>\n                        </div>\n                      ))}\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          )}\n\n          {/* Resources Section */}\n          {helpContent.resources && helpContent.resources.length > 0 && (\n            <div>\n              <button\n                onClick={() => setExpandedSection(expandedSection === 'resources' ? null : 'resources')}\n                className=\"w-full px-4 py-3 flex items-center justify-between hover:bg-gray-50 \n                         transition-colors text-left\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <ExternalLink className=\"w-4 h-4 text-ai-600 dark:text-ai-400\" />\n                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">Resources</span>\n                </div>\n                <ChevronRight \n                  className={`w-4 h-4 text-gray-400 dark:text-gray-500 transition-transform ${\n                    expandedSection === 'resources' ? 'rotate-90' : ''\n                  }`} \n                />\n              </button>\n              <AnimatePresence>\n                {expandedSection === 'resources' && (\n                  <motion.div\n                    initial={{ height: 0 }}\n                    animate={{ height: 'auto' }}\n                    exit={{ height: 0 }}\n                    className=\"overflow-hidden\"\n                  >\n                    <div className=\"px-4 pb-3 space-y-2\">\n                      {helpContent.resources.map((resource, index) => (\n                        <a\n                          key={index}\n                          href={resource.url || '#'}\n                          className=\"flex items-center justify-between p-2 hover:bg-primary-50 dark:hover:bg-primary-900/20 \n                                   rounded-lg transition-colors group\"\n                        >\n                          <span className=\"text-sm text-primary-600 dark:text-primary-400 group-hover:text-primary-700 dark:group-hover:text-primary-300\">\n                            {resource.label}\n                          </span>\n                          <ExternalLink className=\"w-3 h-3 text-primary-400 dark:text-primary-500\" />\n                        </a>\n                      ))}\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-4 py-3 bg-gray-50 dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700\">\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n            Stage: {stage.replace(/_/g, ' ').toLowerCase()}\n          </p>\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\n// Quick help tooltip component\nexport const QuickHelp: React.FC<{ stage: string }> = ({ stage }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const help = getHelpContent(stage);\n\n  return (\n    <div className=\"relative\">\n      <button\n        onMouseEnter={() => setShowTooltip(true)}\n        onMouseLeave={() => setShowTooltip(false)}\n        className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors\"\n      >\n        <HelpCircle className=\"w-4 h-4 text-gray-400 dark:text-gray-500\" />\n      </button>\n      \n      <AnimatePresence>\n        {showTooltip && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.95 }}\n            className=\"absolute right-0 top-8 w-64 p-3 bg-white dark:bg-gray-900 rounded-lg shadow-elevation-2 \n                     border border-gray-200 dark:border-gray-700 z-50\"\n          >\n            <p className=\"text-xs font-medium text-gray-700 dark:text-gray-300 mb-2\">{help.title}</p>\n            <ul className=\"space-y-1\">\n              {help.tips.slice(0, 2).map((tip, index) => (\n                <li key={index} className=\"text-xs text-gray-600 dark:text-gray-400 flex items-start gap-1\">\n                  <span className=\"text-primary-500 dark:text-primary-400\">•</span>\n                  <span>{tip}</span>\n                </li>\n              ))}\n            </ul>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default ContextualHelp;"],"file":"assets/chat-feature-n0uOpGgb.js"}